

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Fri Dec 10 19:45:39 2021

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33  0000                     
    34                           ; Version 2.20
    35                           ; Generated 12/02/2020 GMT
    36                           ; 
    37                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F4520 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     
    69                           	psect	smallconst
    70  000600                     __psmallconst:
    71                           	callstack 0
    72  000600  00                 	db	0
    73  000601                     _linha:
    74                           	callstack 0
    75  000601  01                 	db	1
    76  000602  02                 	db	2
    77  000603  04                 	db	4
    78  000604  00                 	db	0
    79  000605                     __end_of_linha:
    80                           	callstack 0
    81  0000                     _ADRESL	set	4035
    82  0000                     _ADRESH	set	4036
    83  0000                     _ADCON0bits	set	4034
    84  0000                     _ADCON2	set	4032
    85  0000                     _ADCON0	set	4034
    86  0000                     _PORTDbits	set	3971
    87  0000                     _PORTB	set	3969
    88  0000                     _PORTBbits	set	3969
    89  0000                     _TRISEbits	set	3990
    90  0000                     _ADCON1	set	4033
    91  0000                     _TRISC	set	3988
    92  0000                     _TRISE	set	3990
    93  0000                     _TRISD	set	3989
    94  0000                     _TRISB	set	3987
    95  0000                     _TRISA	set	3986
    96  0000                     _PORTCbits	set	3970
    97  0000                     _TRISCbits	set	3988
    98  0000                     _PORTEbits	set	3972
    99  0000                     _PORTD	set	3971
   100  000605                     STR_22:
   101  000605  20                 	db	32
   102  000606  53                 	db	83	;'S'
   103  000607  65                 	db	101	;'e'
   104  000608  6E                 	db	110	;'n'
   105  000609  68                 	db	104	;'h'
   106  00060A  61                 	db	97	;'a'
   107  00060B  20                 	db	32
   108  00060C  69                 	db	105	;'i'
   109  00060D  6E                 	db	110	;'n'
   110  00060E  63                 	db	99	;'c'
   111  00060F  6F                 	db	111	;'o'
   112  000610  72                 	db	114	;'r'
   113  000611  72                 	db	114	;'r'
   114  000612  65                 	db	101	;'e'
   115  000613  74                 	db	116	;'t'
   116  000614  61                 	db	97	;'a'
   117  000615  20                 	db	32
   118  000616  00                 	db	0
   119  000617                     STR_1:
   120  000617  45                 	db	69	;'E'
   121  000618  73                 	db	115	;'s'
   122  000619  74                 	db	116	;'t'
   123  00061A  61                 	db	97	;'a'
   124  00061B  64                 	db	100	;'d'
   125  00061C  6F                 	db	111	;'o'
   126  00061D  3A                 	db	58	;':'
   127  00061E  20                 	db	32
   128  00061F  41                 	db	65	;'A'
   129  000620  75                 	db	117	;'u'
   130  000621  74                 	db	116	;'t'
   131  000622  6F                 	db	111	;'o'
   132  000623  20                 	db	32
   133  000624  20                 	db	32
   134  000625  20                 	db	32
   135  000626  20                 	db	32
   136  000627  00                 	db	0
   137  000628                     STR_10:
   138  000628  45                 	db	69	;'E'
   139  000629  73                 	db	115	;'s'
   140  00062A  74                 	db	116	;'t'
   141  00062B  61                 	db	97	;'a'
   142  00062C  64                 	db	100	;'d'
   143  00062D  6F                 	db	111	;'o'
   144  00062E  3A                 	db	58	;':'
   145  00062F  20                 	db	32
   146  000630  4D                 	db	77	;'M'
   147  000631  61                 	db	97	;'a'
   148  000632  6E                 	db	110	;'n'
   149  000633  75                 	db	117	;'u'
   150  000634  61                 	db	97	;'a'
   151  000635  6C                 	db	108	;'l'
   152  000636  20                 	db	32
   153  000637  20                 	db	32
   154  000638  00                 	db	0
   155  000639                     STR_20:
   156  000639  20                 	db	32
   157  00063A  53                 	db	83	;'S'
   158  00063B  65                 	db	101	;'e'
   159  00063C  6E                 	db	110	;'n'
   160  00063D  68                 	db	104	;'h'
   161  00063E  61                 	db	97	;'a'
   162  00063F  20                 	db	32
   163  000640  63                 	db	99	;'c'
   164  000641  6F                 	db	111	;'o'
   165  000642  72                 	db	114	;'r'
   166  000643  72                 	db	114	;'r'
   167  000644  65                 	db	101	;'e'
   168  000645  74                 	db	116	;'t'
   169  000646  61                 	db	97	;'a'
   170  000647  20                 	db	32
   171  000648  00                 	db	0
   172  000649                     STR_18:
   173  000649  44                 	db	68	;'D'
   174  00064A  69                 	db	105	;'i'
   175  00064B  67                 	db	103	;'g'
   176  00064C  69                 	db	105	;'i'
   177  00064D  74                 	db	116	;'t'
   178  00064E  65                 	db	101	;'e'
   179  00064F  20                 	db	32
   180  000650  61                 	db	97	;'a'
   181  000651  20                 	db	32
   182  000652  73                 	db	115	;'s'
   183  000653  65                 	db	101	;'e'
   184  000654  6E                 	db	110	;'n'
   185  000655  68                 	db	104	;'h'
   186  000656  61                 	db	97	;'a'
   187  000657  3A                 	db	58	;':'
   188  000658  00                 	db	0
   189  000659                     STR_24:
   190  000659  44                 	db	68	;'D'
   191  00065A  69                 	db	105	;'i'
   192  00065B  67                 	db	103	;'g'
   193  00065C  69                 	db	105	;'i'
   194  00065D  74                 	db	116	;'t'
   195  00065E  65                 	db	101	;'e'
   196  00065F  20                 	db	32
   197  000660  73                 	db	115	;'s'
   198  000661  65                 	db	101	;'e'
   199  000662  6E                 	db	110	;'n'
   200  000663  68                 	db	104	;'h'
   201  000664  61                 	db	97	;'a'
   202  000665  00                 	db	0
   203  000666                     STR_5:
   204  000666  4A                 	db	74	;'J'
   205  000667  61                 	db	97	;'a'
   206  000668  6E                 	db	110	;'n'
   207  000669  65                 	db	101	;'e'
   208  00066A  6C                 	db	108	;'l'
   209  00066B  61                 	db	97	;'a'
   210  00066C  3A                 	db	58	;':'
   211  00066D  20                 	db	32
   212  00066E  00                 	db	0
   213  00066F                     STR_9:
   214  00066F  46                 	db	70	;'F'
   215  000670  65                 	db	101	;'e'
   216  000671  63                 	db	99	;'c'
   217  000672  68                 	db	104	;'h'
   218  000673  61                 	db	97	;'a'
   219  000674  64                 	db	100	;'d'
   220  000675  6F                 	db	111	;'o'
   221  000676  20                 	db	32
   222  000677  00                 	db	0
   223  000678                     STR_8:
   224  000678  46                 	db	70	;'F'
   225  000679  65                 	db	101	;'e'
   226  00067A  63                 	db	99	;'c'
   227  00067B  68                 	db	104	;'h'
   228  00067C  61                 	db	97	;'a'
   229  00067D  6E                 	db	110	;'n'
   230  00067E  64                 	db	100	;'d'
   231  00067F  6F                 	db	111	;'o'
   232  000680  00                 	db	0
   233  000681                     STR_7:
   234  000681  41                 	db	65	;'A'
   235  000682  62                 	db	98	;'b'
   236  000683  65                 	db	101	;'e'
   237  000684  72                 	db	114	;'r'
   238  000685  74                 	db	116	;'t'
   239  000686  61                 	db	97	;'a'
   240  000687  20                 	db	32
   241  000688  00                 	db	0
   242  000689                     STR_25:
   243  000689  61                 	db	97	;'a'
   244  00068A  6E                 	db	110	;'n'
   245  00068B  74                 	db	116	;'t'
   246  00068C  69                 	db	105	;'i'
   247  00068D  67                 	db	103	;'g'
   248  00068E  61                 	db	97	;'a'
   249  00068F  3A                 	db	58	;':'
   250  000690  00                 	db	0
   251  000691                     STR_6:
   252  000691  41                 	db	65	;'A'
   253  000692  62                 	db	98	;'b'
   254  000693  72                 	db	114	;'r'
   255  000694  69                 	db	105	;'i'
   256  000695  6E                 	db	110	;'n'
   257  000696  64                 	db	100	;'d'
   258  000697  6F                 	db	111	;'o'
   259  000698  00                 	db	0
   260  000699                     STR_3:
   261  000699  48                 	db	72	;'H'
   262  00069A  6F                 	db	111	;'o'
   263  00069B  72                 	db	114	;'r'
   264  00069C  61                 	db	97	;'a'
   265  00069D  3A                 	db	58	;':'
   266  00069E  20                 	db	32
   267  00069F  00                 	db	0
   268  0006A0                     STR_28:
   269  0006A0  6E                 	db	110	;'n'
   270  0006A1  6F                 	db	111	;'o'
   271  0006A2  76                 	db	118	;'v'
   272  0006A3  61                 	db	97	;'a'
   273  0006A4  3A                 	db	58	;':'
   274  0006A5  00                 	db	0
   275  0006A6                     STR_19:
   276  0006A6  2A                 	db	42
   277  0006A7  00                 	db	0
   278  0006A8  00                 	db	0	; dummy byte at the end
   279  0000                     
   280                           ; #config settings
   281                           
   282                           	psect	cinit
   283  00173C                     __pcinit:
   284                           	callstack 0
   285  00173C                     start_initialization:
   286                           	callstack 0
   287  00173C                     __initialization:
   288                           	callstack 0
   289                           
   290                           ; Clear objects allocated to COMRAM (34 bytes)
   291  00173C  EE00  F001         	lfsr	0,__pbssCOMRAM
   292  001740  0E22               	movlw	34
   293  001742                     clear_0:
   294  001742  6AEE               	clrf	postinc0,c
   295  001744  06E8               	decf	wreg,f,c
   296  001746  E1FD               	bnz	clear_0
   297  001748                     end_of_initialization:
   298                           	callstack 0
   299  001748                     __end_of__initialization:
   300                           	callstack 0
   301  001748  0E00               	movlw	low (__Lmediumconst shr (0+16))
   302  00174A  6EF8               	movwf	tblptru,c
   303  00174C  0100               	movlb	0
   304  00174E  EF55  F003         	goto	_main	;jump to C main() function
   305                           
   306                           	psect	bssCOMRAM
   307  000001                     __pbssCOMRAM:
   308                           	callstack 0
   309  000001                     _novo:
   310                           	callstack 0
   311  000001                     	ds	10
   312  00000B                     _date:
   313                           	callstack 0
   314  00000B                     	ds	10
   315  000015                     _cond:
   316                           	callstack 0
   317  000015                     	ds	2
   318  000017                     _est:
   319                           	callstack 0
   320  000017                     	ds	2
   321  000019                     _time:
   322                           	callstack 0
   323  000019                     	ds	10
   324                           
   325                           	psect	cstackCOMRAM
   326  000023                     __pcstackCOMRAM:
   327                           	callstack 0
   328  000023                     ??_tc_tecla:
   329  000023                     ??_i2c_wb:
   330  000023                     ??_i2c_rb:
   331  000023                     lcd_wr@val:
   332                           	callstack 0
   333  000023                     getd@nn:
   334                           	callstack 0
   335  000023                     getu@nn:
   336                           	callstack 0
   337                           
   338                           ; 1 bytes @ 0x0
   339  000023                     	ds	1
   340  000024                     ??_lcd_cmd:
   341  000024                     ??_lcd_dat:
   342  000024                     tc_tecla@to:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0x1
   346  000024                     	ds	1
   347  000025                     lcd_cmd@val:
   348                           	callstack 0
   349  000025                     lcd_dat@val:
   350                           	callstack 0
   351  000025                     i2c_wb@val:
   352                           	callstack 0
   353  000025                     i2c_rb@ack:
   354                           	callstack 0
   355                           
   356                           ; 1 bytes @ 0x2
   357  000025                     	ds	1
   358  000026                     ??_lcd_init:
   359  000026                     i2c_wb@i:
   360                           	callstack 0
   361  000026                     i2c_rb@ret:
   362                           	callstack 0
   363  000026                     tc_tecla@tmp:
   364                           	callstack 0
   365  000026                     lcd_str@str:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x3
   369  000026                     	ds	1
   370  000027                     i2c_rb@i:
   371                           	callstack 0
   372  000027                     tc_tecla@timeout:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x4
   376  000027                     	ds	1
   377  000028                     ??_lcd_str:
   378  000028                     rtc_r@tmp:
   379                           	callstack 0
   380  000028                     e2pext_r@addr:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x5
   384  000028                     	ds	1
   385  000029                     tc_tecla@ret:
   386                           	callstack 0
   387                           
   388                           ; 1 bytes @ 0x6
   389  000029                     	ds	1
   390  00002A                     lcd_str@i:
   391                           	callstack 0
   392  00002A                     e2pext_r@ret:
   393                           	callstack 0
   394  00002A                     tc_tecla@i:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0x7
   398  00002A                     	ds	1
   399  00002B                     e2pext_r@al:
   400                           	callstack 0
   401                           
   402                           ; 1 bytes @ 0x8
   403  00002B                     	ds	1
   404  00002C                     e2pext_r@ah:
   405                           	callstack 0
   406                           
   407                           ; 1 bytes @ 0x9
   408  00002C                     	ds	1
   409  00002D                     ?_escolha:
   410                           	callstack 0
   411  00002D                     e2pext_w@addr:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0xA
   415  00002D                     	ds	2
   416  00002F                     ??_escolha:
   417  00002F                     e2pext_w@val:
   418                           	callstack 0
   419                           
   420                           ; 1 bytes @ 0xC
   421  00002F                     	ds	1
   422  000030                     ??_e2pext_w:
   423                           
   424                           ; 1 bytes @ 0xD
   425  000030                     	ds	1
   426  000031                     escolha@senha:
   427                           	callstack 0
   428                           
   429                           ; 5 bytes @ 0xE
   430  000031                     	ds	1
   431  000032                     e2pext_w@ah:
   432                           	callstack 0
   433                           
   434                           ; 1 bytes @ 0xF
   435  000032                     	ds	1
   436  000033                     e2pext_w@al:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0x10
   440  000033                     	ds	1
   441  000034                     e2pext_w@nt:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0x11
   445  000034                     	ds	1
   446  000035                     e2pext_w@tmp:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x12
   450  000035                     	ds	1
   451  000036                     escolha@cont:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x13
   455  000036                     	ds	1
   456  000037                     ??_trocarSenha:
   457  000037                     escolha@i:
   458                           	callstack 0
   459                           
   460                           ; 1 bytes @ 0x14
   461  000037                     	ds	1
   462  000038                     escolha@tmp:
   463                           	callstack 0
   464                           
   465                           ; 1 bytes @ 0x15
   466  000038                     	ds	1
   467  000039                     trocarSenha@senha:
   468                           	callstack 0
   469                           
   470                           ; 5 bytes @ 0x16
   471  000039                     	ds	5
   472  00003E                     trocarSenha@cont:
   473                           	callstack 0
   474                           
   475                           ; 1 bytes @ 0x1B
   476  00003E                     	ds	1
   477  00003F                     trocarSenha@i:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0x1C
   481  00003F                     	ds	1
   482  000040                     trocarSenha@tmp:
   483                           	callstack 0
   484                           
   485                           ; 1 bytes @ 0x1D
   486  000040                     	ds	1
   487  000041                     main@opc:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x1E
   491  000041                     	ds	2
   492  000043                     main@temp:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x20
   496  000043                     	ds	2
   497                           
   498 ;;
   499 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   500 ;;
   501 ;; *************** function _main *****************
   502 ;; Defined at:
   503 ;;		line 11 in file "principal.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;		None
   506 ;; Auto vars:     Size  Location     Type
   507 ;;  temp            2   32[COMRAM] unsigned int 
   508 ;;  opc             2   30[COMRAM] unsigned int 
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   518 ;;      Params:         0       0       0       0       0       0       0
   519 ;;      Locals:         4       0       0       0       0       0       0
   520 ;;      Temps:          0       0       0       0       0       0       0
   521 ;;      Totals:         4       0       0       0       0       0       0
   522 ;;Total ram usage:        4 bytes
   523 ;; Hardware stack levels required when called:    5
   524 ;; This function calls:
   525 ;;		_escolha
   526 ;;		_i2c_init
   527 ;;		_lcd_cmd
   528 ;;		_lcd_init
   529 ;;		_lcd_str
   530 ;;		_rtc_r
   531 ;;		_trocarSenha
   532 ;; This function is called by:
   533 ;;		Startup code after reset
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           	psect	text0
   538  0006AA                     __ptext0:
   539                           	callstack 0
   540  0006AA                     _main:
   541                           	callstack 26
   542  0006AA                     
   543                           ;principal.c: 13:     TRISA = 0x10;
   544  0006AA  0E10               	movlw	16
   545  0006AC  6E92               	movwf	146,c	;volatile
   546                           
   547                           ;principal.c: 14:     TRISB = 0x0F;
   548  0006AE  0E0F               	movlw	15
   549  0006B0  6E93               	movwf	147,c	;volatile
   550                           
   551                           ;principal.c: 15:     TRISD = 0x00;
   552  0006B2  0E00               	movlw	0
   553  0006B4  6E95               	movwf	149,c	;volatile
   554                           
   555                           ;principal.c: 16:     TRISE = 0x00;
   556  0006B6  0E00               	movlw	0
   557  0006B8  6E96               	movwf	150,c	;volatile
   558                           
   559                           ;principal.c: 17:     TRISC = 0x01;
   560  0006BA  0E01               	movlw	1
   561  0006BC  6E94               	movwf	148,c	;volatile
   562                           
   563                           ;principal.c: 18:     ADCON1 = 0x0F;
   564  0006BE  0E0F               	movlw	15
   565  0006C0  6EC1               	movwf	193,c	;volatile
   566  0006C2                     
   567                           ;principal.c: 19:     TRISCbits.TRISC0 = 0;
   568  0006C2  9094               	bcf	148,0,c	;volatile
   569  0006C4                     
   570                           ;principal.c: 20:     TRISEbits.TRISE0 = 0;
   571  0006C4  9096               	bcf	150,0,c	;volatile
   572                           
   573                           ;principal.c: 23:     unsigned int temp = 5, opc;
   574  0006C6  0E00               	movlw	0
   575  0006C8  6E44               	movwf	(main@temp+1)^0,c
   576  0006CA  0E05               	movlw	5
   577  0006CC  6E43               	movwf	main@temp^0,c
   578  0006CE                     
   579                           ;principal.c: 25:     lcd_init();
   580  0006CE  EC11  F00B         	call	_lcd_init	;wreg free
   581                           
   582                           ;principal.c: 26:     i2c_init();
   583  0006D2  ECCD  F00B         	call	_i2c_init	;wreg free
   584  0006D6                     
   585                           ;principal.c: 27:     lcd_cmd(0x0C);
   586  0006D6  0E0C               	movlw	12
   587  0006D8  EC87  F00B         	call	_lcd_cmd
   588  0006DC                     
   589                           ;principal.c: 28:     lcd_cmd(0x01);
   590  0006DC  0E01               	movlw	1
   591  0006DE  EC87  F00B         	call	_lcd_cmd
   592  0006E2                     l2119:
   593                           
   594                           ;principal.c: 32:         if (est == 0) {
   595  0006E2  5017               	movf	_est^0,w,c
   596  0006E4  1018               	iorwf	(_est+1)^0,w,c
   597  0006E6  A4D8               	btfss	status,2,c
   598  0006E8  EF78  F003         	goto	u1311
   599  0006EC  EF7A  F003         	goto	u1310
   600  0006F0                     u1311:
   601  0006F0  EF36  F005         	goto	l2267
   602  0006F4                     u1310:
   603  0006F4                     
   604                           ;principal.c: 33:             lcd_cmd(0x01);
   605  0006F4  0E01               	movlw	1
   606  0006F6  EC87  F00B         	call	_lcd_cmd
   607  0006FA                     
   608                           ;principal.c: 34:             TRISB = 0x0F;
   609  0006FA  0E0F               	movlw	15
   610  0006FC  6E93               	movwf	147,c	;volatile
   611  0006FE                     
   612                           ;principal.c: 35:             TRISD = 0x00;
   613  0006FE  0E00               	movlw	0
   614  000700  6E95               	movwf	149,c	;volatile
   615  000702                     
   616                           ;principal.c: 37:             if (PORTEbits.RE0 == 1) {
   617  000702  A084               	btfss	132,0,c	;volatile
   618  000704  EF86  F003         	goto	u1321
   619  000708  EF88  F003         	goto	u1320
   620  00070C                     u1321:
   621  00070C  EF90  F003         	goto	l2131
   622  000710                     u1320:
   623  000710                     
   624                           ;principal.c: 38:                 cond = 0;
   625  000710  0E00               	movlw	0
   626  000712  6E16               	movwf	(_cond+1)^0,c
   627  000714  0E00               	movlw	0
   628  000716  6E15               	movwf	_cond^0,c
   629                           
   630                           ;principal.c: 39:                 temp = 5;
   631  000718  0E00               	movlw	0
   632  00071A  6E44               	movwf	(main@temp+1)^0,c
   633  00071C  0E05               	movlw	5
   634  00071E  6E43               	movwf	main@temp^0,c
   635  000720                     l2131:
   636                           
   637                           ;principal.c: 41:             if (PORTCbits.RC0 == 1) {
   638  000720  A082               	btfss	130,0,c	;volatile
   639  000722  EF95  F003         	goto	u1331
   640  000726  EF97  F003         	goto	u1330
   641  00072A                     u1331:
   642  00072A  EF9F  F003         	goto	l2135
   643  00072E                     u1330:
   644  00072E                     
   645                           ;principal.c: 42:                 cond = 2;
   646  00072E  0E00               	movlw	0
   647  000730  6E16               	movwf	(_cond+1)^0,c
   648  000732  0E02               	movlw	2
   649  000734  6E15               	movwf	_cond^0,c
   650                           
   651                           ;principal.c: 43:                 temp = 5;
   652  000736  0E00               	movlw	0
   653  000738  6E44               	movwf	(main@temp+1)^0,c
   654  00073A  0E05               	movlw	5
   655  00073C  6E43               	movwf	main@temp^0,c
   656  00073E                     l2135:
   657                           
   658                           ;principal.c: 47:                 if (PORTBbits.RB0 == 0 && PORTCbits.RC0 == 1 || PORTBb
      +                          its.RB0 == 0 && PORTEbits.RE0 == 1) {
   659  00073E  B081               	btfsc	129,0,c	;volatile
   660  000740  EFA4  F003         	goto	u1341
   661  000744  EFA6  F003         	goto	u1340
   662  000748                     u1341:
   663  000748  EFAD  F003         	goto	l135
   664  00074C                     u1340:
   665  00074C  B082               	btfsc	130,0,c	;volatile
   666  00074E  EFAB  F003         	goto	u1351
   667  000752  EFAD  F003         	goto	u1350
   668  000756                     u1351:
   669  000756  EFBB  F003         	goto	l2141
   670  00075A                     u1350:
   671  00075A                     l135:
   672  00075A  B081               	btfsc	129,0,c	;volatile
   673  00075C  EFB2  F003         	goto	u1361
   674  000760  EFB4  F003         	goto	u1360
   675  000764                     u1361:
   676  000764  EFEF  F003         	goto	l131
   677  000768                     u1360:
   678  000768  A084               	btfss	132,0,c	;volatile
   679  00076A  EFB9  F003         	goto	u1371
   680  00076E  EFBB  F003         	goto	u1370
   681  000772                     u1371:
   682  000772  EFEF  F003         	goto	l131
   683  000776                     u1370:
   684  000776                     l2141:
   685                           
   686                           ;principal.c: 48:                     TRISB = 0x00;
   687  000776  0E00               	movlw	0
   688  000778  6E93               	movwf	147,c	;volatile
   689  00077A                     
   690                           ;principal.c: 49:                     PORTBbits.RB0 = 1;
   691  00077A  8081               	bsf	129,0,c	;volatile
   692  00077C                     
   693                           ;principal.c: 50:                     est = escolha();
   694  00077C  ECD9  F008         	call	_escolha	;wreg free
   695  000780  C02D  F017         	movff	?_escolha,_est
   696  000784  C02E  F018         	movff	?_escolha+1,_est+1
   697  000788                     
   698                           ;principal.c: 51:                     if (est == 1) {
   699  000788  0417               	decf	_est^0,w,c
   700  00078A  1018               	iorwf	(_est+1)^0,w,c
   701  00078C  A4D8               	btfss	status,2,c
   702  00078E  EFCB  F003         	goto	u1381
   703  000792  EFCD  F003         	goto	u1380
   704  000796                     u1381:
   705  000796  EFCF  F003         	goto	l136
   706  00079A                     u1380:
   707  00079A  EF71  F003         	goto	l2119
   708  00079E                     l136:
   709                           
   710                           ;principal.c: 54:                         if (PORTEbits.RE0 == 1) {
   711  00079E  A084               	btfss	132,0,c	;volatile
   712  0007A0  EFD4  F003         	goto	u1391
   713  0007A4  EFD6  F003         	goto	u1390
   714  0007A8                     u1391:
   715  0007A8  EFE0  F003         	goto	l139
   716  0007AC                     u1390:
   717  0007AC                     
   718                           ;principal.c: 55:                             cond = 0;
   719  0007AC  0E00               	movlw	0
   720  0007AE  6E16               	movwf	(_cond+1)^0,c
   721  0007B0  0E00               	movlw	0
   722  0007B2  6E15               	movwf	_cond^0,c
   723                           
   724                           ;principal.c: 56:                             temp = 5;
   725  0007B4  0E00               	movlw	0
   726  0007B6  6E44               	movwf	(main@temp+1)^0,c
   727  0007B8  0E05               	movlw	5
   728  0007BA  6E43               	movwf	main@temp^0,c
   729                           
   730                           ;principal.c: 57:                         } else if (PORTCbits.RC0 == 1) {
   731  0007BC  EFEF  F003         	goto	l131
   732  0007C0                     l139:
   733  0007C0  A082               	btfss	130,0,c	;volatile
   734  0007C2  EFE5  F003         	goto	u1401
   735  0007C6  EFE7  F003         	goto	u1400
   736  0007CA                     u1401:
   737  0007CA  EFEF  F003         	goto	l131
   738  0007CE                     u1400:
   739  0007CE                     
   740                           ;principal.c: 58:                             cond = 2;
   741  0007CE  0E00               	movlw	0
   742  0007D0  6E16               	movwf	(_cond+1)^0,c
   743  0007D2  0E02               	movlw	2
   744  0007D4  6E15               	movwf	_cond^0,c
   745                           
   746                           ;principal.c: 59:                             temp = 5;
   747  0007D6  0E00               	movlw	0
   748  0007D8  6E44               	movwf	(main@temp+1)^0,c
   749  0007DA  0E05               	movlw	5
   750  0007DC  6E43               	movwf	main@temp^0,c
   751  0007DE                     l131:
   752                           
   753                           ;principal.c: 63:                 TRISB = 0x0F;
   754  0007DE  0E0F               	movlw	15
   755  0007E0  6E93               	movwf	147,c	;volatile
   756                           
   757                           ;principal.c: 64:                 TRISD = 0x00;
   758  0007E2  0E00               	movlw	0
   759  0007E4  6E95               	movwf	149,c	;volatile
   760  0007E6                     
   761                           ;principal.c: 65:                 if (PORTBbits.RB2 == 0 && PORTCbits.RC0 == 1 || PORTBb
      +                          its.RB2 == 0 && PORTEbits.RE0 == 1) {
   762  0007E6  B481               	btfsc	129,2,c	;volatile
   763  0007E8  EFF8  F003         	goto	u1411
   764  0007EC  EFFA  F003         	goto	u1410
   765  0007F0                     u1411:
   766  0007F0  EF01  F004         	goto	l146
   767  0007F4                     u1410:
   768  0007F4  B082               	btfsc	130,0,c	;volatile
   769  0007F6  EFFF  F003         	goto	u1421
   770  0007FA  EF01  F004         	goto	u1420
   771  0007FE                     u1421:
   772  0007FE  EF0F  F004         	goto	l2163
   773  000802                     u1420:
   774  000802                     l146:
   775  000802  B481               	btfsc	129,2,c	;volatile
   776  000804  EF06  F004         	goto	u1431
   777  000808  EF08  F004         	goto	u1430
   778  00080C                     u1431:
   779  00080C  EF34  F004         	goto	l142
   780  000810                     u1430:
   781  000810  A084               	btfss	132,0,c	;volatile
   782  000812  EF0D  F004         	goto	u1441
   783  000816  EF0F  F004         	goto	u1440
   784  00081A                     u1441:
   785  00081A  EF34  F004         	goto	l142
   786  00081E                     u1440:
   787  00081E                     l2163:
   788                           
   789                           ;principal.c: 66:                     TRISB = 0x00;
   790  00081E  0E00               	movlw	0
   791  000820  6E93               	movwf	147,c	;volatile
   792  000822                     
   793                           ;principal.c: 67:                     PORTBbits.RB2 = 1;
   794  000822  8481               	bsf	129,2,c	;volatile
   795  000824                     
   796                           ;principal.c: 68:                     trocarSenha();
   797  000824  ECC5  F006         	call	_trocarSenha	;wreg free
   798  000828                     
   799                           ;principal.c: 69:                     if (PORTEbits.RE0 == 1) {
   800  000828  A084               	btfss	132,0,c	;volatile
   801  00082A  EF19  F004         	goto	u1451
   802  00082E  EF1B  F004         	goto	u1450
   803  000832                     u1451:
   804  000832  EF25  F004         	goto	l147
   805  000836                     u1450:
   806  000836                     
   807                           ;principal.c: 70:                         cond = 0;
   808  000836  0E00               	movlw	0
   809  000838  6E16               	movwf	(_cond+1)^0,c
   810  00083A  0E00               	movlw	0
   811  00083C  6E15               	movwf	_cond^0,c
   812                           
   813                           ;principal.c: 71:                         temp = 5;
   814  00083E  0E00               	movlw	0
   815  000840  6E44               	movwf	(main@temp+1)^0,c
   816  000842  0E05               	movlw	5
   817  000844  6E43               	movwf	main@temp^0,c
   818                           
   819                           ;principal.c: 72:                     } else if (PORTCbits.RC0 == 1) {
   820  000846  EF34  F004         	goto	l142
   821  00084A                     l147:
   822  00084A  A082               	btfss	130,0,c	;volatile
   823  00084C  EF2A  F004         	goto	u1461
   824  000850  EF2C  F004         	goto	u1460
   825  000854                     u1461:
   826  000854  EF34  F004         	goto	l142
   827  000858                     u1460:
   828  000858                     
   829                           ;principal.c: 74:                         cond = 2;
   830  000858  0E00               	movlw	0
   831  00085A  6E16               	movwf	(_cond+1)^0,c
   832  00085C  0E02               	movlw	2
   833  00085E  6E15               	movwf	_cond^0,c
   834                           
   835                           ;principal.c: 75:                         temp = 5;
   836  000860  0E00               	movlw	0
   837  000862  6E44               	movwf	(main@temp+1)^0,c
   838  000864  0E05               	movlw	5
   839  000866  6E43               	movwf	main@temp^0,c
   840  000868                     l142:
   841                           
   842                           ;principal.c: 79:                 TRISB = 0x0F;
   843  000868  0E0F               	movlw	15
   844  00086A  6E93               	movwf	147,c	;volatile
   845                           
   846                           ;principal.c: 80:                 TRISD = 0x00;
   847  00086C  0E00               	movlw	0
   848  00086E  6E95               	movwf	149,c	;volatile
   849  000870                     
   850                           ;principal.c: 81:                 lcd_cmd(0x80);
   851  000870  0E80               	movlw	128
   852  000872  EC87  F00B         	call	_lcd_cmd
   853  000876                     
   854                           ;principal.c: 82:                 lcd_str("Estado: Auto    ");
   855  000876  0E17               	movlw	low STR_1
   856  000878  6E26               	movwf	lcd_str@str^0,c
   857  00087A  0E06               	movlw	high STR_1
   858  00087C  6E27               	movwf	(lcd_str@str+1)^0,c
   859  00087E  ECA1  F00A         	call	_lcd_str	;wreg free
   860  000882                     
   861                           ;principal.c: 83:                 lcd_str("");
   862  000882  0E27               	movlw	low (STR_1+16)
   863  000884  6E26               	movwf	lcd_str@str^0,c
   864  000886  0E06               	movlw	high (STR_1+16)
   865  000888  6E27               	movwf	(lcd_str@str+1)^0,c
   866  00088A  ECA1  F00A         	call	_lcd_str	;wreg free
   867  00088E                     
   868                           ;principal.c: 84:                 rtc_r();
   869  00088E  ECB2  F009         	call	_rtc_r	;wreg free
   870  000892                     
   871                           ;principal.c: 85:                 lcd_cmd(0xC0);
   872  000892  0EC0               	movlw	192
   873  000894  EC87  F00B         	call	_lcd_cmd
   874  000898                     
   875                           ;principal.c: 86:                 lcd_str("Hora: ");
   876  000898  0E99               	movlw	low STR_3
   877  00089A  6E26               	movwf	lcd_str@str^0,c
   878  00089C  0E06               	movlw	high STR_3
   879  00089E  6E27               	movwf	(lcd_str@str+1)^0,c
   880  0008A0  ECA1  F00A         	call	_lcd_str	;wreg free
   881  0008A4                     
   882                           ;principal.c: 87:                 lcd_str((const char *) time);
   883  0008A4  0E19               	movlw	low _time
   884  0008A6  6E26               	movwf	lcd_str@str^0,c
   885  0008A8  0E00               	movlw	high _time
   886  0008AA  6E27               	movwf	(lcd_str@str+1)^0,c
   887  0008AC  ECA1  F00A         	call	_lcd_str	;wreg free
   888  0008B0                     
   889                           ;principal.c: 88:                 lcd_str(" ");
   890  0008B0  0E26               	movlw	low (STR_1+15)
   891  0008B2  6E26               	movwf	lcd_str@str^0,c
   892  0008B4  0E06               	movlw	high (STR_1+15)
   893  0008B6  6E27               	movwf	(lcd_str@str+1)^0,c
   894  0008B8  ECA1  F00A         	call	_lcd_str	;wreg free
   895  0008BC                     
   896                           ;principal.c: 89:                 lcd_cmd(0xD0);
   897  0008BC  0ED0               	movlw	208
   898  0008BE  EC87  F00B         	call	_lcd_cmd
   899  0008C2                     
   900                           ;principal.c: 90:                 lcd_str("Janela: ");
   901  0008C2  0E66               	movlw	low STR_5
   902  0008C4  6E26               	movwf	lcd_str@str^0,c
   903  0008C6  0E06               	movlw	high STR_5
   904  0008C8  6E27               	movwf	(lcd_str@str+1)^0,c
   905  0008CA  ECA1  F00A         	call	_lcd_str	;wreg free
   906                           
   907                           ;principal.c: 92:                 if (time[1] == '6' && time[3] == '0' && time[4] == '0'
      +                           && cond == 1) {
   908  0008CE  0E36               	movlw	54
   909  0008D0  181A               	xorwf	(_time+1)^0,w,c	;volatile
   910  0008D2  A4D8               	btfss	status,2,c
   911  0008D4  EF6E  F004         	goto	u1471
   912  0008D8  EF70  F004         	goto	u1470
   913  0008DC                     u1471:
   914  0008DC  EF9B  F004         	goto	l2211
   915  0008E0                     u1470:
   916  0008E0  0E30               	movlw	48
   917  0008E2  181C               	xorwf	(_time+3)^0,w,c	;volatile
   918  0008E4  A4D8               	btfss	status,2,c
   919  0008E6  EF77  F004         	goto	u1481
   920  0008EA  EF79  F004         	goto	u1480
   921  0008EE                     u1481:
   922  0008EE  EF9B  F004         	goto	l2211
   923  0008F2                     u1480:
   924  0008F2  0E30               	movlw	48
   925  0008F4  181D               	xorwf	(_time+4)^0,w,c	;volatile
   926  0008F6  A4D8               	btfss	status,2,c
   927  0008F8  EF80  F004         	goto	u1491
   928  0008FC  EF82  F004         	goto	u1490
   929  000900                     u1491:
   930  000900  EF9B  F004         	goto	l2211
   931  000904                     u1490:
   932  000904  0415               	decf	_cond^0,w,c
   933  000906  1016               	iorwf	(_cond+1)^0,w,c
   934  000908  A4D8               	btfss	status,2,c
   935  00090A  EF89  F004         	goto	u1501
   936  00090E  EF8B  F004         	goto	u1500
   937  000912                     u1501:
   938  000912  EF9B  F004         	goto	l2211
   939  000916                     u1500:
   940  000916                     
   941                           ;principal.c: 93:                     lcd_cmd(0xD0 + 8);
   942  000916  0ED8               	movlw	216
   943  000918  EC87  F00B         	call	_lcd_cmd
   944  00091C                     
   945                           ;principal.c: 94:                     lcd_str("Abrindo");
   946  00091C  0E91               	movlw	low STR_6
   947  00091E  6E26               	movwf	lcd_str@str^0,c
   948  000920  0E06               	movlw	high STR_6
   949  000922  6E27               	movwf	(lcd_str@str+1)^0,c
   950  000924  ECA1  F00A         	call	_lcd_str	;wreg free
   951  000928                     
   952                           ;principal.c: 95:                     PORTEbits.RE0 = 0;
   953  000928  9084               	bcf	132,0,c	;volatile
   954  00092A                     
   955                           ;principal.c: 96:                     opc = 1;
   956  00092A  0E00               	movlw	0
   957  00092C  6E42               	movwf	(main@opc+1)^0,c
   958  00092E  0E01               	movlw	1
   959  000930  6E41               	movwf	main@opc^0,c
   960  000932                     
   961                           ;principal.c: 97:                     cond++;
   962  000932  4A15               	infsnz	_cond^0,f,c
   963  000934  2A16               	incf	(_cond+1)^0,f,c
   964  000936                     l2211:
   965                           
   966                           ;principal.c: 99:                 if (temp == 5 && cond == 2) {
   967  000936  0E05               	movlw	5
   968  000938  1843               	xorwf	main@temp^0,w,c
   969  00093A  1044               	iorwf	(main@temp+1)^0,w,c
   970  00093C  A4D8               	btfss	status,2,c
   971  00093E  EFA3  F004         	goto	u1511
   972  000942  EFA5  F004         	goto	u1510
   973  000946                     u1511:
   974  000946  EFC3  F004         	goto	l2227
   975  00094A                     u1510:
   976  00094A  0E02               	movlw	2
   977  00094C  1815               	xorwf	_cond^0,w,c
   978  00094E  1016               	iorwf	(_cond+1)^0,w,c
   979  000950  A4D8               	btfss	status,2,c
   980  000952  EFAD  F004         	goto	u1521
   981  000956  EFAF  F004         	goto	u1520
   982  00095A                     u1521:
   983  00095A  EFC3  F004         	goto	l2227
   984  00095E                     u1520:
   985  00095E                     
   986                           ;principal.c: 100:                     lcd_cmd(0xD0 + 8);
   987  00095E  0ED8               	movlw	216
   988  000960  EC87  F00B         	call	_lcd_cmd
   989  000964                     
   990                           ;principal.c: 101:                     lcd_str("Aberta ");
   991  000964  0E81               	movlw	low STR_7
   992  000966  6E26               	movwf	lcd_str@str^0,c
   993  000968  0E06               	movlw	high STR_7
   994  00096A  6E27               	movwf	(lcd_str@str+1)^0,c
   995  00096C  ECA1  F00A         	call	_lcd_str	;wreg free
   996  000970                     
   997                           ;principal.c: 102:                     PORTCbits.RC0 = 1;
   998  000970  8082               	bsf	130,0,c	;volatile
   999  000972                     
  1000                           ;principal.c: 103:                     opc = 0;
  1001  000972  0E00               	movlw	0
  1002  000974  6E42               	movwf	(main@opc+1)^0,c
  1003  000976  0E00               	movlw	0
  1004  000978  6E41               	movwf	main@opc^0,c
  1005  00097A                     
  1006                           ;principal.c: 104:                     temp = 0;
  1007  00097A  0E00               	movlw	0
  1008  00097C  6E44               	movwf	(main@temp+1)^0,c
  1009  00097E  0E00               	movlw	0
  1010  000980  6E43               	movwf	main@temp^0,c
  1011  000982                     
  1012                           ;principal.c: 105:                     cond++;
  1013  000982  4A15               	infsnz	_cond^0,f,c
  1014  000984  2A16               	incf	(_cond+1)^0,f,c
  1015  000986                     l2227:
  1016                           
  1017                           ;principal.c: 107:                 if (time[0] == '1' && time[1] == '8' && time[3] == '0
      +                          ' && time[4] && cond == 3) {
  1018  000986  0E31               	movlw	49
  1019  000988  1819               	xorwf	_time^0,w,c	;volatile
  1020  00098A  A4D8               	btfss	status,2,c
  1021  00098C  EFCA  F004         	goto	u1531
  1022  000990  EFCC  F004         	goto	u1530
  1023  000994                     u1531:
  1024  000994  EF02  F005         	goto	l2247
  1025  000998                     u1530:
  1026  000998  0E38               	movlw	56
  1027  00099A  181A               	xorwf	(_time+1)^0,w,c	;volatile
  1028  00099C  A4D8               	btfss	status,2,c
  1029  00099E  EFD3  F004         	goto	u1541
  1030  0009A2  EFD5  F004         	goto	u1540
  1031  0009A6                     u1541:
  1032  0009A6  EF02  F005         	goto	l2247
  1033  0009AA                     u1540:
  1034  0009AA  0E30               	movlw	48
  1035  0009AC  181C               	xorwf	(_time+3)^0,w,c	;volatile
  1036  0009AE  A4D8               	btfss	status,2,c
  1037  0009B0  EFDC  F004         	goto	u1551
  1038  0009B4  EFDE  F004         	goto	u1550
  1039  0009B8                     u1551:
  1040  0009B8  EF02  F005         	goto	l2247
  1041  0009BC                     u1550:
  1042  0009BC  501D               	movf	(_time+4)^0,w,c	;volatile
  1043  0009BE  B4D8               	btfsc	status,2,c
  1044  0009C0  EFE4  F004         	goto	u1561
  1045  0009C4  EFE6  F004         	goto	u1560
  1046  0009C8                     u1561:
  1047  0009C8  EF02  F005         	goto	l2247
  1048  0009CC                     u1560:
  1049  0009CC  0E03               	movlw	3
  1050  0009CE  1815               	xorwf	_cond^0,w,c
  1051  0009D0  1016               	iorwf	(_cond+1)^0,w,c
  1052  0009D2  A4D8               	btfss	status,2,c
  1053  0009D4  EFEE  F004         	goto	u1571
  1054  0009D8  EFF0  F004         	goto	u1570
  1055  0009DC                     u1571:
  1056  0009DC  EF02  F005         	goto	l2247
  1057  0009E0                     u1570:
  1058  0009E0                     
  1059                           ;principal.c: 108:                     lcd_cmd(0xD0 + 8);
  1060  0009E0  0ED8               	movlw	216
  1061  0009E2  EC87  F00B         	call	_lcd_cmd
  1062  0009E6                     
  1063                           ;principal.c: 109:                     lcd_str("Fechando");
  1064  0009E6  0E78               	movlw	low STR_8
  1065  0009E8  6E26               	movwf	lcd_str@str^0,c
  1066  0009EA  0E06               	movlw	high STR_8
  1067  0009EC  6E27               	movwf	(lcd_str@str+1)^0,c
  1068  0009EE  ECA1  F00A         	call	_lcd_str	;wreg free
  1069  0009F2                     
  1070                           ;principal.c: 110:                     PORTCbits.RC0 = 0;
  1071  0009F2  9082               	bcf	130,0,c	;volatile
  1072  0009F4                     
  1073                           ;principal.c: 111:                     opc = 1;
  1074  0009F4  0E00               	movlw	0
  1075  0009F6  6E42               	movwf	(main@opc+1)^0,c
  1076  0009F8  0E01               	movlw	1
  1077  0009FA  6E41               	movwf	main@opc^0,c
  1078  0009FC                     
  1079                           ;principal.c: 112:                     cond = 0;
  1080  0009FC  0E00               	movlw	0
  1081  0009FE  6E16               	movwf	(_cond+1)^0,c
  1082  000A00  0E00               	movlw	0
  1083  000A02  6E15               	movwf	_cond^0,c
  1084  000A04                     l2247:
  1085                           
  1086                           ;principal.c: 114:                 if (cond == 0 && temp == 5) {
  1087  000A04  5015               	movf	_cond^0,w,c
  1088  000A06  1016               	iorwf	(_cond+1)^0,w,c
  1089  000A08  A4D8               	btfss	status,2,c
  1090  000A0A  EF09  F005         	goto	u1581
  1091  000A0E  EF0B  F005         	goto	u1580
  1092  000A12                     u1581:
  1093  000A12  EF29  F005         	goto	l2263
  1094  000A16                     u1580:
  1095  000A16  0E05               	movlw	5
  1096  000A18  1843               	xorwf	main@temp^0,w,c
  1097  000A1A  1044               	iorwf	(main@temp+1)^0,w,c
  1098  000A1C  A4D8               	btfss	status,2,c
  1099  000A1E  EF13  F005         	goto	u1591
  1100  000A22  EF15  F005         	goto	u1590
  1101  000A26                     u1591:
  1102  000A26  EF29  F005         	goto	l2263
  1103  000A2A                     u1590:
  1104  000A2A                     
  1105                           ;principal.c: 115:                     lcd_cmd(0xD0 + 8);
  1106  000A2A  0ED8               	movlw	216
  1107  000A2C  EC87  F00B         	call	_lcd_cmd
  1108  000A30                     
  1109                           ;principal.c: 116:                     lcd_str("Fechado ");
  1110  000A30  0E6F               	movlw	low STR_9
  1111  000A32  6E26               	movwf	lcd_str@str^0,c
  1112  000A34  0E06               	movlw	high STR_9
  1113  000A36  6E27               	movwf	(lcd_str@str+1)^0,c
  1114  000A38  ECA1  F00A         	call	_lcd_str	;wreg free
  1115  000A3C                     
  1116                           ;principal.c: 117:                     PORTEbits.RE0 = 1;
  1117  000A3C  8084               	bsf	132,0,c	;volatile
  1118  000A3E                     
  1119                           ;principal.c: 118:                     cond++;
  1120  000A3E  4A15               	infsnz	_cond^0,f,c
  1121  000A40  2A16               	incf	(_cond+1)^0,f,c
  1122  000A42                     
  1123                           ;principal.c: 119:                     opc = 0;
  1124  000A42  0E00               	movlw	0
  1125  000A44  6E42               	movwf	(main@opc+1)^0,c
  1126  000A46  0E00               	movlw	0
  1127  000A48  6E41               	movwf	main@opc^0,c
  1128  000A4A                     
  1129                           ;principal.c: 120:                     temp = 0;
  1130  000A4A  0E00               	movlw	0
  1131  000A4C  6E44               	movwf	(main@temp+1)^0,c
  1132  000A4E  0E00               	movlw	0
  1133  000A50  6E43               	movwf	main@temp^0,c
  1134  000A52                     l2263:
  1135                           
  1136                           ;principal.c: 123:                 if (opc == 1) {
  1137  000A52  0441               	decf	main@opc^0,w,c
  1138  000A54  1042               	iorwf	(main@opc+1)^0,w,c
  1139  000A56  A4D8               	btfss	status,2,c
  1140  000A58  EF30  F005         	goto	u1601
  1141  000A5C  EF32  F005         	goto	u1600
  1142  000A60                     u1601:
  1143  000A60  EF9F  F003         	goto	l2135
  1144  000A64                     u1600:
  1145  000A64                     
  1146                           ;principal.c: 124:                     temp++;
  1147  000A64  4A43               	infsnz	main@temp^0,f,c
  1148  000A66  2A44               	incf	(main@temp+1)^0,f,c
  1149  000A68  EF9F  F003         	goto	l2135
  1150  000A6C                     l2267:
  1151  000A6C  0417               	decf	_est^0,w,c
  1152  000A6E  1018               	iorwf	(_est+1)^0,w,c
  1153  000A70  A4D8               	btfss	status,2,c
  1154  000A72  EF3D  F005         	goto	u1611
  1155  000A76  EF3F  F005         	goto	u1610
  1156  000A7A                     u1611:
  1157  000A7A  EF71  F003         	goto	l2119
  1158  000A7E                     u1610:
  1159  000A7E                     
  1160                           ;principal.c: 129:             lcd_cmd(0x01);
  1161  000A7E  0E01               	movlw	1
  1162  000A80  EC87  F00B         	call	_lcd_cmd
  1163  000A84                     
  1164                           ;principal.c: 130:             TRISB = 0x0F;
  1165  000A84  0E0F               	movlw	15
  1166  000A86  6E93               	movwf	147,c	;volatile
  1167  000A88                     
  1168                           ;principal.c: 131:             TRISD = 0x00;
  1169  000A88  0E00               	movlw	0
  1170  000A8A  6E95               	movwf	149,c	;volatile
  1171  000A8C                     
  1172                           ;principal.c: 132:             if (PORTEbits.RE0 == 1) {
  1173  000A8C  A084               	btfss	132,0,c	;volatile
  1174  000A8E  EF4B  F005         	goto	u1621
  1175  000A92  EF4D  F005         	goto	u1620
  1176  000A96                     u1621:
  1177  000A96  EF57  F005         	goto	l158
  1178  000A9A                     u1620:
  1179  000A9A                     
  1180                           ;principal.c: 133:                 cond = 0;
  1181  000A9A  0E00               	movlw	0
  1182  000A9C  6E16               	movwf	(_cond+1)^0,c
  1183  000A9E  0E00               	movlw	0
  1184  000AA0  6E15               	movwf	_cond^0,c
  1185                           
  1186                           ;principal.c: 134:                 temp = 5;
  1187  000AA2  0E00               	movlw	0
  1188  000AA4  6E44               	movwf	(main@temp+1)^0,c
  1189  000AA6  0E05               	movlw	5
  1190  000AA8  6E43               	movwf	main@temp^0,c
  1191                           
  1192                           ;principal.c: 135:             } else if (PORTCbits.RC0 == 1) {
  1193  000AAA  EF66  F005         	goto	l2281
  1194  000AAE                     l158:
  1195  000AAE  A082               	btfss	130,0,c	;volatile
  1196  000AB0  EF5C  F005         	goto	u1631
  1197  000AB4  EF5E  F005         	goto	u1630
  1198  000AB8                     u1631:
  1199  000AB8  EF66  F005         	goto	l2281
  1200  000ABC                     u1630:
  1201  000ABC                     
  1202                           ;principal.c: 136:                 cond = 2;
  1203  000ABC  0E00               	movlw	0
  1204  000ABE  6E16               	movwf	(_cond+1)^0,c
  1205  000AC0  0E02               	movlw	2
  1206  000AC2  6E15               	movwf	_cond^0,c
  1207                           
  1208                           ;principal.c: 137:                 temp = 5;
  1209  000AC4  0E00               	movlw	0
  1210  000AC6  6E44               	movwf	(main@temp+1)^0,c
  1211  000AC8  0E05               	movlw	5
  1212  000ACA  6E43               	movwf	main@temp^0,c
  1213  000ACC                     l2281:
  1214                           
  1215                           ;principal.c: 140:                 if (PORTBbits.RB0 == 0 && PORTCbits.RC0 == 1 || PORTB
      +                          bits.RB0 == 0 && PORTEbits.RE0 == 1) {
  1216  000ACC  B081               	btfsc	129,0,c	;volatile
  1217  000ACE  EF6B  F005         	goto	u1641
  1218  000AD2  EF6D  F005         	goto	u1640
  1219  000AD6                     u1641:
  1220  000AD6  EF74  F005         	goto	l166
  1221  000ADA                     u1640:
  1222  000ADA  B082               	btfsc	130,0,c	;volatile
  1223  000ADC  EF72  F005         	goto	u1651
  1224  000AE0  EF74  F005         	goto	u1650
  1225  000AE4                     u1651:
  1226  000AE4  EF82  F005         	goto	l2287
  1227  000AE8                     u1650:
  1228  000AE8                     l166:
  1229  000AE8  B081               	btfsc	129,0,c	;volatile
  1230  000AEA  EF79  F005         	goto	u1661
  1231  000AEE  EF7B  F005         	goto	u1660
  1232  000AF2                     u1661:
  1233  000AF2  EFB8  F005         	goto	l2303
  1234  000AF6                     u1660:
  1235  000AF6  A084               	btfss	132,0,c	;volatile
  1236  000AF8  EF80  F005         	goto	u1671
  1237  000AFC  EF82  F005         	goto	u1670
  1238  000B00                     u1671:
  1239  000B00  EFB8  F005         	goto	l2303
  1240  000B04                     u1670:
  1241  000B04                     l2287:
  1242                           
  1243                           ;principal.c: 141:                     TRISB = 0x00;
  1244  000B04  0E00               	movlw	0
  1245  000B06  6E93               	movwf	147,c	;volatile
  1246  000B08                     
  1247                           ;principal.c: 142:                     PORTBbits.RB0 = 1;
  1248  000B08  8081               	bsf	129,0,c	;volatile
  1249  000B0A                     
  1250                           ;principal.c: 143:                     est = escolha();
  1251  000B0A  ECD9  F008         	call	_escolha	;wreg free
  1252  000B0E  C02D  F017         	movff	?_escolha,_est
  1253  000B12  C02E  F018         	movff	?_escolha+1,_est+1
  1254  000B16                     
  1255                           ;principal.c: 144:                     if (est == 0) {
  1256  000B16  5017               	movf	_est^0,w,c
  1257  000B18  1018               	iorwf	(_est+1)^0,w,c
  1258  000B1A  A4D8               	btfss	status,2,c
  1259  000B1C  EF92  F005         	goto	u1681
  1260  000B20  EF94  F005         	goto	u1680
  1261  000B24                     u1681:
  1262  000B24  EF96  F005         	goto	l167
  1263  000B28                     u1680:
  1264  000B28  EF71  F003         	goto	l2119
  1265  000B2C                     l167:
  1266                           
  1267                           ;principal.c: 147:                         if (PORTEbits.RE0 == 1) {
  1268  000B2C  A084               	btfss	132,0,c	;volatile
  1269  000B2E  EF9B  F005         	goto	u1691
  1270  000B32  EF9D  F005         	goto	u1690
  1271  000B36                     u1691:
  1272  000B36  EFA7  F005         	goto	l170
  1273  000B3A                     u1690:
  1274  000B3A                     
  1275                           ;principal.c: 148:                             cond = 0;
  1276  000B3A  0E00               	movlw	0
  1277  000B3C  6E16               	movwf	(_cond+1)^0,c
  1278  000B3E  0E00               	movlw	0
  1279  000B40  6E15               	movwf	_cond^0,c
  1280                           
  1281                           ;principal.c: 149:                             temp = 5;
  1282  000B42  0E00               	movlw	0
  1283  000B44  6E44               	movwf	(main@temp+1)^0,c
  1284  000B46  0E05               	movlw	5
  1285  000B48  6E43               	movwf	main@temp^0,c
  1286                           
  1287                           ;principal.c: 150:                         } else if (PORTCbits.RC0 == 1) {
  1288  000B4A  EFB8  F005         	goto	l2303
  1289  000B4E                     l170:
  1290  000B4E  A082               	btfss	130,0,c	;volatile
  1291  000B50  EFAC  F005         	goto	u1701
  1292  000B54  EFAE  F005         	goto	u1700
  1293  000B58                     u1701:
  1294  000B58  EFB8  F005         	goto	l169
  1295  000B5C                     u1700:
  1296  000B5C                     
  1297                           ;principal.c: 151:                             cond = 2;
  1298  000B5C  0E00               	movlw	0
  1299  000B5E  6E16               	movwf	(_cond+1)^0,c
  1300  000B60  0E02               	movlw	2
  1301  000B62  6E15               	movwf	_cond^0,c
  1302                           
  1303                           ;principal.c: 152:                             temp = 5;
  1304  000B64  0E00               	movlw	0
  1305  000B66  6E44               	movwf	(main@temp+1)^0,c
  1306  000B68  0E05               	movlw	5
  1307  000B6A  6E43               	movwf	main@temp^0,c
  1308  000B6C  EFB8  F005         	goto	l2303
  1309  000B70                     l169:
  1310  000B70                     l2303:
  1311                           
  1312                           ;principal.c: 156:                 if (PORTBbits.RB2 == 0 && PORTCbits.RC0 == 1 || PORTB
      +                          bits.RB2 == 0 && PORTEbits.RE0 == 1) {
  1313  000B70  B481               	btfsc	129,2,c	;volatile
  1314  000B72  EFBD  F005         	goto	u1711
  1315  000B76  EFBF  F005         	goto	u1710
  1316  000B7A                     u1711:
  1317  000B7A  EFC6  F005         	goto	l177
  1318  000B7E                     u1710:
  1319  000B7E  B082               	btfsc	130,0,c	;volatile
  1320  000B80  EFC4  F005         	goto	u1721
  1321  000B84  EFC6  F005         	goto	u1720
  1322  000B88                     u1721:
  1323  000B88  EFD4  F005         	goto	l2309
  1324  000B8C                     u1720:
  1325  000B8C                     l177:
  1326  000B8C  B481               	btfsc	129,2,c	;volatile
  1327  000B8E  EFCB  F005         	goto	u1731
  1328  000B92  EFCD  F005         	goto	u1730
  1329  000B96                     u1731:
  1330  000B96  EFF9  F005         	goto	l173
  1331  000B9A                     u1730:
  1332  000B9A  A084               	btfss	132,0,c	;volatile
  1333  000B9C  EFD2  F005         	goto	u1741
  1334  000BA0  EFD4  F005         	goto	u1740
  1335  000BA4                     u1741:
  1336  000BA4  EFF9  F005         	goto	l173
  1337  000BA8                     u1740:
  1338  000BA8                     l2309:
  1339                           
  1340                           ;principal.c: 157:                     TRISB = 0x00;
  1341  000BA8  0E00               	movlw	0
  1342  000BAA  6E93               	movwf	147,c	;volatile
  1343  000BAC                     
  1344                           ;principal.c: 158:                     PORTBbits.RB2 = 1;
  1345  000BAC  8481               	bsf	129,2,c	;volatile
  1346  000BAE                     
  1347                           ;principal.c: 159:                     trocarSenha();
  1348  000BAE  ECC5  F006         	call	_trocarSenha	;wreg free
  1349  000BB2                     
  1350                           ;principal.c: 160:                     if (PORTEbits.RE0 == 1) {
  1351  000BB2  A084               	btfss	132,0,c	;volatile
  1352  000BB4  EFDE  F005         	goto	u1751
  1353  000BB8  EFE0  F005         	goto	u1750
  1354  000BBC                     u1751:
  1355  000BBC  EFEA  F005         	goto	l178
  1356  000BC0                     u1750:
  1357  000BC0                     
  1358                           ;principal.c: 161:                         cond = 0;
  1359  000BC0  0E00               	movlw	0
  1360  000BC2  6E16               	movwf	(_cond+1)^0,c
  1361  000BC4  0E00               	movlw	0
  1362  000BC6  6E15               	movwf	_cond^0,c
  1363                           
  1364                           ;principal.c: 162:                         temp = 5;
  1365  000BC8  0E00               	movlw	0
  1366  000BCA  6E44               	movwf	(main@temp+1)^0,c
  1367  000BCC  0E05               	movlw	5
  1368  000BCE  6E43               	movwf	main@temp^0,c
  1369                           
  1370                           ;principal.c: 163:                     } else if (PORTCbits.RC0 == 1) {
  1371  000BD0  EFF9  F005         	goto	l173
  1372  000BD4                     l178:
  1373  000BD4  A082               	btfss	130,0,c	;volatile
  1374  000BD6  EFEF  F005         	goto	u1761
  1375  000BDA  EFF1  F005         	goto	u1760
  1376  000BDE                     u1761:
  1377  000BDE  EFF9  F005         	goto	l173
  1378  000BE2                     u1760:
  1379  000BE2                     
  1380                           ;principal.c: 164:                         cond = 2;
  1381  000BE2  0E00               	movlw	0
  1382  000BE4  6E16               	movwf	(_cond+1)^0,c
  1383  000BE6  0E02               	movlw	2
  1384  000BE8  6E15               	movwf	_cond^0,c
  1385                           
  1386                           ;principal.c: 165:                         temp = 5;
  1387  000BEA  0E00               	movlw	0
  1388  000BEC  6E44               	movwf	(main@temp+1)^0,c
  1389  000BEE  0E05               	movlw	5
  1390  000BF0  6E43               	movwf	main@temp^0,c
  1391  000BF2                     l173:
  1392                           
  1393                           ;principal.c: 168:                 TRISB = 0x0F;
  1394  000BF2  0E0F               	movlw	15
  1395  000BF4  6E93               	movwf	147,c	;volatile
  1396  000BF6                     
  1397                           ;principal.c: 169:                 lcd_cmd(0x80);
  1398  000BF6  0E80               	movlw	128
  1399  000BF8  EC87  F00B         	call	_lcd_cmd
  1400  000BFC                     
  1401                           ;principal.c: 170:                 lcd_str("Estado: Manual  ");
  1402  000BFC  0E28               	movlw	low STR_10
  1403  000BFE  6E26               	movwf	lcd_str@str^0,c
  1404  000C00  0E06               	movlw	high STR_10
  1405  000C02  6E27               	movwf	(lcd_str@str+1)^0,c
  1406  000C04  ECA1  F00A         	call	_lcd_str	;wreg free
  1407  000C08                     
  1408                           ;principal.c: 171:                 rtc_r();
  1409  000C08  ECB2  F009         	call	_rtc_r	;wreg free
  1410  000C0C                     
  1411                           ;principal.c: 172:                 lcd_cmd(0xC0);
  1412  000C0C  0EC0               	movlw	192
  1413  000C0E  EC87  F00B         	call	_lcd_cmd
  1414  000C12                     
  1415                           ;principal.c: 173:                 lcd_str("Hora: ");
  1416  000C12  0E99               	movlw	low STR_3
  1417  000C14  6E26               	movwf	lcd_str@str^0,c
  1418  000C16  0E06               	movlw	high STR_3
  1419  000C18  6E27               	movwf	(lcd_str@str+1)^0,c
  1420  000C1A  ECA1  F00A         	call	_lcd_str	;wreg free
  1421  000C1E                     
  1422                           ;principal.c: 174:                 lcd_str((const char *) time);
  1423  000C1E  0E19               	movlw	low _time
  1424  000C20  6E26               	movwf	lcd_str@str^0,c
  1425  000C22  0E00               	movlw	high _time
  1426  000C24  6E27               	movwf	(lcd_str@str+1)^0,c
  1427  000C26  ECA1  F00A         	call	_lcd_str	;wreg free
  1428  000C2A                     
  1429                           ;principal.c: 175:                 lcd_str(" ");
  1430  000C2A  0E26               	movlw	low (STR_1+15)
  1431  000C2C  6E26               	movwf	lcd_str@str^0,c
  1432  000C2E  0E06               	movlw	high (STR_1+15)
  1433  000C30  6E27               	movwf	(lcd_str@str+1)^0,c
  1434  000C32  ECA1  F00A         	call	_lcd_str	;wreg free
  1435  000C36                     
  1436                           ;principal.c: 176:                 lcd_cmd(0xD0);
  1437  000C36  0ED0               	movlw	208
  1438  000C38  EC87  F00B         	call	_lcd_cmd
  1439  000C3C                     
  1440                           ;principal.c: 177:                 lcd_str("Janela: ");
  1441  000C3C  0E66               	movlw	low STR_5
  1442  000C3E  6E26               	movwf	lcd_str@str^0,c
  1443  000C40  0E06               	movlw	high STR_5
  1444  000C42  6E27               	movwf	(lcd_str@str+1)^0,c
  1445  000C44  ECA1  F00A         	call	_lcd_str	;wreg free
  1446  000C48                     
  1447                           ;principal.c: 179:                 if (PORTBbits.RB1 == 0 && cond == 1) {
  1448  000C48  B281               	btfsc	129,1,c	;volatile
  1449  000C4A  EF29  F006         	goto	u1771
  1450  000C4E  EF2B  F006         	goto	u1770
  1451  000C52                     u1771:
  1452  000C52  EF44  F006         	goto	l2353
  1453  000C56                     u1770:
  1454  000C56  0415               	decf	_cond^0,w,c
  1455  000C58  1016               	iorwf	(_cond+1)^0,w,c
  1456  000C5A  A4D8               	btfss	status,2,c
  1457  000C5C  EF32  F006         	goto	u1781
  1458  000C60  EF34  F006         	goto	u1780
  1459  000C64                     u1781:
  1460  000C64  EF44  F006         	goto	l2353
  1461  000C68                     u1780:
  1462  000C68                     
  1463                           ;principal.c: 180:                     lcd_cmd(0xD0 + 8);
  1464  000C68  0ED8               	movlw	216
  1465  000C6A  EC87  F00B         	call	_lcd_cmd
  1466  000C6E                     
  1467                           ;principal.c: 181:                     lcd_str("Abrindo");
  1468  000C6E  0E91               	movlw	low STR_6
  1469  000C70  6E26               	movwf	lcd_str@str^0,c
  1470  000C72  0E06               	movlw	high STR_6
  1471  000C74  6E27               	movwf	(lcd_str@str+1)^0,c
  1472  000C76  ECA1  F00A         	call	_lcd_str	;wreg free
  1473  000C7A                     
  1474                           ;principal.c: 182:                     PORTEbits.RE0 = 0;
  1475  000C7A  9084               	bcf	132,0,c	;volatile
  1476  000C7C                     
  1477                           ;principal.c: 183:                     opc = 1;
  1478  000C7C  0E00               	movlw	0
  1479  000C7E  6E42               	movwf	(main@opc+1)^0,c
  1480  000C80  0E01               	movlw	1
  1481  000C82  6E41               	movwf	main@opc^0,c
  1482  000C84                     
  1483                           ;principal.c: 184:                     cond++;
  1484  000C84  4A15               	infsnz	_cond^0,f,c
  1485  000C86  2A16               	incf	(_cond+1)^0,f,c
  1486  000C88                     l2353:
  1487                           
  1488                           ;principal.c: 186:                 if (temp == 5 && cond == 2) {
  1489  000C88  0E05               	movlw	5
  1490  000C8A  1843               	xorwf	main@temp^0,w,c
  1491  000C8C  1044               	iorwf	(main@temp+1)^0,w,c
  1492  000C8E  A4D8               	btfss	status,2,c
  1493  000C90  EF4C  F006         	goto	u1791
  1494  000C94  EF4E  F006         	goto	u1790
  1495  000C98                     u1791:
  1496  000C98  EF6C  F006         	goto	l2369
  1497  000C9C                     u1790:
  1498  000C9C  0E02               	movlw	2
  1499  000C9E  1815               	xorwf	_cond^0,w,c
  1500  000CA0  1016               	iorwf	(_cond+1)^0,w,c
  1501  000CA2  A4D8               	btfss	status,2,c
  1502  000CA4  EF56  F006         	goto	u1801
  1503  000CA8  EF58  F006         	goto	u1800
  1504  000CAC                     u1801:
  1505  000CAC  EF6C  F006         	goto	l2369
  1506  000CB0                     u1800:
  1507  000CB0                     
  1508                           ;principal.c: 187:                     lcd_cmd(0xD0 + 8);
  1509  000CB0  0ED8               	movlw	216
  1510  000CB2  EC87  F00B         	call	_lcd_cmd
  1511  000CB6                     
  1512                           ;principal.c: 188:                     lcd_str("Aberta ");
  1513  000CB6  0E81               	movlw	low STR_7
  1514  000CB8  6E26               	movwf	lcd_str@str^0,c
  1515  000CBA  0E06               	movlw	high STR_7
  1516  000CBC  6E27               	movwf	(lcd_str@str+1)^0,c
  1517  000CBE  ECA1  F00A         	call	_lcd_str	;wreg free
  1518  000CC2                     
  1519                           ;principal.c: 189:                     PORTCbits.RC0 =1;
  1520  000CC2  8082               	bsf	130,0,c	;volatile
  1521  000CC4                     
  1522                           ;principal.c: 190:                     cond++;
  1523  000CC4  4A15               	infsnz	_cond^0,f,c
  1524  000CC6  2A16               	incf	(_cond+1)^0,f,c
  1525  000CC8                     
  1526                           ;principal.c: 191:                     opc = 0;
  1527  000CC8  0E00               	movlw	0
  1528  000CCA  6E42               	movwf	(main@opc+1)^0,c
  1529  000CCC  0E00               	movlw	0
  1530  000CCE  6E41               	movwf	main@opc^0,c
  1531  000CD0                     
  1532                           ;principal.c: 192:                     temp = 0;
  1533  000CD0  0E00               	movlw	0
  1534  000CD2  6E44               	movwf	(main@temp+1)^0,c
  1535  000CD4  0E00               	movlw	0
  1536  000CD6  6E43               	movwf	main@temp^0,c
  1537  000CD8                     l2369:
  1538                           
  1539                           ;principal.c: 194:                 if (PORTBbits.RB1 == 0 && cond == 3) {
  1540  000CD8  B281               	btfsc	129,1,c	;volatile
  1541  000CDA  EF71  F006         	goto	u1811
  1542  000CDE  EF73  F006         	goto	u1810
  1543  000CE2                     u1811:
  1544  000CE2  EF8F  F006         	goto	l2383
  1545  000CE6                     u1810:
  1546  000CE6  0E03               	movlw	3
  1547  000CE8  1815               	xorwf	_cond^0,w,c
  1548  000CEA  1016               	iorwf	(_cond+1)^0,w,c
  1549  000CEC  A4D8               	btfss	status,2,c
  1550  000CEE  EF7B  F006         	goto	u1821
  1551  000CF2  EF7D  F006         	goto	u1820
  1552  000CF6                     u1821:
  1553  000CF6  EF8F  F006         	goto	l2383
  1554  000CFA                     u1820:
  1555  000CFA                     
  1556                           ;principal.c: 195:                     lcd_cmd(0xD0 + 8);
  1557  000CFA  0ED8               	movlw	216
  1558  000CFC  EC87  F00B         	call	_lcd_cmd
  1559  000D00                     
  1560                           ;principal.c: 196:                     lcd_str("Fechando");
  1561  000D00  0E78               	movlw	low STR_8
  1562  000D02  6E26               	movwf	lcd_str@str^0,c
  1563  000D04  0E06               	movlw	high STR_8
  1564  000D06  6E27               	movwf	(lcd_str@str+1)^0,c
  1565  000D08  ECA1  F00A         	call	_lcd_str	;wreg free
  1566  000D0C                     
  1567                           ;principal.c: 197:                     PORTCbits.RC0 = 0;
  1568  000D0C  9082               	bcf	130,0,c	;volatile
  1569  000D0E                     
  1570                           ;principal.c: 198:                     opc = 1;
  1571  000D0E  0E00               	movlw	0
  1572  000D10  6E42               	movwf	(main@opc+1)^0,c
  1573  000D12  0E01               	movlw	1
  1574  000D14  6E41               	movwf	main@opc^0,c
  1575  000D16                     
  1576                           ;principal.c: 199:                     cond = 0;
  1577  000D16  0E00               	movlw	0
  1578  000D18  6E16               	movwf	(_cond+1)^0,c
  1579  000D1A  0E00               	movlw	0
  1580  000D1C  6E15               	movwf	_cond^0,c
  1581  000D1E                     l2383:
  1582                           
  1583                           ;principal.c: 201:                 if (temp == 5 && cond == 0) {
  1584  000D1E  0E05               	movlw	5
  1585  000D20  1843               	xorwf	main@temp^0,w,c
  1586  000D22  1044               	iorwf	(main@temp+1)^0,w,c
  1587  000D24  A4D8               	btfss	status,2,c
  1588  000D26  EF97  F006         	goto	u1831
  1589  000D2A  EF99  F006         	goto	u1830
  1590  000D2E                     u1831:
  1591  000D2E  EFB6  F006         	goto	l2399
  1592  000D32                     u1830:
  1593  000D32  5015               	movf	_cond^0,w,c
  1594  000D34  1016               	iorwf	(_cond+1)^0,w,c
  1595  000D36  A4D8               	btfss	status,2,c
  1596  000D38  EFA0  F006         	goto	u1841
  1597  000D3C  EFA2  F006         	goto	u1840
  1598  000D40                     u1841:
  1599  000D40  EFB6  F006         	goto	l2399
  1600  000D44                     u1840:
  1601  000D44                     
  1602                           ;principal.c: 202:                     lcd_cmd(0xD0 + 8);
  1603  000D44  0ED8               	movlw	216
  1604  000D46  EC87  F00B         	call	_lcd_cmd
  1605  000D4A                     
  1606                           ;principal.c: 203:                     lcd_str("Fechado ");
  1607  000D4A  0E6F               	movlw	low STR_9
  1608  000D4C  6E26               	movwf	lcd_str@str^0,c
  1609  000D4E  0E06               	movlw	high STR_9
  1610  000D50  6E27               	movwf	(lcd_str@str+1)^0,c
  1611  000D52  ECA1  F00A         	call	_lcd_str	;wreg free
  1612  000D56                     
  1613                           ;principal.c: 204:                     PORTEbits.RE0 =1;
  1614  000D56  8084               	bsf	132,0,c	;volatile
  1615  000D58                     
  1616                           ;principal.c: 205:                     cond++;
  1617  000D58  4A15               	infsnz	_cond^0,f,c
  1618  000D5A  2A16               	incf	(_cond+1)^0,f,c
  1619  000D5C                     
  1620                           ;principal.c: 206:                     opc = 0;
  1621  000D5C  0E00               	movlw	0
  1622  000D5E  6E42               	movwf	(main@opc+1)^0,c
  1623  000D60  0E00               	movlw	0
  1624  000D62  6E41               	movwf	main@opc^0,c
  1625  000D64                     
  1626                           ;principal.c: 207:                     temp = 0;
  1627  000D64  0E00               	movlw	0
  1628  000D66  6E44               	movwf	(main@temp+1)^0,c
  1629  000D68  0E00               	movlw	0
  1630  000D6A  6E43               	movwf	main@temp^0,c
  1631  000D6C                     l2399:
  1632                           
  1633                           ;principal.c: 210:                 if (opc == 1) {
  1634  000D6C  0441               	decf	main@opc^0,w,c
  1635  000D6E  1042               	iorwf	(main@opc+1)^0,w,c
  1636  000D70  A4D8               	btfss	status,2,c
  1637  000D72  EFBD  F006         	goto	u1851
  1638  000D76  EFBF  F006         	goto	u1850
  1639  000D7A                     u1851:
  1640  000D7A  EF66  F005         	goto	l2281
  1641  000D7E                     u1850:
  1642  000D7E                     
  1643                           ;principal.c: 211:                     temp++;
  1644  000D7E  4A43               	infsnz	main@temp^0,f,c
  1645  000D80  2A44               	incf	(main@temp+1)^0,f,c
  1646  000D82  EF66  F005         	goto	l2281
  1647  000D86  EF00  F000         	goto	start
  1648  000D8A                     __end_of_main:
  1649                           	callstack 0
  1650                           
  1651 ;; *************** function _trocarSenha *****************
  1652 ;; Defined at:
  1653 ;;		line 277 in file "principal.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;		None
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;  senha           5   22[COMRAM] unsigned char [5]
  1658 ;;  tmp             1   29[COMRAM] unsigned char 
  1659 ;;  i               1   28[COMRAM] unsigned char 
  1660 ;;  cont            1   27[COMRAM] unsigned char 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      void 
  1663 ;; Registers used:
  1664 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1670 ;;      Params:         0       0       0       0       0       0       0
  1671 ;;      Locals:         8       0       0       0       0       0       0
  1672 ;;      Temps:          2       0       0       0       0       0       0
  1673 ;;      Totals:        10       0       0       0       0       0       0
  1674 ;;Total ram usage:       10 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; Hardware stack levels required when called:    4
  1677 ;; This function calls:
  1678 ;;		_e2pext_r
  1679 ;;		_e2pext_w
  1680 ;;		_lcd_cmd
  1681 ;;		_lcd_dat
  1682 ;;		_lcd_str
  1683 ;;		_tc_tecla
  1684 ;; This function is called by:
  1685 ;;		_main
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           	psect	text1
  1690  000D8A                     __ptext1:
  1691                           	callstack 0
  1692  000D8A                     _trocarSenha:
  1693                           	callstack 26
  1694  000D8A                     
  1695                           ;principal.c: 279:     unsigned char tmp;;principal.c: 280:     unsigned char i, cont = 
      +                          0;
  1696  000D8A  0E00               	movlw	0
  1697  000D8C  6E3E               	movwf	trocarSenha@cont^0,c
  1698  000D8E                     
  1699                           ;principal.c: 281:     unsigned char senha[5];;principal.c: 283:     lcd_cmd(0x01);
  1700  000D8E  0E01               	movlw	1
  1701  000D90  EC87  F00B         	call	_lcd_cmd
  1702  000D94                     
  1703                           ;principal.c: 284:     lcd_cmd(0x80);
  1704  000D94  0E80               	movlw	128
  1705  000D96  EC87  F00B         	call	_lcd_cmd
  1706  000D9A                     
  1707                           ;principal.c: 285:     lcd_str("Digite senha");
  1708  000D9A  0E59               	movlw	low STR_24
  1709  000D9C  6E26               	movwf	lcd_str@str^0,c
  1710  000D9E  0E06               	movlw	high STR_24
  1711  000DA0  6E27               	movwf	(lcd_str@str+1)^0,c
  1712  000DA2  ECA1  F00A         	call	_lcd_str	;wreg free
  1713  000DA6                     
  1714                           ;principal.c: 286:     lcd_cmd(0xC0);
  1715  000DA6  0EC0               	movlw	192
  1716  000DA8  EC87  F00B         	call	_lcd_cmd
  1717  000DAC                     
  1718                           ;principal.c: 287:     lcd_str("antiga:");
  1719  000DAC  0E89               	movlw	low STR_25
  1720  000DAE  6E26               	movwf	lcd_str@str^0,c
  1721  000DB0  0E06               	movlw	high STR_25
  1722  000DB2  6E27               	movwf	(lcd_str@str+1)^0,c
  1723  000DB4  ECA1  F00A         	call	_lcd_str	;wreg free
  1724  000DB8                     
  1725                           ;principal.c: 288:     for (i = 0; i < 5; i++) {
  1726  000DB8  0E00               	movlw	0
  1727  000DBA  6E3F               	movwf	trocarSenha@i^0,c
  1728  000DBC                     l2009:
  1729                           
  1730                           ;principal.c: 289:         TRISB = 0xF0;
  1731  000DBC  0EF0               	movlw	240
  1732  000DBE  6E93               	movwf	147,c	;volatile
  1733                           
  1734                           ;principal.c: 290:         TRISD = 0x0F;
  1735  000DC0  0E0F               	movlw	15
  1736  000DC2  6E95               	movwf	149,c	;volatile
  1737  000DC4                     l2011:
  1738                           
  1739                           ;principal.c: 291:         tmp = tc_tecla();
  1740  000DC4  ECEB  F007         	call	_tc_tecla	;wreg free
  1741  000DC8  6E40               	movwf	trocarSenha@tmp^0,c
  1742  000DCA                     
  1743                           ;principal.c: 292:         while (tmp == 255) {
  1744  000DCA  2840               	incf	trocarSenha@tmp^0,w,c
  1745  000DCC  B4D8               	btfsc	status,2,c
  1746  000DCE  EFEB  F006         	goto	u1211
  1747  000DD2  EFED  F006         	goto	u1210
  1748  000DD6                     u1211:
  1749  000DD6  EFE2  F006         	goto	l2011
  1750  000DDA                     u1210:
  1751  000DDA                     
  1752                           ;principal.c: 295:         TRISD = 0x00;
  1753  000DDA  0E00               	movlw	0
  1754  000DDC  6E95               	movwf	149,c	;volatile
  1755  000DDE                     
  1756                           ;principal.c: 296:         if (tmp == 10) {
  1757  000DDE  0E0A               	movlw	10
  1758  000DE0  1840               	xorwf	trocarSenha@tmp^0,w,c
  1759  000DE2  A4D8               	btfss	status,2,c
  1760  000DE4  EFF6  F006         	goto	u1221
  1761  000DE8  EFF8  F006         	goto	u1220
  1762  000DEC                     u1221:
  1763  000DEC  EFFD  F006         	goto	l2023
  1764  000DF0                     u1220:
  1765  000DF0                     
  1766                           ;principal.c: 297:             tmp = tmp + 0x20;
  1767  000DF0  5040               	movf	trocarSenha@tmp^0,w,c
  1768  000DF2  0F20               	addlw	32
  1769  000DF4  6E40               	movwf	trocarSenha@tmp^0,c
  1770                           
  1771                           ;principal.c: 298:         } else {
  1772  000DF6  EF0E  F007         	goto	l2029
  1773  000DFA                     l2023:
  1774                           
  1775                           ;principal.c: 299:             if (tmp == 12) {
  1776  000DFA  0E0C               	movlw	12
  1777  000DFC  1840               	xorwf	trocarSenha@tmp^0,w,c
  1778  000DFE  A4D8               	btfss	status,2,c
  1779  000E00  EF04  F007         	goto	u1231
  1780  000E04  EF06  F007         	goto	u1230
  1781  000E08                     u1231:
  1782  000E08  EF0B  F007         	goto	l2027
  1783  000E0C                     u1230:
  1784  000E0C                     
  1785                           ;principal.c: 300:                 tmp = tmp + 0x17;
  1786  000E0C  5040               	movf	trocarSenha@tmp^0,w,c
  1787  000E0E  0F17               	addlw	23
  1788  000E10  6E40               	movwf	trocarSenha@tmp^0,c
  1789                           
  1790                           ;principal.c: 301:             } else {
  1791  000E12  EF0E  F007         	goto	l2029
  1792  000E16                     l2027:
  1793                           
  1794                           ;principal.c: 302:                 tmp = tmp + 0x30;
  1795  000E16  5040               	movf	trocarSenha@tmp^0,w,c
  1796  000E18  0F30               	addlw	48
  1797  000E1A  6E40               	movwf	trocarSenha@tmp^0,c
  1798  000E1C                     l2029:
  1799                           
  1800                           ;principal.c: 305:         lcd_cmd(0x90 + i);
  1801  000E1C  503F               	movf	trocarSenha@i^0,w,c
  1802  000E1E  0F90               	addlw	144
  1803  000E20  EC87  F00B         	call	_lcd_cmd
  1804  000E24                     
  1805                           ;principal.c: 306:         lcd_dat(tmp);
  1806  000E24  5040               	movf	trocarSenha@tmp^0,w,c
  1807  000E26  EC70  F00B         	call	_lcd_dat
  1808  000E2A                     
  1809                           ;principal.c: 307:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1810  000E2A  0E02               	movlw	2
  1811  000E2C  6E38               	movwf	(??_trocarSenha+1)^0,c
  1812  000E2E  0E04               	movlw	4
  1813  000E30  6E37               	movwf	??_trocarSenha^0,c
  1814  000E32  0EBA               	movlw	186
  1815  000E34                     u1867:
  1816  000E34  2EE8               	decfsz	wreg,f,c
  1817  000E36  D7FE               	bra	u1867
  1818  000E38  2E37               	decfsz	??_trocarSenha^0,f,c
  1819  000E3A  D7FC               	bra	u1867
  1820  000E3C  2E38               	decfsz	(??_trocarSenha+1)^0,f,c
  1821  000E3E  D7FA               	bra	u1867
  1822  000E40  D000               	nop2	
  1823  000E42                     
  1824                           ;principal.c: 308:         lcd_cmd(0x90 + i);
  1825  000E42  503F               	movf	trocarSenha@i^0,w,c
  1826  000E44  0F90               	addlw	144
  1827  000E46  EC87  F00B         	call	_lcd_cmd
  1828  000E4A                     
  1829                           ;principal.c: 309:         lcd_str("*");
  1830  000E4A  0EA6               	movlw	low STR_19
  1831  000E4C  6E26               	movwf	lcd_str@str^0,c
  1832  000E4E  0E06               	movlw	high STR_19
  1833  000E50  6E27               	movwf	(lcd_str@str+1)^0,c
  1834  000E52  ECA1  F00A         	call	_lcd_str	;wreg free
  1835  000E56                     
  1836                           ;principal.c: 310:         senha[i] = tmp;
  1837  000E56  0E39               	movlw	low trocarSenha@senha
  1838  000E58  243F               	addwf	trocarSenha@i^0,w,c
  1839  000E5A  6ED9               	movwf	fsr2l,c
  1840  000E5C  6ADA               	clrf	fsr2h,c
  1841  000E5E  0E00               	movlw	high trocarSenha@senha
  1842  000E60  22DA               	addwfc	fsr2h,f,c
  1843  000E62  C040  FFDF         	movff	trocarSenha@tmp,indf2
  1844  000E66                     
  1845                           ;principal.c: 311:         if (senha[i] == e2pext_r(i)) {
  1846  000E66  0E39               	movlw	low trocarSenha@senha
  1847  000E68  243F               	addwf	trocarSenha@i^0,w,c
  1848  000E6A  6ED9               	movwf	fsr2l,c
  1849  000E6C  6ADA               	clrf	fsr2h,c
  1850  000E6E  0E00               	movlw	high trocarSenha@senha
  1851  000E70  22DA               	addwfc	fsr2h,f,c
  1852  000E72  C03F  F028         	movff	trocarSenha@i,e2pext_r@addr
  1853  000E76  6A29               	clrf	(e2pext_r@addr+1)^0,c
  1854  000E78  ECDD  F00A         	call	_e2pext_r	;wreg free
  1855  000E7C  6E38               	movwf	(??_trocarSenha+1)^0,c
  1856  000E7E  50DE               	movf	postinc2,w,c
  1857  000E80  1838               	xorwf	(??_trocarSenha+1)^0,w,c
  1858  000E82  A4D8               	btfss	status,2,c
  1859  000E84  EF46  F007         	goto	u1241
  1860  000E88  EF48  F007         	goto	u1240
  1861  000E8C                     u1241:
  1862  000E8C  EF49  F007         	goto	l218
  1863  000E90                     u1240:
  1864  000E90                     
  1865                           ;principal.c: 312:             cont++;
  1866  000E90  2A3E               	incf	trocarSenha@cont^0,f,c
  1867  000E92                     l218:
  1868                           
  1869                           ;principal.c: 314:     }
  1870  000E92  2A3F               	incf	trocarSenha@i^0,f,c
  1871  000E94  0E04               	movlw	4
  1872  000E96  643F               	cpfsgt	trocarSenha@i^0,c
  1873  000E98  EF50  F007         	goto	u1251
  1874  000E9C  EF52  F007         	goto	u1250
  1875  000EA0                     u1251:
  1876  000EA0  EFDE  F006         	goto	l2009
  1877  000EA4                     u1250:
  1878  000EA4                     
  1879                           ;principal.c: 316:     if (cont == 5) {
  1880  000EA4  0E05               	movlw	5
  1881  000EA6  183E               	xorwf	trocarSenha@cont^0,w,c
  1882  000EA8  A4D8               	btfss	status,2,c
  1883  000EAA  EF59  F007         	goto	u1261
  1884  000EAE  EF5B  F007         	goto	u1260
  1885  000EB2                     u1261:
  1886  000EB2  EFD4  F007         	goto	l2099
  1887  000EB6                     u1260:
  1888  000EB6                     
  1889                           ;principal.c: 317:         lcd_cmd(0x01);
  1890  000EB6  0E01               	movlw	1
  1891  000EB8  EC87  F00B         	call	_lcd_cmd
  1892                           
  1893                           ;principal.c: 318:         lcd_cmd(0x80);
  1894  000EBC  0E80               	movlw	128
  1895  000EBE  EC87  F00B         	call	_lcd_cmd
  1896  000EC2                     
  1897                           ;principal.c: 319:         lcd_str("Digite senha");
  1898  000EC2  0E59               	movlw	low STR_24
  1899  000EC4  6E26               	movwf	lcd_str@str^0,c
  1900  000EC6  0E06               	movlw	high STR_24
  1901  000EC8  6E27               	movwf	(lcd_str@str+1)^0,c
  1902  000ECA  ECA1  F00A         	call	_lcd_str	;wreg free
  1903  000ECE                     
  1904                           ;principal.c: 320:         lcd_cmd(0xC0);
  1905  000ECE  0EC0               	movlw	192
  1906  000ED0  EC87  F00B         	call	_lcd_cmd
  1907                           
  1908                           ;principal.c: 321:         lcd_str("nova:");
  1909  000ED4  0EA0               	movlw	low STR_28
  1910  000ED6  6E26               	movwf	lcd_str@str^0,c
  1911  000ED8  0E06               	movlw	high STR_28
  1912  000EDA  6E27               	movwf	(lcd_str@str+1)^0,c
  1913  000EDC  ECA1  F00A         	call	_lcd_str	;wreg free
  1914  000EE0                     
  1915                           ;principal.c: 322:         for (i = 0; i < 5; i++) {
  1916  000EE0  0E00               	movlw	0
  1917  000EE2  6E3F               	movwf	trocarSenha@i^0,c
  1918  000EE4                     l2061:
  1919                           
  1920                           ;principal.c: 323:             TRISB = 0xF0;
  1921  000EE4  0EF0               	movlw	240
  1922  000EE6  6E93               	movwf	147,c	;volatile
  1923                           
  1924                           ;principal.c: 324:             TRISD = 0x0F;
  1925  000EE8  0E0F               	movlw	15
  1926  000EEA  6E95               	movwf	149,c	;volatile
  1927  000EEC                     l2063:
  1928                           
  1929                           ;principal.c: 325:             tmp = tc_tecla();
  1930  000EEC  ECEB  F007         	call	_tc_tecla	;wreg free
  1931  000EF0  6E40               	movwf	trocarSenha@tmp^0,c
  1932  000EF2                     
  1933                           ;principal.c: 326:             while (tmp == 255) {
  1934  000EF2  2840               	incf	trocarSenha@tmp^0,w,c
  1935  000EF4  B4D8               	btfsc	status,2,c
  1936  000EF6  EF7F  F007         	goto	u1271
  1937  000EFA  EF81  F007         	goto	u1270
  1938  000EFE                     u1271:
  1939  000EFE  EF76  F007         	goto	l2063
  1940  000F02                     u1270:
  1941  000F02                     
  1942                           ;principal.c: 329:             TRISD = 0x00;
  1943  000F02  0E00               	movlw	0
  1944  000F04  6E95               	movwf	149,c	;volatile
  1945  000F06                     
  1946                           ;principal.c: 330:             if (tmp == 10) {
  1947  000F06  0E0A               	movlw	10
  1948  000F08  1840               	xorwf	trocarSenha@tmp^0,w,c
  1949  000F0A  A4D8               	btfss	status,2,c
  1950  000F0C  EF8A  F007         	goto	u1281
  1951  000F10  EF8C  F007         	goto	u1280
  1952  000F14                     u1281:
  1953  000F14  EF91  F007         	goto	l2075
  1954  000F18                     u1280:
  1955  000F18                     
  1956                           ;principal.c: 331:                 tmp = tmp + 0x20;
  1957  000F18  5040               	movf	trocarSenha@tmp^0,w,c
  1958  000F1A  0F20               	addlw	32
  1959  000F1C  6E40               	movwf	trocarSenha@tmp^0,c
  1960                           
  1961                           ;principal.c: 332:             } else {
  1962  000F1E  EFA2  F007         	goto	l2081
  1963  000F22                     l2075:
  1964                           
  1965                           ;principal.c: 333:                 if (tmp == 12) {
  1966  000F22  0E0C               	movlw	12
  1967  000F24  1840               	xorwf	trocarSenha@tmp^0,w,c
  1968  000F26  A4D8               	btfss	status,2,c
  1969  000F28  EF98  F007         	goto	u1291
  1970  000F2C  EF9A  F007         	goto	u1290
  1971  000F30                     u1291:
  1972  000F30  EF9F  F007         	goto	l2079
  1973  000F34                     u1290:
  1974  000F34                     
  1975                           ;principal.c: 334:                     tmp = tmp + 0x17;
  1976  000F34  5040               	movf	trocarSenha@tmp^0,w,c
  1977  000F36  0F17               	addlw	23
  1978  000F38  6E40               	movwf	trocarSenha@tmp^0,c
  1979                           
  1980                           ;principal.c: 335:                 } else {
  1981  000F3A  EFA2  F007         	goto	l2081
  1982  000F3E                     l2079:
  1983                           
  1984                           ;principal.c: 336:                     tmp = tmp + 0x30;
  1985  000F3E  5040               	movf	trocarSenha@tmp^0,w,c
  1986  000F40  0F30               	addlw	48
  1987  000F42  6E40               	movwf	trocarSenha@tmp^0,c
  1988  000F44                     l2081:
  1989                           
  1990                           ;principal.c: 339:             lcd_cmd(0x90 + i);
  1991  000F44  503F               	movf	trocarSenha@i^0,w,c
  1992  000F46  0F90               	addlw	144
  1993  000F48  EC87  F00B         	call	_lcd_cmd
  1994  000F4C                     
  1995                           ;principal.c: 340:             lcd_dat(tmp);
  1996  000F4C  5040               	movf	trocarSenha@tmp^0,w,c
  1997  000F4E  EC70  F00B         	call	_lcd_dat
  1998  000F52                     
  1999                           ;principal.c: 341:             _delay((unsigned long)((100)*(8000000/4000.0)));
  2000  000F52  0E02               	movlw	2
  2001  000F54  6E38               	movwf	(??_trocarSenha+1)^0,c
  2002  000F56  0E04               	movlw	4
  2003  000F58  6E37               	movwf	??_trocarSenha^0,c
  2004  000F5A  0EBA               	movlw	186
  2005  000F5C                     u1877:
  2006  000F5C  2EE8               	decfsz	wreg,f,c
  2007  000F5E  D7FE               	bra	u1877
  2008  000F60  2E37               	decfsz	??_trocarSenha^0,f,c
  2009  000F62  D7FC               	bra	u1877
  2010  000F64  2E38               	decfsz	(??_trocarSenha+1)^0,f,c
  2011  000F66  D7FA               	bra	u1877
  2012  000F68  D000               	nop2	
  2013  000F6A                     
  2014                           ;principal.c: 342:             lcd_cmd(0x90 + i);
  2015  000F6A  503F               	movf	trocarSenha@i^0,w,c
  2016  000F6C  0F90               	addlw	144
  2017  000F6E  EC87  F00B         	call	_lcd_cmd
  2018  000F72                     
  2019                           ;principal.c: 343:             lcd_str("*");
  2020  000F72  0EA6               	movlw	low STR_19
  2021  000F74  6E26               	movwf	lcd_str@str^0,c
  2022  000F76  0E06               	movlw	high STR_19
  2023  000F78  6E27               	movwf	(lcd_str@str+1)^0,c
  2024  000F7A  ECA1  F00A         	call	_lcd_str	;wreg free
  2025  000F7E                     
  2026                           ;principal.c: 344:             e2pext_w(i, tmp);
  2027  000F7E  C03F  F02D         	movff	trocarSenha@i,e2pext_w@addr
  2028  000F82  6A2E               	clrf	(e2pext_w@addr+1)^0,c
  2029  000F84  C040  F02F         	movff	trocarSenha@tmp,e2pext_w@val
  2030  000F88  EC1E  F00A         	call	_e2pext_w	;wreg free
  2031  000F8C                     
  2032                           ;principal.c: 345:         }
  2033  000F8C  2A3F               	incf	trocarSenha@i^0,f,c
  2034  000F8E  0E04               	movlw	4
  2035  000F90  643F               	cpfsgt	trocarSenha@i^0,c
  2036  000F92  EFCD  F007         	goto	u1301
  2037  000F96  EFCF  F007         	goto	u1300
  2038  000F9A                     u1301:
  2039  000F9A  EF72  F007         	goto	l2061
  2040  000F9E                     u1300:
  2041  000F9E                     
  2042                           ;principal.c: 346:         lcd_cmd(0x01);
  2043  000F9E  0E01               	movlw	1
  2044  000FA0  EC87  F00B         	call	_lcd_cmd
  2045                           
  2046                           ;principal.c: 347:     } else {
  2047  000FA4  EFEA  F007         	goto	l230
  2048  000FA8                     l2099:
  2049                           
  2050                           ;principal.c: 348:         lcd_cmd(0x01);
  2051  000FA8  0E01               	movlw	1
  2052  000FAA  EC87  F00B         	call	_lcd_cmd
  2053                           
  2054                           ;principal.c: 349:         lcd_cmd(0x80);
  2055  000FAE  0E80               	movlw	128
  2056  000FB0  EC87  F00B         	call	_lcd_cmd
  2057  000FB4                     
  2058                           ;principal.c: 350:         lcd_str(" Senha incorreta ");
  2059  000FB4  0E05               	movlw	low STR_22
  2060  000FB6  6E26               	movwf	lcd_str@str^0,c
  2061  000FB8  0E06               	movlw	high STR_22
  2062  000FBA  6E27               	movwf	(lcd_str@str+1)^0,c
  2063  000FBC  ECA1  F00A         	call	_lcd_str	;wreg free
  2064  000FC0                     
  2065                           ;principal.c: 351:         _delay((unsigned long)((50)*(8000000/4000.0)));
  2066  000FC0  0E82               	movlw	130
  2067  000FC2  6E37               	movwf	??_trocarSenha^0,c
  2068  000FC4  0EDE               	movlw	222
  2069  000FC6                     u1887:
  2070  000FC6  2EE8               	decfsz	wreg,f,c
  2071  000FC8  D7FE               	bra	u1887
  2072  000FCA  2E37               	decfsz	??_trocarSenha^0,f,c
  2073  000FCC  D7FC               	bra	u1887
  2074  000FCE                     
  2075                           ;principal.c: 352:         lcd_cmd(0x01);
  2076  000FCE  0E01               	movlw	1
  2077  000FD0  EC87  F00B         	call	_lcd_cmd
  2078  000FD4                     l230:
  2079  000FD4  0012               	return		;funcret
  2080  000FD6                     __end_of_trocarSenha:
  2081                           	callstack 0
  2082                           
  2083 ;; *************** function _e2pext_w *****************
  2084 ;; Defined at:
  2085 ;;		line 130 in file "./i2c.h"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;  addr            2   10[COMRAM] unsigned int 
  2088 ;;  val             1   12[COMRAM] unsigned char 
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;  tmp             2   18[COMRAM] unsigned int 
  2091 ;;  nt              1   17[COMRAM] unsigned char 
  2092 ;;  al              1   16[COMRAM] unsigned char 
  2093 ;;  ah              1   15[COMRAM] unsigned char 
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  1    wreg      void 
  2096 ;; Registers used:
  2097 ;;		wreg, status,2, status,0, cstack
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2103 ;;      Params:         3       0       0       0       0       0       0
  2104 ;;      Locals:         5       0       0       0       0       0       0
  2105 ;;      Temps:          2       0       0       0       0       0       0
  2106 ;;      Totals:        10       0       0       0       0       0       0
  2107 ;;Total ram usage:       10 bytes
  2108 ;; Hardware stack levels used:    1
  2109 ;; Hardware stack levels required when called:    3
  2110 ;; This function calls:
  2111 ;;		_e2pext_r
  2112 ;;		_i2c_start
  2113 ;;		_i2c_stop
  2114 ;;		_i2c_wb
  2115 ;; This function is called by:
  2116 ;;		_trocarSenha
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           	psect	text2
  2121  00143C                     __ptext2:
  2122                           	callstack 0
  2123  00143C                     _e2pext_w:
  2124                           	callstack 26
  2125  00143C                     
  2126                           ;./i2c.h: 130: void e2pext_w(unsigned int addr, unsigned char val);./i2c.h: 131: {;./i2c
      +                          .h: 132:   unsigned int tmp;;./i2c.h: 133:   unsigned char ah;;./i2c.h: 134:   unsigned 
      +                          char al;;./i2c.h: 135:   unsigned char nt;;./i2c.h: 137:   tmp=val;
  2127  00143C  C02F  F035         	movff	e2pext_w@val,e2pext_w@tmp
  2128  001440  6A36               	clrf	(e2pext_w@tmp+1)^0,c
  2129  001442                     
  2130                           ;./i2c.h: 138:   ah=(addr&0x0100)>>8;
  2131  001442  502E               	movf	(e2pext_w@addr+1)^0,w,c
  2132  001444  0B01               	andlw	1
  2133  001446  6E32               	movwf	e2pext_w@ah^0,c
  2134  001448                     
  2135                           ;./i2c.h: 139:   al=addr&0x00FF;
  2136  001448  C02D  F033         	movff	e2pext_w@addr,e2pext_w@al
  2137  00144C                     
  2138                           ;./i2c.h: 140:   nt=0;
  2139  00144C  0E00               	movlw	0
  2140  00144E  6E34               	movwf	e2pext_w@nt^0,c
  2141  001450                     l1895:
  2142                           
  2143                           ;./i2c.h: 143:   {;./i2c.h: 144:     i2c_start();
  2144  001450  ECBA  F00B         	call	_i2c_start	;wreg free
  2145  001454                     
  2146                           ;./i2c.h: 145:     if(ah)
  2147  001454  5032               	movf	e2pext_w@ah^0,w,c
  2148  001456  B4D8               	btfsc	status,2,c
  2149  001458  EF30  F00A         	goto	u1111
  2150  00145C  EF32  F00A         	goto	u1110
  2151  001460                     u1111:
  2152  001460  EF37  F00A         	goto	l1901
  2153  001464                     u1110:
  2154  001464                     
  2155                           ;./i2c.h: 146:     {;./i2c.h: 147:       i2c_wb(0xA2);
  2156  001464  0EA2               	movlw	162
  2157  001466  EC42  F00B         	call	_i2c_wb
  2158                           
  2159                           ;./i2c.h: 148:     }
  2160  00146A  EF3A  F00A         	goto	l98
  2161  00146E                     l1901:
  2162                           
  2163                           ;./i2c.h: 150:     {;./i2c.h: 151:       i2c_wb(0xA0);
  2164  00146E  0EA0               	movlw	160
  2165  001470  EC42  F00B         	call	_i2c_wb
  2166  001474                     l98:
  2167                           
  2168                           ;./i2c.h: 153:     i2c_wb(al);
  2169  001474  5033               	movf	e2pext_w@al^0,w,c
  2170  001476  EC42  F00B         	call	_i2c_wb
  2171                           
  2172                           ;./i2c.h: 154:     i2c_wb(tmp);
  2173  00147A  5035               	movf	e2pext_w@tmp^0,w,c
  2174  00147C  EC42  F00B         	call	_i2c_wb
  2175  001480                     
  2176                           ;./i2c.h: 155:     i2c_stop();
  2177  001480  ECB2  F00B         	call	_i2c_stop	;wreg free
  2178  001484                     
  2179                           ;./i2c.h: 157:     nt++;
  2180  001484  2A34               	incf	e2pext_w@nt^0,f,c
  2181  001486                     
  2182                           ;./i2c.h: 158:   }
  2183  001486  C02D  F028         	movff	e2pext_w@addr,e2pext_r@addr
  2184  00148A  C02E  F029         	movff	e2pext_w@addr+1,e2pext_r@addr+1
  2185  00148E  ECDD  F00A         	call	_e2pext_r	;wreg free
  2186  001492  6E30               	movwf	??_e2pext_w^0,c
  2187  001494  6A31               	clrf	(??_e2pext_w+1)^0,c
  2188  001496  5035               	movf	e2pext_w@tmp^0,w,c
  2189  001498  1830               	xorwf	??_e2pext_w^0,w,c
  2190  00149A  E109               	bnz	u1120
  2191  00149C  5036               	movf	(e2pext_w@tmp+1)^0,w,c
  2192  00149E  1831               	xorwf	(??_e2pext_w+1)^0,w,c
  2193  0014A0  B4D8               	btfsc	status,2,c
  2194  0014A2  EF55  F00A         	goto	u1121
  2195  0014A6  EF57  F00A         	goto	u1120
  2196  0014AA                     u1121:
  2197  0014AA  EF5F  F00A         	goto	l102
  2198  0014AE                     u1120:
  2199  0014AE  0E09               	movlw	9
  2200  0014B0  6434               	cpfsgt	e2pext_w@nt^0,c
  2201  0014B2  EF5D  F00A         	goto	u1131
  2202  0014B6  EF5F  F00A         	goto	u1130
  2203  0014BA                     u1131:
  2204  0014BA  EF28  F00A         	goto	l1895
  2205  0014BE                     u1130:
  2206  0014BE                     l102:
  2207  0014BE  0012               	return		;funcret
  2208  0014C0                     __end_of_e2pext_w:
  2209                           	callstack 0
  2210                           
  2211 ;; *************** function _rtc_r *****************
  2212 ;; Defined at:
  2213 ;;		line 16 in file "./rtc.h"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;		None
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;  tmp             1    5[COMRAM] unsigned char 
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  1    wreg      void 
  2220 ;; Registers used:
  2221 ;;		wreg, status,2, status,0, cstack
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2227 ;;      Params:         0       0       0       0       0       0       0
  2228 ;;      Locals:         1       0       0       0       0       0       0
  2229 ;;      Temps:          0       0       0       0       0       0       0
  2230 ;;      Totals:         1       0       0       0       0       0       0
  2231 ;;Total ram usage:        1 bytes
  2232 ;; Hardware stack levels used:    1
  2233 ;; Hardware stack levels required when called:    2
  2234 ;; This function calls:
  2235 ;;		_getd
  2236 ;;		_getu
  2237 ;;		_i2c_rb
  2238 ;;		_i2c_start
  2239 ;;		_i2c_stop
  2240 ;;		_i2c_wb
  2241 ;; This function is called by:
  2242 ;;		_main
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text3
  2247  001364                     __ptext3:
  2248                           	callstack 0
  2249  001364                     _rtc_r:
  2250                           	callstack 28
  2251  001364                     
  2252                           ;./rtc.h: 18:   unsigned char tmp;;./rtc.h: 20:   i2c_start();
  2253  001364  ECBA  F00B         	call	_i2c_start	;wreg free
  2254  001368                     
  2255                           ;./rtc.h: 21:   i2c_wb(0xD0);
  2256  001368  0ED0               	movlw	208
  2257  00136A  EC42  F00B         	call	_i2c_wb
  2258  00136E                     
  2259                           ;./rtc.h: 22:   i2c_wb(0);
  2260  00136E  0E00               	movlw	0
  2261  001370  EC42  F00B         	call	_i2c_wb
  2262                           
  2263                           ;./rtc.h: 24:   i2c_start();
  2264  001374  ECBA  F00B         	call	_i2c_start	;wreg free
  2265  001378                     
  2266                           ;./rtc.h: 25:   i2c_wb(0xD1);
  2267  001378  0ED1               	movlw	209
  2268  00137A  EC42  F00B         	call	_i2c_wb
  2269  00137E                     
  2270                           ;./rtc.h: 26:   tmp= 0x7F & i2c_rb(1);
  2271  00137E  0E01               	movlw	1
  2272  001380  EC60  F00A         	call	_i2c_rb
  2273  001384  0B7F               	andlw	127
  2274  001386  6E28               	movwf	rtc_r@tmp^0,c
  2275  001388                     
  2276                           ;./rtc.h: 27:   time[5]=':';
  2277  001388  0E3A               	movlw	58
  2278  00138A  6E1E               	movwf	(_time+5)^0,c	;volatile
  2279  00138C                     
  2280                           ;./rtc.h: 28:   time[6]=getd(tmp);
  2281  00138C  5028               	movf	rtc_r@tmp^0,w,c
  2282  00138E  ECC2  F00B         	call	_getd
  2283  001392  6E1F               	movwf	(_time+6)^0,c	;volatile
  2284  001394                     
  2285                           ;./rtc.h: 29:   time[7]=getu(tmp);
  2286  001394  5028               	movf	rtc_r@tmp^0,w,c
  2287  001396  ECC8  F00B         	call	_getu
  2288  00139A  6E20               	movwf	(_time+7)^0,c	;volatile
  2289  00139C                     
  2290                           ;./rtc.h: 30:   time[8]=0;
  2291  00139C  0E00               	movlw	0
  2292  00139E  6E21               	movwf	(_time+8)^0,c	;volatile
  2293  0013A0                     
  2294                           ;./rtc.h: 32:   tmp= 0x7F & i2c_rb(1);
  2295  0013A0  0E01               	movlw	1
  2296  0013A2  EC60  F00A         	call	_i2c_rb
  2297  0013A6  0B7F               	andlw	127
  2298  0013A8  6E28               	movwf	rtc_r@tmp^0,c
  2299  0013AA                     
  2300                           ;./rtc.h: 33:   time[2]=':';
  2301  0013AA  0E3A               	movlw	58
  2302  0013AC  6E1B               	movwf	(_time+2)^0,c	;volatile
  2303  0013AE                     
  2304                           ;./rtc.h: 34:   time[3]=getd(tmp);
  2305  0013AE  5028               	movf	rtc_r@tmp^0,w,c
  2306  0013B0  ECC2  F00B         	call	_getd
  2307  0013B4  6E1C               	movwf	(_time+3)^0,c	;volatile
  2308  0013B6                     
  2309                           ;./rtc.h: 35:   time[4]=getu(tmp);
  2310  0013B6  5028               	movf	rtc_r@tmp^0,w,c
  2311  0013B8  ECC8  F00B         	call	_getu
  2312  0013BC  6E1D               	movwf	(_time+4)^0,c	;volatile
  2313  0013BE                     
  2314                           ;./rtc.h: 37:   tmp= 0x3F & i2c_rb(1);
  2315  0013BE  0E01               	movlw	1
  2316  0013C0  EC60  F00A         	call	_i2c_rb
  2317  0013C4  0B3F               	andlw	63
  2318  0013C6  6E28               	movwf	rtc_r@tmp^0,c
  2319  0013C8                     
  2320                           ;./rtc.h: 38:   time[0]=getd(tmp);
  2321  0013C8  5028               	movf	rtc_r@tmp^0,w,c
  2322  0013CA  ECC2  F00B         	call	_getd
  2323  0013CE  6E19               	movwf	_time^0,c	;volatile
  2324  0013D0                     
  2325                           ;./rtc.h: 39:   time[1]=getu(tmp);
  2326  0013D0  5028               	movf	rtc_r@tmp^0,w,c
  2327  0013D2  ECC8  F00B         	call	_getu
  2328  0013D6  6E1A               	movwf	(_time+1)^0,c	;volatile
  2329  0013D8                     
  2330                           ;./rtc.h: 41:   i2c_rb(1);
  2331  0013D8  0E01               	movlw	1
  2332  0013DA  EC60  F00A         	call	_i2c_rb
  2333  0013DE                     
  2334                           ;./rtc.h: 43:   tmp= 0x3F & i2c_rb(1);
  2335  0013DE  0E01               	movlw	1
  2336  0013E0  EC60  F00A         	call	_i2c_rb
  2337  0013E4  0B3F               	andlw	63
  2338  0013E6  6E28               	movwf	rtc_r@tmp^0,c
  2339  0013E8                     
  2340                           ;./rtc.h: 44:   date[0]=getd(tmp);
  2341  0013E8  5028               	movf	rtc_r@tmp^0,w,c
  2342  0013EA  ECC2  F00B         	call	_getd
  2343  0013EE  6E0B               	movwf	_date^0,c	;volatile
  2344  0013F0                     
  2345                           ;./rtc.h: 45:   date[1]=getu(tmp);
  2346  0013F0  5028               	movf	rtc_r@tmp^0,w,c
  2347  0013F2  ECC8  F00B         	call	_getu
  2348  0013F6  6E0C               	movwf	(_date+1)^0,c	;volatile
  2349  0013F8                     
  2350                           ;./rtc.h: 48:   tmp= 0x1F & i2c_rb(1);
  2351  0013F8  0E01               	movlw	1
  2352  0013FA  EC60  F00A         	call	_i2c_rb
  2353  0013FE  0B1F               	andlw	31
  2354  001400  6E28               	movwf	rtc_r@tmp^0,c
  2355  001402                     
  2356                           ;./rtc.h: 49:   date[2]='/';
  2357  001402  0E2F               	movlw	47
  2358  001404  6E0D               	movwf	(_date+2)^0,c	;volatile
  2359  001406                     
  2360                           ;./rtc.h: 50:   date[3]=getd(tmp);
  2361  001406  5028               	movf	rtc_r@tmp^0,w,c
  2362  001408  ECC2  F00B         	call	_getd
  2363  00140C  6E0E               	movwf	(_date+3)^0,c	;volatile
  2364  00140E                     
  2365                           ;./rtc.h: 51:   date[4]=getu(tmp);
  2366  00140E  5028               	movf	rtc_r@tmp^0,w,c
  2367  001410  ECC8  F00B         	call	_getu
  2368  001414  6E0F               	movwf	(_date+4)^0,c	;volatile
  2369  001416                     
  2370                           ;./rtc.h: 53:   tmp= i2c_rb(0);
  2371  001416  0E00               	movlw	0
  2372  001418  EC60  F00A         	call	_i2c_rb
  2373  00141C  6E28               	movwf	rtc_r@tmp^0,c
  2374  00141E                     
  2375                           ;./rtc.h: 54:   date[5]='/';
  2376  00141E  0E2F               	movlw	47
  2377  001420  6E10               	movwf	(_date+5)^0,c	;volatile
  2378  001422                     
  2379                           ;./rtc.h: 55:   date[6]=getd(tmp);
  2380  001422  5028               	movf	rtc_r@tmp^0,w,c
  2381  001424  ECC2  F00B         	call	_getd
  2382  001428  6E11               	movwf	(_date+6)^0,c	;volatile
  2383  00142A                     
  2384                           ;./rtc.h: 56:   date[7]=getu(tmp);
  2385  00142A  5028               	movf	rtc_r@tmp^0,w,c
  2386  00142C  ECC8  F00B         	call	_getu
  2387  001430  6E12               	movwf	(_date+7)^0,c	;volatile
  2388  001432                     
  2389                           ;./rtc.h: 57:   date[8]=0;
  2390  001432  0E00               	movlw	0
  2391  001434  6E13               	movwf	(_date+8)^0,c	;volatile
  2392                           
  2393                           ;./rtc.h: 59:   i2c_stop();
  2394  001436  ECB2  F00B         	call	_i2c_stop	;wreg free
  2395  00143A  0012               	return		;funcret
  2396  00143C                     __end_of_rtc_r:
  2397                           	callstack 0
  2398                           
  2399 ;; *************** function _getu *****************
  2400 ;; Defined at:
  2401 ;;		line 10 in file "./rtc.h"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;  nn              1    wreg     unsigned char 
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;  nn              1    0[COMRAM] unsigned char 
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  1    wreg      unsigned char 
  2408 ;; Registers used:
  2409 ;;		wreg, status,2, status,0
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2415 ;;      Params:         0       0       0       0       0       0       0
  2416 ;;      Locals:         1       0       0       0       0       0       0
  2417 ;;      Temps:          0       0       0       0       0       0       0
  2418 ;;      Totals:         1       0       0       0       0       0       0
  2419 ;;Total ram usage:        1 bytes
  2420 ;; Hardware stack levels used:    1
  2421 ;; This function calls:
  2422 ;;		Nothing
  2423 ;; This function is called by:
  2424 ;;		_rtc_r
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428                           	psect	text4
  2429  001790                     __ptext4:
  2430                           	callstack 0
  2431  001790                     _getu:
  2432                           	callstack 29
  2433                           
  2434                           ;incstack = 0
  2435                           ;getu@nn stored from wreg
  2436  001790  6E23               	movwf	getu@nn^0,c
  2437  001792                     
  2438                           ;./rtc.h: 10: unsigned char getu(unsigned char nn);./rtc.h: 11: {;./rtc.h: 12:   return 
      +                          (nn & 0x0F)+0x30;
  2439  001792  5023               	movf	getu@nn^0,w,c
  2440  001794  0B0F               	andlw	15
  2441  001796  0F30               	addlw	48
  2442  001798  0012               	return		;funcret
  2443  00179A                     __end_of_getu:
  2444                           	callstack 0
  2445                           
  2446 ;; *************** function _getd *****************
  2447 ;; Defined at:
  2448 ;;		line 5 in file "./rtc.h"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;  nn              1    wreg     unsigned char 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;  nn              1    0[COMRAM] unsigned char 
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  1    wreg      unsigned char 
  2455 ;; Registers used:
  2456 ;;		wreg, status,2, status,0
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2462 ;;      Params:         0       0       0       0       0       0       0
  2463 ;;      Locals:         1       0       0       0       0       0       0
  2464 ;;      Temps:          0       0       0       0       0       0       0
  2465 ;;      Totals:         1       0       0       0       0       0       0
  2466 ;;Total ram usage:        1 bytes
  2467 ;; Hardware stack levels used:    1
  2468 ;; This function calls:
  2469 ;;		Nothing
  2470 ;; This function is called by:
  2471 ;;		_rtc_r
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           	psect	text5
  2476  001784                     __ptext5:
  2477                           	callstack 0
  2478  001784                     _getd:
  2479                           	callstack 29
  2480                           
  2481                           ;incstack = 0
  2482                           ;getd@nn stored from wreg
  2483  001784  6E23               	movwf	getd@nn^0,c
  2484  001786                     
  2485                           ;./rtc.h: 5: unsigned char getd(unsigned char nn);./rtc.h: 6: {;./rtc.h: 7:  return ((nn
      +                           & 0xF0)>>4)+0x30;
  2486  001786  3823               	swapf	getd@nn^0,w,c
  2487  001788  0B0F               	andlw	15
  2488  00178A  0B0F               	andlw	15
  2489  00178C  0F30               	addlw	48
  2490  00178E  0012               	return		;funcret
  2491  001790                     __end_of_getd:
  2492                           	callstack 0
  2493                           
  2494 ;; *************** function _lcd_init *****************
  2495 ;; Defined at:
  2496 ;;		line 57 in file "lcd.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;		None
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;		None
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2510 ;;      Params:         0       0       0       0       0       0       0
  2511 ;;      Locals:         0       0       0       0       0       0       0
  2512 ;;      Temps:          1       0       0       0       0       0       0
  2513 ;;      Totals:         1       0       0       0       0       0       0
  2514 ;;Total ram usage:        1 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    2
  2517 ;; This function calls:
  2518 ;;		_lcd_cmd
  2519 ;; This function is called by:
  2520 ;;		_main
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           	psect	text6
  2525  001622                     __ptext6:
  2526                           	callstack 0
  2527  001622                     _lcd_init:
  2528                           	callstack 28
  2529  001622                     
  2530                           ;lcd.c: 59:  PORTEbits.RE1=0;
  2531  001622  9284               	bcf	132,1,c	;volatile
  2532                           
  2533                           ;lcd.c: 60:  PORTEbits.RE2=0;
  2534  001624  9484               	bcf	132,2,c	;volatile
  2535  001626                     
  2536                           ;lcd.c: 61:  _delay((unsigned long)((20)*(8000000/4000.0)));
  2537  001626  0E34               	movlw	52
  2538  001628  6E26               	movwf	??_lcd_init^0,c
  2539  00162A  0EF2               	movlw	242
  2540  00162C                     u1897:
  2541  00162C  2EE8               	decfsz	wreg,f,c
  2542  00162E  D7FE               	bra	u1897
  2543  001630  2E26               	decfsz	??_lcd_init^0,f,c
  2544  001632  D7FC               	bra	u1897
  2545  001634                     
  2546                           ;lcd.c: 62:  PORTEbits.RE1=1;
  2547  001634  8284               	bsf	132,1,c	;volatile
  2548  001636                     
  2549                           ;lcd.c: 64:  lcd_cmd(0x38);
  2550  001636  0E38               	movlw	56
  2551  001638  EC87  F00B         	call	_lcd_cmd
  2552  00163C                     
  2553                           ;lcd.c: 65:  _delay((unsigned long)((5)*(8000000/4000.0)));
  2554  00163C  0E0D               	movlw	13
  2555  00163E  6E26               	movwf	??_lcd_init^0,c
  2556  001640  0EFC               	movlw	252
  2557  001642                     u1907:
  2558  001642  2EE8               	decfsz	wreg,f,c
  2559  001644  D7FE               	bra	u1907
  2560  001646  2E26               	decfsz	??_lcd_init^0,f,c
  2561  001648  D7FC               	bra	u1907
  2562                           
  2563                           ;lcd.c: 66:  lcd_cmd(0x38);
  2564  00164A  0E38               	movlw	56
  2565  00164C  EC87  F00B         	call	_lcd_cmd
  2566  001650                     
  2567                           ;lcd.c: 67:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2568  001650  0E03               	movlw	3
  2569  001652  6E26               	movwf	??_lcd_init^0,c
  2570  001654  0E98               	movlw	152
  2571  001656                     u1917:
  2572  001656  2EE8               	decfsz	wreg,f,c
  2573  001658  D7FE               	bra	u1917
  2574  00165A  2E26               	decfsz	??_lcd_init^0,f,c
  2575  00165C  D7FC               	bra	u1917
  2576  00165E                     
  2577                           ;lcd.c: 68:  lcd_cmd(0x38);
  2578  00165E  0E38               	movlw	56
  2579  001660  EC87  F00B         	call	_lcd_cmd
  2580  001664                     
  2581                           ;lcd.c: 69:  lcd_cmd(0x08);
  2582  001664  0E08               	movlw	8
  2583  001666  EC87  F00B         	call	_lcd_cmd
  2584  00166A                     
  2585                           ;lcd.c: 70:  lcd_cmd(0x0F);
  2586  00166A  0E0F               	movlw	15
  2587  00166C  EC87  F00B         	call	_lcd_cmd
  2588  001670                     
  2589                           ;lcd.c: 71:  lcd_cmd(0x01);
  2590  001670  0E01               	movlw	1
  2591  001672  EC87  F00B         	call	_lcd_cmd
  2592  001676                     
  2593                           ;lcd.c: 72:  lcd_cmd(0x38);
  2594  001676  0E38               	movlw	56
  2595  001678  EC87  F00B         	call	_lcd_cmd
  2596  00167C                     
  2597                           ;lcd.c: 73:         lcd_cmd(0x80);
  2598  00167C  0E80               	movlw	128
  2599  00167E  EC87  F00B         	call	_lcd_cmd
  2600  001682  0012               	return		;funcret
  2601  001684                     __end_of_lcd_init:
  2602                           	callstack 0
  2603                           
  2604 ;; *************** function _i2c_init *****************
  2605 ;; Defined at:
  2606 ;;		line 20 in file "./i2c.h"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;		None
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;		None
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  1    wreg      void 
  2613 ;; Registers used:
  2614 ;;		None
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2620 ;;      Params:         0       0       0       0       0       0       0
  2621 ;;      Locals:         0       0       0       0       0       0       0
  2622 ;;      Temps:          0       0       0       0       0       0       0
  2623 ;;      Totals:         0       0       0       0       0       0       0
  2624 ;;Total ram usage:        0 bytes
  2625 ;; Hardware stack levels used:    1
  2626 ;; This function calls:
  2627 ;;		Nothing
  2628 ;; This function is called by:
  2629 ;;		_main
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text7
  2634  00179A                     __ptext7:
  2635                           	callstack 0
  2636  00179A                     _i2c_init:
  2637                           	callstack 30
  2638  00179A                     
  2639                           ;./i2c.h: 22:   TRISCbits.TRISC4=0;
  2640  00179A  9894               	bcf	148,4,c	;volatile
  2641                           
  2642                           ;./i2c.h: 23:   PORTCbits.RC3=1;
  2643  00179C  8682               	bsf	130,3,c	;volatile
  2644                           
  2645                           ;./i2c.h: 24:   PORTCbits.RC4=1;
  2646  00179E  8882               	bsf	130,4,c	;volatile
  2647  0017A0  0012               	return		;funcret
  2648  0017A2                     __end_of_i2c_init:
  2649                           	callstack 0
  2650                           
  2651 ;; *************** function _escolha *****************
  2652 ;; Defined at:
  2653 ;;		line 220 in file "principal.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;		None
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;  senha           5   14[COMRAM] unsigned char [5]
  2658 ;;  tmp             1   21[COMRAM] unsigned char 
  2659 ;;  i               1   20[COMRAM] unsigned char 
  2660 ;;  cont            1   19[COMRAM] unsigned char 
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  2   10[COMRAM] int 
  2663 ;; Registers used:
  2664 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2670 ;;      Params:         2       0       0       0       0       0       0
  2671 ;;      Locals:         8       0       0       0       0       0       0
  2672 ;;      Temps:          2       0       0       0       0       0       0
  2673 ;;      Totals:        12       0       0       0       0       0       0
  2674 ;;Total ram usage:       12 bytes
  2675 ;; Hardware stack levels used:    1
  2676 ;; Hardware stack levels required when called:    3
  2677 ;; This function calls:
  2678 ;;		_e2pext_r
  2679 ;;		_lcd_cmd
  2680 ;;		_lcd_dat
  2681 ;;		_lcd_str
  2682 ;;		_tc_tecla
  2683 ;; This function is called by:
  2684 ;;		_main
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           
  2688                           	psect	text8
  2689  0011B2                     __ptext8:
  2690                           	callstack 0
  2691  0011B2                     _escolha:
  2692                           	callstack 27
  2693  0011B2                     
  2694                           ;principal.c: 222:     unsigned char tmp;;principal.c: 223:     unsigned char i, cont = 
      +                          0;
  2695  0011B2  0E00               	movlw	0
  2696  0011B4  6E36               	movwf	escolha@cont^0,c
  2697  0011B6                     
  2698                           ;principal.c: 224:     unsigned char senha[5];;principal.c: 226:     lcd_cmd(0x01);
  2699  0011B6  0E01               	movlw	1
  2700  0011B8  EC87  F00B         	call	_lcd_cmd
  2701  0011BC                     
  2702                           ;principal.c: 227:     lcd_cmd(0x80);
  2703  0011BC  0E80               	movlw	128
  2704  0011BE  EC87  F00B         	call	_lcd_cmd
  2705  0011C2                     
  2706                           ;principal.c: 228:     lcd_str("Digite a senha:");
  2707  0011C2  0E49               	movlw	low STR_18
  2708  0011C4  6E26               	movwf	lcd_str@str^0,c
  2709  0011C6  0E06               	movlw	high STR_18
  2710  0011C8  6E27               	movwf	(lcd_str@str+1)^0,c
  2711  0011CA  ECA1  F00A         	call	_lcd_str	;wreg free
  2712  0011CE                     
  2713                           ;principal.c: 229:     for (i = 0; i < 5; i++) {
  2714  0011CE  0E00               	movlw	0
  2715  0011D0  6E37               	movwf	escolha@i^0,c
  2716  0011D2                     l1925:
  2717                           
  2718                           ;principal.c: 230:         TRISB = 0xF0;
  2719  0011D2  0EF0               	movlw	240
  2720  0011D4  6E93               	movwf	147,c	;volatile
  2721                           
  2722                           ;principal.c: 231:         TRISD = 0x0F;
  2723  0011D6  0E0F               	movlw	15
  2724  0011D8  6E95               	movwf	149,c	;volatile
  2725  0011DA                     l1927:
  2726                           
  2727                           ;principal.c: 232:         tmp = tc_tecla();
  2728  0011DA  ECEB  F007         	call	_tc_tecla	;wreg free
  2729  0011DE  6E38               	movwf	escolha@tmp^0,c
  2730  0011E0                     
  2731                           ;principal.c: 233:         while (tmp == 255) {
  2732  0011E0  2838               	incf	escolha@tmp^0,w,c
  2733  0011E2  B4D8               	btfsc	status,2,c
  2734  0011E4  EFF6  F008         	goto	u1141
  2735  0011E8  EFF8  F008         	goto	u1140
  2736  0011EC                     u1141:
  2737  0011EC  EFED  F008         	goto	l1927
  2738  0011F0                     u1140:
  2739  0011F0                     
  2740                           ;principal.c: 236:         TRISD = 0x00;
  2741  0011F0  0E00               	movlw	0
  2742  0011F2  6E95               	movwf	149,c	;volatile
  2743  0011F4                     
  2744                           ;principal.c: 237:         if (tmp == 10) {
  2745  0011F4  0E0A               	movlw	10
  2746  0011F6  1838               	xorwf	escolha@tmp^0,w,c
  2747  0011F8  A4D8               	btfss	status,2,c
  2748  0011FA  EF01  F009         	goto	u1151
  2749  0011FE  EF03  F009         	goto	u1150
  2750  001202                     u1151:
  2751  001202  EF08  F009         	goto	l1939
  2752  001206                     u1150:
  2753  001206                     
  2754                           ;principal.c: 238:             tmp = tmp + 0x20;
  2755  001206  5038               	movf	escolha@tmp^0,w,c
  2756  001208  0F20               	addlw	32
  2757  00120A  6E38               	movwf	escolha@tmp^0,c
  2758                           
  2759                           ;principal.c: 239:         } else {
  2760  00120C  EF19  F009         	goto	l1945
  2761  001210                     l1939:
  2762                           
  2763                           ;principal.c: 240:             if (tmp == 12) {
  2764  001210  0E0C               	movlw	12
  2765  001212  1838               	xorwf	escolha@tmp^0,w,c
  2766  001214  A4D8               	btfss	status,2,c
  2767  001216  EF0F  F009         	goto	u1161
  2768  00121A  EF11  F009         	goto	u1160
  2769  00121E                     u1161:
  2770  00121E  EF16  F009         	goto	l1943
  2771  001222                     u1160:
  2772  001222                     
  2773                           ;principal.c: 241:                 tmp = tmp + 0x17;
  2774  001222  5038               	movf	escolha@tmp^0,w,c
  2775  001224  0F17               	addlw	23
  2776  001226  6E38               	movwf	escolha@tmp^0,c
  2777                           
  2778                           ;principal.c: 242:             } else {
  2779  001228  EF19  F009         	goto	l1945
  2780  00122C                     l1943:
  2781                           
  2782                           ;principal.c: 243:                 tmp = tmp + 0x30;
  2783  00122C  5038               	movf	escolha@tmp^0,w,c
  2784  00122E  0F30               	addlw	48
  2785  001230  6E38               	movwf	escolha@tmp^0,c
  2786  001232                     l1945:
  2787                           
  2788                           ;principal.c: 246:         lcd_cmd(0xC0 + i);
  2789  001232  5037               	movf	escolha@i^0,w,c
  2790  001234  0FC0               	addlw	192
  2791  001236  EC87  F00B         	call	_lcd_cmd
  2792  00123A                     
  2793                           ;principal.c: 247:         lcd_dat(tmp);
  2794  00123A  5038               	movf	escolha@tmp^0,w,c
  2795  00123C  EC70  F00B         	call	_lcd_dat
  2796  001240                     
  2797                           ;principal.c: 248:         _delay((unsigned long)((100)*(8000000/4000.0)));
  2798  001240  0E02               	movlw	2
  2799  001242  6E30               	movwf	(??_escolha+1)^0,c
  2800  001244  0E04               	movlw	4
  2801  001246  6E2F               	movwf	??_escolha^0,c
  2802  001248  0EBA               	movlw	186
  2803  00124A                     u1927:
  2804  00124A  2EE8               	decfsz	wreg,f,c
  2805  00124C  D7FE               	bra	u1927
  2806  00124E  2E2F               	decfsz	??_escolha^0,f,c
  2807  001250  D7FC               	bra	u1927
  2808  001252  2E30               	decfsz	(??_escolha+1)^0,f,c
  2809  001254  D7FA               	bra	u1927
  2810  001256  D000               	nop2	
  2811  001258                     
  2812                           ;principal.c: 249:         lcd_cmd(0xC0 + i);
  2813  001258  5037               	movf	escolha@i^0,w,c
  2814  00125A  0FC0               	addlw	192
  2815  00125C  EC87  F00B         	call	_lcd_cmd
  2816  001260                     
  2817                           ;principal.c: 250:         lcd_str("*");
  2818  001260  0EA6               	movlw	low STR_19
  2819  001262  6E26               	movwf	lcd_str@str^0,c
  2820  001264  0E06               	movlw	high STR_19
  2821  001266  6E27               	movwf	(lcd_str@str+1)^0,c
  2822  001268  ECA1  F00A         	call	_lcd_str	;wreg free
  2823  00126C                     
  2824                           ;principal.c: 251:         senha[i] = tmp;
  2825  00126C  0E31               	movlw	low escolha@senha
  2826  00126E  2437               	addwf	escolha@i^0,w,c
  2827  001270  6ED9               	movwf	fsr2l,c
  2828  001272  6ADA               	clrf	fsr2h,c
  2829  001274  0E00               	movlw	high escolha@senha
  2830  001276  22DA               	addwfc	fsr2h,f,c
  2831  001278  C038  FFDF         	movff	escolha@tmp,indf2
  2832  00127C                     
  2833                           ;principal.c: 252:         if (senha[i] == e2pext_r(i)) {
  2834  00127C  0E31               	movlw	low escolha@senha
  2835  00127E  2437               	addwf	escolha@i^0,w,c
  2836  001280  6ED9               	movwf	fsr2l,c
  2837  001282  6ADA               	clrf	fsr2h,c
  2838  001284  0E00               	movlw	high escolha@senha
  2839  001286  22DA               	addwfc	fsr2h,f,c
  2840  001288  C037  F028         	movff	escolha@i,e2pext_r@addr
  2841  00128C  6A29               	clrf	(e2pext_r@addr+1)^0,c
  2842  00128E  ECDD  F00A         	call	_e2pext_r	;wreg free
  2843  001292  6E30               	movwf	(??_escolha+1)^0,c
  2844  001294  50DE               	movf	postinc2,w,c
  2845  001296  1830               	xorwf	(??_escolha+1)^0,w,c
  2846  001298  A4D8               	btfss	status,2,c
  2847  00129A  EF51  F009         	goto	u1171
  2848  00129E  EF53  F009         	goto	u1170
  2849  0012A2                     u1171:
  2850  0012A2  EF54  F009         	goto	l201
  2851  0012A6                     u1170:
  2852  0012A6                     
  2853                           ;principal.c: 253:             cont++;
  2854  0012A6  2A36               	incf	escolha@cont^0,f,c
  2855  0012A8                     l201:
  2856                           
  2857                           ;principal.c: 255:     }
  2858  0012A8  2A37               	incf	escolha@i^0,f,c
  2859  0012AA  0E04               	movlw	4
  2860  0012AC  6437               	cpfsgt	escolha@i^0,c
  2861  0012AE  EF5B  F009         	goto	u1181
  2862  0012B2  EF5D  F009         	goto	u1180
  2863  0012B6                     u1181:
  2864  0012B6  EFE9  F008         	goto	l1925
  2865  0012BA                     u1180:
  2866  0012BA                     
  2867                           ;principal.c: 257:     if (cont == 5) {
  2868  0012BA  0E05               	movlw	5
  2869  0012BC  1836               	xorwf	escolha@cont^0,w,c
  2870  0012BE  A4D8               	btfss	status,2,c
  2871  0012C0  EF64  F009         	goto	u1191
  2872  0012C4  EF66  F009         	goto	u1190
  2873  0012C8                     u1191:
  2874  0012C8  EF94  F009         	goto	l1979
  2875  0012CC                     u1190:
  2876  0012CC                     
  2877                           ;principal.c: 258:         lcd_cmd(0x01);
  2878  0012CC  0E01               	movlw	1
  2879  0012CE  EC87  F00B         	call	_lcd_cmd
  2880                           
  2881                           ;principal.c: 259:         lcd_cmd(0x80);
  2882  0012D2  0E80               	movlw	128
  2883  0012D4  EC87  F00B         	call	_lcd_cmd
  2884  0012D8                     
  2885                           ;principal.c: 260:         lcd_str(" Senha correta ");
  2886  0012D8  0E39               	movlw	low STR_20
  2887  0012DA  6E26               	movwf	lcd_str@str^0,c
  2888  0012DC  0E06               	movlw	high STR_20
  2889  0012DE  6E27               	movwf	(lcd_str@str+1)^0,c
  2890  0012E0  ECA1  F00A         	call	_lcd_str	;wreg free
  2891  0012E4                     
  2892                           ;principal.c: 261:         lcd_str("");
  2893  0012E4  0E27               	movlw	low (STR_1+16)
  2894  0012E6  6E26               	movwf	lcd_str@str^0,c
  2895  0012E8  0E06               	movlw	high (STR_1+16)
  2896  0012EA  6E27               	movwf	(lcd_str@str+1)^0,c
  2897  0012EC  ECA1  F00A         	call	_lcd_str	;wreg free
  2898  0012F0                     
  2899                           ;principal.c: 262:         _delay((unsigned long)((50)*(8000000/4000.0)));
  2900  0012F0  0E82               	movlw	130
  2901  0012F2  6E2F               	movwf	??_escolha^0,c
  2902  0012F4  0EDE               	movlw	222
  2903  0012F6                     u1937:
  2904  0012F6  2EE8               	decfsz	wreg,f,c
  2905  0012F8  D7FE               	bra	u1937
  2906  0012FA  2E2F               	decfsz	??_escolha^0,f,c
  2907  0012FC  D7FC               	bra	u1937
  2908  0012FE                     
  2909                           ;principal.c: 263:         if (est == 0) {
  2910  0012FE  5017               	movf	_est^0,w,c
  2911  001300  1018               	iorwf	(_est+1)^0,w,c
  2912  001302  A4D8               	btfss	status,2,c
  2913  001304  EF86  F009         	goto	u1201
  2914  001308  EF88  F009         	goto	u1200
  2915  00130C                     u1201:
  2916  00130C  EF8E  F009         	goto	l1977
  2917  001310                     u1200:
  2918  001310                     
  2919                           ;principal.c: 264:             est = 1;
  2920  001310  0E00               	movlw	0
  2921  001312  6E18               	movwf	(_est+1)^0,c
  2922  001314  0E01               	movlw	1
  2923  001316  6E17               	movwf	_est^0,c
  2924                           
  2925                           ;principal.c: 265:         } else est = 0;
  2926  001318  EFAD  F009         	goto	l1987
  2927  00131C                     l1977:
  2928  00131C  0E00               	movlw	0
  2929  00131E  6E18               	movwf	(_est+1)^0,c
  2930  001320  0E00               	movlw	0
  2931  001322  6E17               	movwf	_est^0,c
  2932  001324  EFAD  F009         	goto	l1987
  2933  001328                     l1979:
  2934                           
  2935                           ;principal.c: 268:         lcd_cmd(0x01);
  2936  001328  0E01               	movlw	1
  2937  00132A  EC87  F00B         	call	_lcd_cmd
  2938                           
  2939                           ;principal.c: 269:         lcd_cmd(0x80);
  2940  00132E  0E80               	movlw	128
  2941  001330  EC87  F00B         	call	_lcd_cmd
  2942  001334                     
  2943                           ;principal.c: 270:         lcd_str(" Senha incorreta ");
  2944  001334  0E05               	movlw	low STR_22
  2945  001336  6E26               	movwf	lcd_str@str^0,c
  2946  001338  0E06               	movlw	high STR_22
  2947  00133A  6E27               	movwf	(lcd_str@str+1)^0,c
  2948  00133C  ECA1  F00A         	call	_lcd_str	;wreg free
  2949  001340                     
  2950                           ;principal.c: 271:         lcd_str("");
  2951  001340  0E27               	movlw	low (STR_1+16)
  2952  001342  6E26               	movwf	lcd_str@str^0,c
  2953  001344  0E06               	movlw	high (STR_1+16)
  2954  001346  6E27               	movwf	(lcd_str@str+1)^0,c
  2955  001348  ECA1  F00A         	call	_lcd_str	;wreg free
  2956  00134C                     
  2957                           ;principal.c: 272:         _delay((unsigned long)((50)*(8000000/4000.0)));
  2958  00134C  0E82               	movlw	130
  2959  00134E  6E2F               	movwf	??_escolha^0,c
  2960  001350  0EDE               	movlw	222
  2961  001352                     u1947:
  2962  001352  2EE8               	decfsz	wreg,f,c
  2963  001354  D7FE               	bra	u1947
  2964  001356  2E2F               	decfsz	??_escolha^0,f,c
  2965  001358  D7FC               	bra	u1947
  2966  00135A                     l1987:
  2967                           
  2968                           ;principal.c: 274:     return est;
  2969  00135A  C017  F02D         	movff	_est,?_escolha
  2970  00135E  C018  F02E         	movff	_est+1,?_escolha+1
  2971  001362  0012               	return		;funcret
  2972  001364                     __end_of_escolha:
  2973                           	callstack 0
  2974                           
  2975 ;; *************** function _tc_tecla *****************
  2976 ;; Defined at:
  2977 ;;		line 34 in file "teclado.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;		None
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;  timeout         2    4[COMRAM] unsigned int 
  2982 ;;  to              2    1[COMRAM] unsigned int 
  2983 ;;  i               1    7[COMRAM] unsigned char 
  2984 ;;  ret             1    6[COMRAM] unsigned char 
  2985 ;;  tmp             1    3[COMRAM] unsigned char 
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  1    wreg      unsigned char 
  2988 ;; Registers used:
  2989 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2995 ;;      Params:         0       0       0       0       0       0       0
  2996 ;;      Locals:         7       0       0       0       0       0       0
  2997 ;;      Temps:          1       0       0       0       0       0       0
  2998 ;;      Totals:         8       0       0       0       0       0       0
  2999 ;;Total ram usage:        8 bytes
  3000 ;; Hardware stack levels used:    1
  3001 ;; This function calls:
  3002 ;;		Nothing
  3003 ;; This function is called by:
  3004 ;;		_escolha
  3005 ;;		_trocarSenha
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           	psect	text9
  3010  000FD6                     __ptext9:
  3011                           	callstack 0
  3012  000FD6                     _tc_tecla:
  3013                           	callstack 29
  3014  000FD6                     
  3015                           ;teclado.c: 36:   unsigned int to=0;
  3016  000FD6  0E00               	movlw	0
  3017  000FD8  6E25               	movwf	(tc_tecla@to+1)^0,c
  3018  000FDA  0E00               	movlw	0
  3019  000FDC  6E24               	movwf	tc_tecla@to^0,c
  3020                           
  3021                           ;teclado.c: 37:   unsigned char i;;teclado.c: 38:   unsigned char ret=0;
  3022  000FDE  0E00               	movlw	0
  3023  000FE0  6E29               	movwf	tc_tecla@ret^0,c
  3024  000FE2                     
  3025                           ;teclado.c: 39:   unsigned char tmp=PORTB;
  3026  000FE2  CF81 F026          	movff	3969,tc_tecla@tmp	;volatile
  3027                           
  3028                           ;teclado.c: 40:   unsigned int timeout=255;
  3029  000FE6  0E00               	movlw	0
  3030  000FE8  6E28               	movwf	(tc_tecla@timeout+1)^0,c
  3031  000FEA  6827               	setf	tc_tecla@timeout^0,c
  3032                           
  3033                           ;teclado.c: 43:   while(((to < timeout)||(!timeout))&&(!ret))
  3034  000FEC  EFA5  F008         	goto	l1227
  3035  000FF0                     l1175:
  3036                           
  3037                           ;teclado.c: 44:   {;teclado.c: 45:     for(i=0;i<3;i++)
  3038  000FF0  0E00               	movlw	0
  3039  000FF2  6E2A               	movwf	tc_tecla@i^0,c
  3040  000FF4                     l1181:
  3041                           
  3042                           ;teclado.c: 46:     {;teclado.c: 47:       PORTB|=~linha[i];
  3043  000FF4  0E01               	movlw	low _linha
  3044  000FF6  242A               	addwf	tc_tecla@i^0,w,c
  3045  000FF8  6EF6               	movwf	tblptrl,c
  3046  000FFA  6AF7               	clrf	tblptrh,c
  3047  000FFC  0E06               	movlw	high _linha
  3048  000FFE  22F7               	addwfc	tblptrh,f,c
  3049  001000                     	if	0	;There are less than 3 active tblptr bytes
  3050  001000                     	endif
  3051  001000  0008               	tblrd		*
  3052  001002  50F5               	movf	tablat,w,c
  3053  001004  0AFF               	xorlw	255
  3054  001006  1281               	iorwf	129,f,c	;volatile
  3055  001008                     
  3056                           ;teclado.c: 48:       if(!PORTDbits.RD3){
  3057  001008  B683               	btfsc	131,3,c	;volatile
  3058  00100A  EF09  F008         	goto	u151
  3059  00100E  EF0B  F008         	goto	u150
  3060  001012                     u151:
  3061  001012  EF25  F008         	goto	l245
  3062  001016                     u150:
  3063  001016                     
  3064                           ;teclado.c: 49:           _delay((unsigned long)((20)*(1000000/4000.0)));
  3065  001016  0E07               	movlw	7
  3066  001018  6E23               	movwf	??_tc_tecla^0,c
  3067  00101A  0E7D               	movlw	125
  3068  00101C                     u1957:
  3069  00101C  2EE8               	decfsz	wreg,f,c
  3070  00101E  D7FE               	bra	u1957
  3071  001020  2E23               	decfsz	??_tc_tecla^0,f,c
  3072  001022  D7FC               	bra	u1957
  3073  001024  F000               	nop	
  3074  001026                     
  3075                           ;teclado.c: 50:           if(!PORTDbits.RD3){
  3076  001026  B683               	btfsc	131,3,c	;volatile
  3077  001028  EF18  F008         	goto	u161
  3078  00102C  EF1A  F008         	goto	u160
  3079  001030                     u161:
  3080  001030  EF25  F008         	goto	l245
  3081  001034                     u160:
  3082  001034                     l247:
  3083  001034  A683               	btfss	131,3,c	;volatile
  3084  001036  EF1F  F008         	goto	u171
  3085  00103A  EF21  F008         	goto	u170
  3086  00103E                     u171:
  3087  00103E  EF1A  F008         	goto	l247
  3088  001042                     u170:
  3089  001042                     
  3090                           ;teclado.c: 52:               ret= 1+i;
  3091  001042  282A               	incf	tc_tecla@i^0,w,c
  3092  001044  6E29               	movwf	tc_tecla@ret^0,c
  3093                           
  3094                           ;teclado.c: 53:               break;
  3095  001046  EF9D  F008         	goto	l1223
  3096  00104A                     l245:
  3097                           
  3098                           ;teclado.c: 56:       if(!PORTDbits.RD2){
  3099  00104A  B483               	btfsc	131,2,c	;volatile
  3100  00104C  EF2A  F008         	goto	u181
  3101  001050  EF2C  F008         	goto	u180
  3102  001054                     u181:
  3103  001054  EF47  F008         	goto	l250
  3104  001058                     u180:
  3105  001058                     
  3106                           ;teclado.c: 57:           _delay((unsigned long)((20)*(1000000/4000.0)));
  3107  001058  0E07               	movlw	7
  3108  00105A  6E23               	movwf	??_tc_tecla^0,c
  3109  00105C  0E7D               	movlw	125
  3110  00105E                     u1967:
  3111  00105E  2EE8               	decfsz	wreg,f,c
  3112  001060  D7FE               	bra	u1967
  3113  001062  2E23               	decfsz	??_tc_tecla^0,f,c
  3114  001064  D7FC               	bra	u1967
  3115  001066  F000               	nop	
  3116  001068                     
  3117                           ;teclado.c: 58:           if(!PORTDbits.RD2){
  3118  001068  B483               	btfsc	131,2,c	;volatile
  3119  00106A  EF39  F008         	goto	u191
  3120  00106E  EF3B  F008         	goto	u190
  3121  001072                     u191:
  3122  001072  EF47  F008         	goto	l250
  3123  001076                     u190:
  3124  001076                     l252:
  3125  001076  A483               	btfss	131,2,c	;volatile
  3126  001078  EF40  F008         	goto	u201
  3127  00107C  EF42  F008         	goto	u200
  3128  001080                     u201:
  3129  001080  EF3B  F008         	goto	l252
  3130  001084                     u200:
  3131  001084                     
  3132                           ;teclado.c: 60:               ret= 4+i;
  3133  001084  502A               	movf	tc_tecla@i^0,w,c
  3134  001086  0F04               	addlw	4
  3135  001088  6E29               	movwf	tc_tecla@ret^0,c
  3136                           
  3137                           ;teclado.c: 61:             break;
  3138  00108A  EF9D  F008         	goto	l1223
  3139  00108E                     l250:
  3140                           
  3141                           ;teclado.c: 64:       if(!PORTDbits.RD1){
  3142  00108E  B283               	btfsc	131,1,c	;volatile
  3143  001090  EF4C  F008         	goto	u211
  3144  001094  EF4E  F008         	goto	u210
  3145  001098                     u211:
  3146  001098  EF69  F008         	goto	l255
  3147  00109C                     u210:
  3148  00109C                     
  3149                           ;teclado.c: 65:           _delay((unsigned long)((20)*(1000000/4000.0)));
  3150  00109C  0E07               	movlw	7
  3151  00109E  6E23               	movwf	??_tc_tecla^0,c
  3152  0010A0  0E7D               	movlw	125
  3153  0010A2                     u1977:
  3154  0010A2  2EE8               	decfsz	wreg,f,c
  3155  0010A4  D7FE               	bra	u1977
  3156  0010A6  2E23               	decfsz	??_tc_tecla^0,f,c
  3157  0010A8  D7FC               	bra	u1977
  3158  0010AA  F000               	nop	
  3159  0010AC                     
  3160                           ;teclado.c: 66:           if(!PORTDbits.RD1){
  3161  0010AC  B283               	btfsc	131,1,c	;volatile
  3162  0010AE  EF5B  F008         	goto	u221
  3163  0010B2  EF5D  F008         	goto	u220
  3164  0010B6                     u221:
  3165  0010B6  EF69  F008         	goto	l255
  3166  0010BA                     u220:
  3167  0010BA                     l257:
  3168  0010BA  A283               	btfss	131,1,c	;volatile
  3169  0010BC  EF62  F008         	goto	u231
  3170  0010C0  EF64  F008         	goto	u230
  3171  0010C4                     u231:
  3172  0010C4  EF5D  F008         	goto	l257
  3173  0010C8                     u230:
  3174  0010C8                     
  3175                           ;teclado.c: 68:               ret= 7+i;
  3176  0010C8  502A               	movf	tc_tecla@i^0,w,c
  3177  0010CA  0F07               	addlw	7
  3178  0010CC  6E29               	movwf	tc_tecla@ret^0,c
  3179                           
  3180                           ;teclado.c: 69:               break;
  3181  0010CE  EF9D  F008         	goto	l1223
  3182  0010D2                     l255:
  3183                           
  3184                           ;teclado.c: 72:       if(!PORTDbits.RD0){
  3185  0010D2  B083               	btfsc	131,0,c	;volatile
  3186  0010D4  EF6E  F008         	goto	u241
  3187  0010D8  EF70  F008         	goto	u240
  3188  0010DC                     u241:
  3189  0010DC  EF8B  F008         	goto	l1217
  3190  0010E0                     u240:
  3191  0010E0                     
  3192                           ;teclado.c: 73:           _delay((unsigned long)((20)*(1000000/4000.0)));
  3193  0010E0  0E07               	movlw	7
  3194  0010E2  6E23               	movwf	??_tc_tecla^0,c
  3195  0010E4  0E7D               	movlw	125
  3196  0010E6                     u1987:
  3197  0010E6  2EE8               	decfsz	wreg,f,c
  3198  0010E8  D7FE               	bra	u1987
  3199  0010EA  2E23               	decfsz	??_tc_tecla^0,f,c
  3200  0010EC  D7FC               	bra	u1987
  3201  0010EE  F000               	nop	
  3202  0010F0                     
  3203                           ;teclado.c: 74:           if(!PORTDbits.RD0){
  3204  0010F0  B083               	btfsc	131,0,c	;volatile
  3205  0010F2  EF7D  F008         	goto	u251
  3206  0010F6  EF7F  F008         	goto	u250
  3207  0010FA                     u251:
  3208  0010FA  EF8B  F008         	goto	l1217
  3209  0010FE                     u250:
  3210  0010FE                     l262:
  3211  0010FE  A083               	btfss	131,0,c	;volatile
  3212  001100  EF84  F008         	goto	u261
  3213  001104  EF86  F008         	goto	u260
  3214  001108                     u261:
  3215  001108  EF7F  F008         	goto	l262
  3216  00110C                     u260:
  3217  00110C                     
  3218                           ;teclado.c: 76:               ret= 10+i;
  3219  00110C  502A               	movf	tc_tecla@i^0,w,c
  3220  00110E  0F0A               	addlw	10
  3221  001110  6E29               	movwf	tc_tecla@ret^0,c
  3222                           
  3223                           ;teclado.c: 77:               break;
  3224  001112  EF9D  F008         	goto	l1223
  3225  001116                     l1217:
  3226                           
  3227                           ;teclado.c: 80:       PORTB &=linha[i];
  3228  001116  0E01               	movlw	low _linha
  3229  001118  242A               	addwf	tc_tecla@i^0,w,c
  3230  00111A  6EF6               	movwf	tblptrl,c
  3231  00111C  6AF7               	clrf	tblptrh,c
  3232  00111E  0E06               	movlw	high _linha
  3233  001120  22F7               	addwfc	tblptrh,f,c
  3234  001122                     	if	0	;There are less than 3 active tblptr bytes
  3235  001122                     	endif
  3236  001122  0008               	tblrd		*
  3237  001124  50F5               	movf	tablat,w,c
  3238  001126  1681               	andwf	129,f,c	;volatile
  3239  001128                     
  3240                           ;teclado.c: 81:     };
  3241  001128  2A2A               	incf	tc_tecla@i^0,f,c
  3242  00112A  0E02               	movlw	2
  3243  00112C  642A               	cpfsgt	tc_tecla@i^0,c
  3244  00112E  EF9B  F008         	goto	u271
  3245  001132  EF9D  F008         	goto	u270
  3246  001136                     u271:
  3247  001136  EFFA  F007         	goto	l1181
  3248  00113A                     u270:
  3249  00113A                     l1223:
  3250                           
  3251                           ;teclado.c: 82:     _delay((unsigned long)((5)*(1000000/4000.0)));
  3252  00113A  0EFA               	movlw	250
  3253  00113C                     u1997:
  3254  00113C  D000               	nop2	
  3255  00113E  2EE8               	decfsz	wreg,f,c
  3256  001140  D7FD               	bra	u1997
  3257  001142                     
  3258                           ;teclado.c: 83:     to+=5;
  3259  001142  0E05               	movlw	5
  3260  001144  2624               	addwf	tc_tecla@to^0,f,c
  3261  001146  0E00               	movlw	0
  3262  001148  2225               	addwfc	(tc_tecla@to+1)^0,f,c
  3263  00114A                     l1227:
  3264                           
  3265                           ;teclado.c: 43:   while(((to < timeout)||(!timeout))&&(!ret))
  3266  00114A  5027               	movf	tc_tecla@timeout^0,w,c
  3267  00114C  5C24               	subwf	tc_tecla@to^0,w,c
  3268  00114E  5028               	movf	(tc_tecla@timeout+1)^0,w,c
  3269  001150  5825               	subwfb	(tc_tecla@to+1)^0,w,c
  3270  001152  A0D8               	btfss	status,0,c
  3271  001154  EFAE  F008         	goto	u281
  3272  001158  EFB0  F008         	goto	u280
  3273  00115C                     u281:
  3274  00115C  EFB9  F008         	goto	l1231
  3275  001160                     u280:
  3276  001160  5027               	movf	tc_tecla@timeout^0,w,c
  3277  001162  1028               	iorwf	(tc_tecla@timeout+1)^0,w,c
  3278  001164  A4D8               	btfss	status,2,c
  3279  001166  EFB7  F008         	goto	u291
  3280  00116A  EFB9  F008         	goto	u290
  3281  00116E                     u291:
  3282  00116E  EFC1  F008         	goto	l1233
  3283  001172                     u290:
  3284  001172                     l1231:
  3285  001172  5029               	movf	tc_tecla@ret^0,w,c
  3286  001174  B4D8               	btfsc	status,2,c
  3287  001176  EFBF  F008         	goto	u301
  3288  00117A  EFC1  F008         	goto	u300
  3289  00117E                     u301:
  3290  00117E  EFF8  F007         	goto	l1175
  3291  001182                     u300:
  3292  001182                     l1233:
  3293                           
  3294                           ;teclado.c: 86:   if(!ret)ret=255;
  3295  001182  5029               	movf	tc_tecla@ret^0,w,c
  3296  001184  A4D8               	btfss	status,2,c
  3297  001186  EFC7  F008         	goto	u311
  3298  00118A  EFC9  F008         	goto	u310
  3299  00118E                     u311:
  3300  00118E  EFCA  F008         	goto	l1237
  3301  001192                     u310:
  3302  001192  6829               	setf	tc_tecla@ret^0,c
  3303  001194                     l1237:
  3304                           
  3305                           ;teclado.c: 87:   if(ret == 11)ret=0;
  3306  001194  0E0B               	movlw	11
  3307  001196  1829               	xorwf	tc_tecla@ret^0,w,c
  3308  001198  A4D8               	btfss	status,2,c
  3309  00119A  EFD1  F008         	goto	u321
  3310  00119E  EFD3  F008         	goto	u320
  3311  0011A2                     u321:
  3312  0011A2  EFD5  F008         	goto	l1241
  3313  0011A6                     u320:
  3314  0011A6  0E00               	movlw	0
  3315  0011A8  6E29               	movwf	tc_tecla@ret^0,c
  3316  0011AA                     l1241:
  3317                           
  3318                           ;teclado.c: 88:   PORTB=tmp;
  3319  0011AA  C026  FF81         	movff	tc_tecla@tmp,3969	;volatile
  3320                           
  3321                           ;teclado.c: 89:   return ret;
  3322  0011AE  5029               	movf	tc_tecla@ret^0,w,c
  3323  0011B0  0012               	return		;funcret
  3324  0011B2                     __end_of_tc_tecla:
  3325                           	callstack 0
  3326                           
  3327 ;; *************** function _lcd_str *****************
  3328 ;; Defined at:
  3329 ;;		line 76 in file "lcd.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;  str             2    3[COMRAM] PTR const unsigned char 
  3332 ;;		 -> STR_30(18), STR_29(2), STR_28(6), STR_27(13), 
  3333 ;;		 -> STR_26(2), STR_25(8), STR_24(13), STR_23(1), 
  3334 ;;		 -> STR_22(18), STR_21(1), STR_20(16), STR_19(2), 
  3335 ;;		 -> STR_18(16), STR_17(9), STR_16(9), STR_15(8), 
  3336 ;;		 -> STR_14(8), STR_13(9), STR_12(2), STR_11(7), 
  3337 ;;		 -> STR_10(17), STR_9(9), STR_8(9), STR_7(8), 
  3338 ;;		 -> STR_6(8), STR_5(9), STR_4(2), STR_3(7), 
  3339 ;;		 -> STR_2(1), STR_1(17), time(10), 
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;  i               1    7[COMRAM] unsigned char 
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  1    wreg      void 
  3344 ;; Registers used:
  3345 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3351 ;;      Params:         2       0       0       0       0       0       0
  3352 ;;      Locals:         1       0       0       0       0       0       0
  3353 ;;      Temps:          2       0       0       0       0       0       0
  3354 ;;      Totals:         5       0       0       0       0       0       0
  3355 ;;Total ram usage:        5 bytes
  3356 ;; Hardware stack levels used:    1
  3357 ;; Hardware stack levels required when called:    2
  3358 ;; This function calls:
  3359 ;;		_lcd_dat
  3360 ;; This function is called by:
  3361 ;;		_main
  3362 ;;		_escolha
  3363 ;;		_trocarSenha
  3364 ;; This function uses a non-reentrant model
  3365 ;;
  3366                           
  3367                           	psect	text10
  3368  001542                     __ptext10:
  3369                           	callstack 0
  3370  001542                     _lcd_str:
  3371                           	callstack 27
  3372  001542                     
  3373                           ;lcd.c: 76: void lcd_str(const char* str);lcd.c: 77: {;lcd.c: 78:  unsigned char i=0;
  3374  001542  0E00               	movlw	0
  3375  001544  6E2A               	movwf	lcd_str@i^0,c
  3376                           
  3377                           ;lcd.c: 80:  while(str[i] != 0 )
  3378  001546  EFBE  F00A         	goto	l1885
  3379  00154A                     l1881:
  3380                           
  3381                           ;lcd.c: 81:  {;lcd.c: 82:    lcd_dat(str[i]);
  3382  00154A  502A               	movf	lcd_str@i^0,w,c
  3383  00154C  2426               	addwf	lcd_str@str^0,w,c
  3384  00154E  6E28               	movwf	??_lcd_str^0,c
  3385  001550  0E00               	movlw	0
  3386  001552  2027               	addwfc	(lcd_str@str+1)^0,w,c
  3387  001554  6E29               	movwf	(??_lcd_str+1)^0,c
  3388  001556  C028  FFF6         	movff	??_lcd_str,tblptrl
  3389  00155A  C029  FFF7         	movff	??_lcd_str+1,tblptrh
  3390  00155E  6AF8               	clrf	tblptru,c
  3391  001560  0E05               	movlw	(high __ramtop+-1)
  3392  001562  64F7               	cpfsgt	tblptrh,c
  3393  001564  D003               	bra	u1087
  3394  001566  0008               	tblrd		*
  3395  001568  50F5               	movf	tablat,w,c
  3396  00156A  D005               	bra	u1080
  3397  00156C                     u1087:
  3398  00156C  CFF6 FFE9          	movff	tblptrl,fsr0l
  3399  001570  CFF7 FFEA          	movff	tblptrh,fsr0h
  3400  001574  50EF               	movf	indf0,w,c
  3401  001576                     u1080:
  3402  001576  EC70  F00B         	call	_lcd_dat
  3403  00157A                     
  3404                           ;lcd.c: 83:    i++;
  3405  00157A  2A2A               	incf	lcd_str@i^0,f,c
  3406  00157C                     l1885:
  3407                           
  3408                           ;lcd.c: 80:  while(str[i] != 0 )
  3409  00157C  502A               	movf	lcd_str@i^0,w,c
  3410  00157E  2426               	addwf	lcd_str@str^0,w,c
  3411  001580  6E28               	movwf	??_lcd_str^0,c
  3412  001582  0E00               	movlw	0
  3413  001584  2027               	addwfc	(lcd_str@str+1)^0,w,c
  3414  001586  6E29               	movwf	(??_lcd_str+1)^0,c
  3415  001588  C028  FFF6         	movff	??_lcd_str,tblptrl
  3416  00158C  C029  FFF7         	movff	??_lcd_str+1,tblptrh
  3417  001590  6AF8               	clrf	tblptru,c
  3418  001592  0E05               	movlw	(high __ramtop+-1)
  3419  001594  64F7               	cpfsgt	tblptrh,c
  3420  001596  D003               	bra	u1097
  3421  001598  0008               	tblrd		*
  3422  00159A  50F5               	movf	tablat,w,c
  3423  00159C  D005               	bra	u1090
  3424  00159E                     u1097:
  3425  00159E  CFF6 FFE9          	movff	tblptrl,fsr0l
  3426  0015A2  CFF7 FFEA          	movff	tblptrh,fsr0h
  3427  0015A6  50EF               	movf	indf0,w,c
  3428  0015A8                     u1090:
  3429  0015A8  0900               	iorlw	0
  3430  0015AA  A4D8               	btfss	status,2,c
  3431  0015AC  EFDA  F00A         	goto	u1101
  3432  0015B0  EFDC  F00A         	goto	u1100
  3433  0015B4                     u1101:
  3434  0015B4  EFA5  F00A         	goto	l1881
  3435  0015B8                     u1100:
  3436  0015B8  0012               	return		;funcret
  3437  0015BA                     __end_of_lcd_str:
  3438                           	callstack 0
  3439                           
  3440 ;; *************** function _lcd_dat *****************
  3441 ;; Defined at:
  3442 ;;		line 46 in file "lcd.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  val             1    wreg     unsigned char 
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;  val             1    2[COMRAM] unsigned char 
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      void 
  3449 ;; Registers used:
  3450 ;;		wreg, status,2, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3456 ;;      Params:         0       0       0       0       0       0       0
  3457 ;;      Locals:         1       0       0       0       0       0       0
  3458 ;;      Temps:          1       0       0       0       0       0       0
  3459 ;;      Totals:         2       0       0       0       0       0       0
  3460 ;;Total ram usage:        2 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; Hardware stack levels required when called:    1
  3463 ;; This function calls:
  3464 ;;		_lcd_wr
  3465 ;; This function is called by:
  3466 ;;		_lcd_str
  3467 ;;		_escolha
  3468 ;;		_trocarSenha
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           	psect	text11
  3473  0016E0                     __ptext11:
  3474                           	callstack 0
  3475  0016E0                     _lcd_dat:
  3476                           	callstack 27
  3477                           
  3478                           ;incstack = 0
  3479                           ;lcd_dat@val stored from wreg
  3480  0016E0  6E25               	movwf	lcd_dat@val^0,c
  3481  0016E2                     
  3482                           ;lcd.c: 46: void lcd_dat(unsigned char val);lcd.c: 47: {;lcd.c: 48:  PORTEbits.RE1=1;
  3483  0016E2  8284               	bsf	132,1,c	;volatile
  3484  0016E4                     
  3485                           ;lcd.c: 49:         lcd_wr(val);
  3486  0016E4  5025               	movf	lcd_dat@val^0,w,c
  3487  0016E6  ECD1  F00B         	call	_lcd_wr
  3488  0016EA                     
  3489                           ;lcd.c: 50:         PORTEbits.RE2=1;
  3490  0016EA  8484               	bsf	132,2,c	;volatile
  3491  0016EC                     
  3492                           ;lcd.c: 51:         _delay((unsigned long)((3)*(8000000/4000.0)));
  3493  0016EC  0E08               	movlw	8
  3494  0016EE  6E24               	movwf	??_lcd_dat^0,c
  3495  0016F0  0ECA               	movlw	202
  3496  0016F2                     u2007:
  3497  0016F2  2EE8               	decfsz	wreg,f,c
  3498  0016F4  D7FE               	bra	u2007
  3499  0016F6  2E24               	decfsz	??_lcd_dat^0,f,c
  3500  0016F8  D7FC               	bra	u2007
  3501  0016FA                     
  3502                           ;lcd.c: 52:         PORTEbits.RE1=0;
  3503  0016FA  9284               	bcf	132,1,c	;volatile
  3504  0016FC                     
  3505                           ;lcd.c: 53:         _delay((unsigned long)((3)*(8000000/4000.0)));
  3506  0016FC  0E08               	movlw	8
  3507  0016FE  6E24               	movwf	??_lcd_dat^0,c
  3508  001700  0ECA               	movlw	202
  3509  001702                     u2017:
  3510  001702  2EE8               	decfsz	wreg,f,c
  3511  001704  D7FE               	bra	u2017
  3512  001706  2E24               	decfsz	??_lcd_dat^0,f,c
  3513  001708  D7FC               	bra	u2017
  3514  00170A                     
  3515                           ;lcd.c: 54:  PORTEbits.RE1=1;
  3516  00170A  8284               	bsf	132,1,c	;volatile
  3517  00170C  0012               	return		;funcret
  3518  00170E                     __end_of_lcd_dat:
  3519                           	callstack 0
  3520                           
  3521 ;; *************** function _lcd_cmd *****************
  3522 ;; Defined at:
  3523 ;;		line 35 in file "lcd.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;  val             1    wreg     unsigned char 
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;  val             1    2[COMRAM] unsigned char 
  3528 ;; Return value:  Size  Location     Type
  3529 ;;                  1    wreg      void 
  3530 ;; Registers used:
  3531 ;;		wreg, status,2, cstack
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3537 ;;      Params:         0       0       0       0       0       0       0
  3538 ;;      Locals:         1       0       0       0       0       0       0
  3539 ;;      Temps:          1       0       0       0       0       0       0
  3540 ;;      Totals:         2       0       0       0       0       0       0
  3541 ;;Total ram usage:        2 bytes
  3542 ;; Hardware stack levels used:    1
  3543 ;; Hardware stack levels required when called:    1
  3544 ;; This function calls:
  3545 ;;		_lcd_wr
  3546 ;; This function is called by:
  3547 ;;		_lcd_init
  3548 ;;		_main
  3549 ;;		_escolha
  3550 ;;		_trocarSenha
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           	psect	text12
  3555  00170E                     __ptext12:
  3556                           	callstack 0
  3557  00170E                     _lcd_cmd:
  3558                           	callstack 28
  3559                           
  3560                           ;incstack = 0
  3561                           ;lcd_cmd@val stored from wreg
  3562  00170E  6E25               	movwf	lcd_cmd@val^0,c
  3563  001710                     
  3564                           ;lcd.c: 35: void lcd_cmd(unsigned char val);lcd.c: 36: {;lcd.c: 37:  PORTEbits.RE1=1;
  3565  001710  8284               	bsf	132,1,c	;volatile
  3566  001712                     
  3567                           ;lcd.c: 38:         lcd_wr(val);
  3568  001712  5025               	movf	lcd_cmd@val^0,w,c
  3569  001714  ECD1  F00B         	call	_lcd_wr
  3570  001718                     
  3571                           ;lcd.c: 39:         PORTEbits.RE2=0;
  3572  001718  9484               	bcf	132,2,c	;volatile
  3573  00171A                     
  3574                           ;lcd.c: 40:         _delay((unsigned long)((3)*(8000000/4000.0)));
  3575  00171A  0E08               	movlw	8
  3576  00171C  6E24               	movwf	??_lcd_cmd^0,c
  3577  00171E  0ECA               	movlw	202
  3578  001720                     u2027:
  3579  001720  2EE8               	decfsz	wreg,f,c
  3580  001722  D7FE               	bra	u2027
  3581  001724  2E24               	decfsz	??_lcd_cmd^0,f,c
  3582  001726  D7FC               	bra	u2027
  3583  001728                     
  3584                           ;lcd.c: 41:         PORTEbits.RE1=0;
  3585  001728  9284               	bcf	132,1,c	;volatile
  3586  00172A                     
  3587                           ;lcd.c: 42:         _delay((unsigned long)((3)*(8000000/4000.0)));
  3588  00172A  0E08               	movlw	8
  3589  00172C  6E24               	movwf	??_lcd_cmd^0,c
  3590  00172E  0ECA               	movlw	202
  3591  001730                     u2037:
  3592  001730  2EE8               	decfsz	wreg,f,c
  3593  001732  D7FE               	bra	u2037
  3594  001734  2E24               	decfsz	??_lcd_cmd^0,f,c
  3595  001736  D7FC               	bra	u2037
  3596  001738                     
  3597                           ;lcd.c: 43:  PORTEbits.RE1=1;
  3598  001738  8284               	bsf	132,1,c	;volatile
  3599  00173A  0012               	return		;funcret
  3600  00173C                     __end_of_lcd_cmd:
  3601                           	callstack 0
  3602                           
  3603 ;; *************** function _lcd_wr *****************
  3604 ;; Defined at:
  3605 ;;		line 30 in file "lcd.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;  val             1    wreg     unsigned char 
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;  val             1    0[COMRAM] unsigned char 
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  1    wreg      void 
  3612 ;; Registers used:
  3613 ;;		wreg
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3619 ;;      Params:         0       0       0       0       0       0       0
  3620 ;;      Locals:         1       0       0       0       0       0       0
  3621 ;;      Temps:          0       0       0       0       0       0       0
  3622 ;;      Totals:         1       0       0       0       0       0       0
  3623 ;;Total ram usage:        1 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; This function calls:
  3626 ;;		Nothing
  3627 ;; This function is called by:
  3628 ;;		_lcd_cmd
  3629 ;;		_lcd_dat
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633                           	psect	text13
  3634  0017A2                     __ptext13:
  3635                           	callstack 0
  3636  0017A2                     _lcd_wr:
  3637                           	callstack 27
  3638                           
  3639                           ;incstack = 0
  3640                           ;lcd_wr@val stored from wreg
  3641  0017A2  6E23               	movwf	lcd_wr@val^0,c
  3642  0017A4                     
  3643                           ;lcd.c: 30: void lcd_wr(unsigned char val);lcd.c: 31: {;lcd.c: 32:   PORTD=val;
  3644  0017A4  C023  FF83         	movff	lcd_wr@val,3971	;volatile
  3645  0017A8  0012               	return		;funcret
  3646  0017AA                     __end_of_lcd_wr:
  3647                           	callstack 0
  3648                           
  3649 ;; *************** function _e2pext_r *****************
  3650 ;; Defined at:
  3651 ;;		line 94 in file "./i2c.h"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;  addr            2    5[COMRAM] unsigned int 
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;  ah              1    9[COMRAM] unsigned char 
  3656 ;;  al              1    8[COMRAM] unsigned char 
  3657 ;;  ret             1    7[COMRAM] unsigned char 
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  1    wreg      unsigned char 
  3660 ;; Registers used:
  3661 ;;		wreg, status,2, status,0, cstack
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3667 ;;      Params:         2       0       0       0       0       0       0
  3668 ;;      Locals:         3       0       0       0       0       0       0
  3669 ;;      Temps:          0       0       0       0       0       0       0
  3670 ;;      Totals:         5       0       0       0       0       0       0
  3671 ;;Total ram usage:        5 bytes
  3672 ;; Hardware stack levels used:    1
  3673 ;; Hardware stack levels required when called:    2
  3674 ;; This function calls:
  3675 ;;		_i2c_rb
  3676 ;;		_i2c_start
  3677 ;;		_i2c_stop
  3678 ;;		_i2c_wb
  3679 ;; This function is called by:
  3680 ;;		_e2pext_w
  3681 ;;		_escolha
  3682 ;;		_trocarSenha
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text14
  3687  0015BA                     __ptext14:
  3688                           	callstack 0
  3689  0015BA                     _e2pext_r:
  3690                           	callstack 26
  3691  0015BA                     
  3692                           ;./i2c.h: 94: unsigned char e2pext_r(unsigned int addr);./i2c.h: 95: {;./i2c.h: 96:   un
      +                          signed char ret;;./i2c.h: 97:   unsigned char ah;;./i2c.h: 98:   unsigned char al;;./i2c
      +                          .h: 100:   ah=(addr&0x0100)>>8;
  3693  0015BA  5029               	movf	(e2pext_r@addr+1)^0,w,c
  3694  0015BC  0B01               	andlw	1
  3695  0015BE  6E2C               	movwf	e2pext_r@ah^0,c
  3696  0015C0                     
  3697                           ;./i2c.h: 101:   al=addr&0x00FF;
  3698  0015C0  C028  F02B         	movff	e2pext_r@addr,e2pext_r@al
  3699  0015C4                     
  3700                           ;./i2c.h: 103:   i2c_start();
  3701  0015C4  ECBA  F00B         	call	_i2c_start	;wreg free
  3702  0015C8                     
  3703                           ;./i2c.h: 104:   if(ah)
  3704  0015C8  502C               	movf	e2pext_r@ah^0,w,c
  3705  0015CA  B4D8               	btfsc	status,2,c
  3706  0015CC  EFEA  F00A         	goto	u1061
  3707  0015D0  EFEC  F00A         	goto	u1060
  3708  0015D4                     u1061:
  3709  0015D4  EFF1  F00A         	goto	l1863
  3710  0015D8                     u1060:
  3711  0015D8                     
  3712                           ;./i2c.h: 105:   {;./i2c.h: 106:     i2c_wb(0xA2);
  3713  0015D8  0EA2               	movlw	162
  3714  0015DA  EC42  F00B         	call	_i2c_wb
  3715                           
  3716                           ;./i2c.h: 107:   }
  3717  0015DE  EFF4  F00A         	goto	l90
  3718  0015E2                     l1863:
  3719                           
  3720                           ;./i2c.h: 109:   {;./i2c.h: 110:     i2c_wb(0xA0);
  3721  0015E2  0EA0               	movlw	160
  3722  0015E4  EC42  F00B         	call	_i2c_wb
  3723  0015E8                     l90:
  3724                           
  3725                           ;./i2c.h: 112:   i2c_wb(al);
  3726  0015E8  502B               	movf	e2pext_r@al^0,w,c
  3727  0015EA  EC42  F00B         	call	_i2c_wb
  3728  0015EE                     
  3729                           ;./i2c.h: 114:   i2c_start();
  3730  0015EE  ECBA  F00B         	call	_i2c_start	;wreg free
  3731  0015F2                     
  3732                           ;./i2c.h: 115:   if(ah)
  3733  0015F2  502C               	movf	e2pext_r@ah^0,w,c
  3734  0015F4  B4D8               	btfsc	status,2,c
  3735  0015F6  EFFF  F00A         	goto	u1071
  3736  0015FA  EF01  F00B         	goto	u1070
  3737  0015FE                     u1071:
  3738  0015FE  EF06  F00B         	goto	l1871
  3739  001602                     u1070:
  3740  001602                     
  3741                           ;./i2c.h: 116:   {;./i2c.h: 117:     i2c_wb(0xA3);
  3742  001602  0EA3               	movlw	163
  3743  001604  EC42  F00B         	call	_i2c_wb
  3744                           
  3745                           ;./i2c.h: 118:   }
  3746  001608  EF09  F00B         	goto	l92
  3747  00160C                     l1871:
  3748                           
  3749                           ;./i2c.h: 120:   {;./i2c.h: 121:     i2c_wb(0xA1);
  3750  00160C  0EA1               	movlw	161
  3751  00160E  EC42  F00B         	call	_i2c_wb
  3752  001612                     l92:
  3753                           
  3754                           ;./i2c.h: 123:   ret=i2c_rb(1);
  3755  001612  0E01               	movlw	1
  3756  001614  EC60  F00A         	call	_i2c_rb
  3757  001618  6E2A               	movwf	e2pext_r@ret^0,c
  3758  00161A                     
  3759                           ;./i2c.h: 124:   i2c_stop();
  3760  00161A  ECB2  F00B         	call	_i2c_stop	;wreg free
  3761  00161E                     
  3762                           ;./i2c.h: 126:   return ret;
  3763  00161E  502A               	movf	e2pext_r@ret^0,w,c
  3764  001620  0012               	return		;funcret
  3765  001622                     __end_of_e2pext_r:
  3766                           	callstack 0
  3767                           
  3768 ;; *************** function _i2c_wb *****************
  3769 ;; Defined at:
  3770 ;;		line 45 in file "./i2c.h"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;  val             1    wreg     unsigned char 
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;  val             1    2[COMRAM] unsigned char 
  3775 ;;  i               1    3[COMRAM] unsigned char 
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  1    wreg      void 
  3778 ;; Registers used:
  3779 ;;		wreg, status,2, status,0, cstack
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3785 ;;      Params:         0       0       0       0       0       0       0
  3786 ;;      Locals:         2       0       0       0       0       0       0
  3787 ;;      Temps:          2       0       0       0       0       0       0
  3788 ;;      Totals:         4       0       0       0       0       0       0
  3789 ;;Total ram usage:        4 bytes
  3790 ;; Hardware stack levels used:    1
  3791 ;; Hardware stack levels required when called:    1
  3792 ;; This function calls:
  3793 ;;		_delay
  3794 ;; This function is called by:
  3795 ;;		_e2pext_r
  3796 ;;		_e2pext_w
  3797 ;;		_rtc_r
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           	psect	text15
  3802  001684                     __ptext15:
  3803                           	callstack 0
  3804  001684                     _i2c_wb:
  3805                           	callstack 27
  3806                           
  3807                           ;incstack = 0
  3808                           ;i2c_wb@val stored from wreg
  3809  001684  6E25               	movwf	i2c_wb@val^0,c
  3810  001686                     
  3811                           ;./i2c.h: 45: void i2c_wb(unsigned char val);./i2c.h: 46: {;./i2c.h: 47:   unsigned char
      +                           i;;./i2c.h: 48:   PORTCbits.RC3=0;
  3812  001686  9682               	bcf	130,3,c	;volatile
  3813  001688                     
  3814                           ;./i2c.h: 49:   for(i=0;i<8;i++)
  3815  001688  0E00               	movlw	0
  3816  00168A  6E26               	movwf	i2c_wb@i^0,c
  3817  00168C                     l1023:
  3818                           
  3819                           ;./i2c.h: 50:   {;./i2c.h: 51:     PORTCbits.RC4=((val>>(7-i))& 0x01);
  3820  00168C  5026               	movf	i2c_wb@i^0,w,c
  3821  00168E  0807               	sublw	7
  3822  001690  6E23               	movwf	??_i2c_wb^0,c
  3823  001692  C025  F024         	movff	i2c_wb@val,??_i2c_wb+1
  3824  001696  2A23               	incf	??_i2c_wb^0,f,c
  3825  001698  EF50  F00B         	goto	u14
  3826  00169C                     u15:
  3827  00169C  90D8               	bcf	status,0,c
  3828  00169E  3224               	rrcf	(??_i2c_wb+1)^0,f,c
  3829  0016A0                     u14:
  3830  0016A0  2E23               	decfsz	??_i2c_wb^0,f,c
  3831  0016A2  EF4E  F00B         	goto	u15
  3832  0016A6  0E01               	movlw	1
  3833  0016A8  1624               	andwf	(??_i2c_wb+1)^0,f,c
  3834  0016AA  3A24               	swapf	(??_i2c_wb+1)^0,f,c
  3835  0016AC  5082               	movf	130,w,c	;volatile
  3836  0016AE  1824               	xorwf	(??_i2c_wb+1)^0,w,c
  3837  0016B0  0BEF               	andlw	-17
  3838  0016B2  1824               	xorwf	(??_i2c_wb+1)^0,w,c
  3839  0016B4  6E82               	movwf	130,c	;volatile
  3840  0016B6                     
  3841                           ;./i2c.h: 52:     PORTCbits.RC3=1;
  3842  0016B6  8682               	bsf	130,3,c	;volatile
  3843  0016B8                     
  3844                           ;./i2c.h: 53:     delay();
  3845  0016B8  ECA9  F00B         	call	_delay	;wreg free
  3846  0016BC                     
  3847                           ;./i2c.h: 54:     PORTCbits.RC3=0;
  3848  0016BC  9682               	bcf	130,3,c	;volatile
  3849  0016BE                     
  3850                           ;./i2c.h: 55:   }
  3851  0016BE  2A26               	incf	i2c_wb@i^0,f,c
  3852  0016C0  0E07               	movlw	7
  3853  0016C2  6426               	cpfsgt	i2c_wb@i^0,c
  3854  0016C4  EF66  F00B         	goto	u21
  3855  0016C8  EF68  F00B         	goto	u20
  3856  0016CC                     u21:
  3857  0016CC  EF46  F00B         	goto	l1023
  3858  0016D0                     u20:
  3859  0016D0                     
  3860                           ;./i2c.h: 56:   PORTCbits.RC4=1;
  3861  0016D0  8882               	bsf	130,4,c	;volatile
  3862  0016D2                     
  3863                           ;./i2c.h: 57:   delay();
  3864  0016D2  ECA9  F00B         	call	_delay	;wreg free
  3865  0016D6                     
  3866                           ;./i2c.h: 58:   PORTCbits.RC3=1;
  3867  0016D6  8682               	bsf	130,3,c	;volatile
  3868                           
  3869                           ;./i2c.h: 59:   delay();
  3870  0016D8  ECA9  F00B         	call	_delay	;wreg free
  3871  0016DC                     
  3872                           ;./i2c.h: 60:   PORTCbits.RC3=0;
  3873  0016DC  9682               	bcf	130,3,c	;volatile
  3874  0016DE  0012               	return		;funcret
  3875  0016E0                     __end_of_i2c_wb:
  3876                           	callstack 0
  3877                           
  3878 ;; *************** function _i2c_stop *****************
  3879 ;; Defined at:
  3880 ;;		line 36 in file "./i2c.h"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;		None
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;		None
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  1    wreg      void 
  3887 ;; Registers used:
  3888 ;;		cstack
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3894 ;;      Params:         0       0       0       0       0       0       0
  3895 ;;      Locals:         0       0       0       0       0       0       0
  3896 ;;      Temps:          0       0       0       0       0       0       0
  3897 ;;      Totals:         0       0       0       0       0       0       0
  3898 ;;Total ram usage:        0 bytes
  3899 ;; Hardware stack levels used:    1
  3900 ;; Hardware stack levels required when called:    1
  3901 ;; This function calls:
  3902 ;;		_delay
  3903 ;; This function is called by:
  3904 ;;		_e2pext_r
  3905 ;;		_e2pext_w
  3906 ;;		_rtc_r
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           	psect	text16
  3911  001764                     __ptext16:
  3912                           	callstack 0
  3913  001764                     _i2c_stop:
  3914                           	callstack 27
  3915  001764                     
  3916                           ;./i2c.h: 38:   PORTCbits.RC3=1;
  3917  001764  8682               	bsf	130,3,c	;volatile
  3918                           
  3919                           ;./i2c.h: 39:   PORTCbits.RC4=0;
  3920  001766  9882               	bcf	130,4,c	;volatile
  3921  001768                     
  3922                           ;./i2c.h: 40:   delay();
  3923  001768  ECA9  F00B         	call	_delay	;wreg free
  3924  00176C                     
  3925                           ;./i2c.h: 41:   PORTCbits.RC4=1;
  3926  00176C  8882               	bsf	130,4,c	;volatile
  3927                           
  3928                           ;./i2c.h: 42:   delay();
  3929  00176E  ECA9  F00B         	call	_delay	;wreg free
  3930  001772  0012               	return		;funcret
  3931  001774                     __end_of_i2c_stop:
  3932                           	callstack 0
  3933                           
  3934 ;; *************** function _i2c_start *****************
  3935 ;; Defined at:
  3936 ;;		line 27 in file "./i2c.h"
  3937 ;; Parameters:    Size  Location     Type
  3938 ;;		None
  3939 ;; Auto vars:     Size  Location     Type
  3940 ;;		None
  3941 ;; Return value:  Size  Location     Type
  3942 ;;                  1    wreg      void 
  3943 ;; Registers used:
  3944 ;;		cstack
  3945 ;; Tracked objects:
  3946 ;;		On entry : 0/0
  3947 ;;		On exit  : 0/0
  3948 ;;		Unchanged: 0/0
  3949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3950 ;;      Params:         0       0       0       0       0       0       0
  3951 ;;      Locals:         0       0       0       0       0       0       0
  3952 ;;      Temps:          0       0       0       0       0       0       0
  3953 ;;      Totals:         0       0       0       0       0       0       0
  3954 ;;Total ram usage:        0 bytes
  3955 ;; Hardware stack levels used:    1
  3956 ;; Hardware stack levels required when called:    1
  3957 ;; This function calls:
  3958 ;;		_delay
  3959 ;; This function is called by:
  3960 ;;		_e2pext_r
  3961 ;;		_e2pext_w
  3962 ;;		_rtc_r
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           	psect	text17
  3967  001774                     __ptext17:
  3968                           	callstack 0
  3969  001774                     _i2c_start:
  3970                           	callstack 27
  3971  001774                     
  3972                           ;./i2c.h: 29:   PORTCbits.RC3=1;
  3973  001774  8682               	bsf	130,3,c	;volatile
  3974                           
  3975                           ;./i2c.h: 30:   PORTCbits.RC4=1;
  3976  001776  8882               	bsf	130,4,c	;volatile
  3977  001778                     
  3978                           ;./i2c.h: 31:   delay();
  3979  001778  ECA9  F00B         	call	_delay	;wreg free
  3980  00177C                     
  3981                           ;./i2c.h: 32:   PORTCbits.RC4=0;
  3982  00177C  9882               	bcf	130,4,c	;volatile
  3983                           
  3984                           ;./i2c.h: 33:   delay();
  3985  00177E  ECA9  F00B         	call	_delay	;wreg free
  3986  001782  0012               	return		;funcret
  3987  001784                     __end_of_i2c_start:
  3988                           	callstack 0
  3989                           
  3990 ;; *************** function _i2c_rb *****************
  3991 ;; Defined at:
  3992 ;;		line 63 in file "./i2c.h"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;  ack             1    wreg     unsigned char 
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;  ack             1    2[COMRAM] unsigned char 
  3997 ;;  i               1    4[COMRAM] unsigned char 
  3998 ;;  ret             1    3[COMRAM] unsigned char 
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  1    wreg      unsigned char 
  4001 ;; Registers used:
  4002 ;;		wreg, status,2, status,0, cstack
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4008 ;;      Params:         0       0       0       0       0       0       0
  4009 ;;      Locals:         3       0       0       0       0       0       0
  4010 ;;      Temps:          2       0       0       0       0       0       0
  4011 ;;      Totals:         5       0       0       0       0       0       0
  4012 ;;Total ram usage:        5 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; Hardware stack levels required when called:    1
  4015 ;; This function calls:
  4016 ;;		_delay
  4017 ;; This function is called by:
  4018 ;;		_e2pext_r
  4019 ;;		_rtc_r
  4020 ;; This function uses a non-reentrant model
  4021 ;;
  4022                           
  4023                           	psect	text18
  4024  0014C0                     __ptext18:
  4025                           	callstack 0
  4026  0014C0                     _i2c_rb:
  4027                           	callstack 26
  4028                           
  4029                           ;incstack = 0
  4030                           ;i2c_rb@ack stored from wreg
  4031  0014C0  6E25               	movwf	i2c_rb@ack^0,c
  4032  0014C2                     
  4033                           ;./i2c.h: 63: unsigned char i2c_rb(unsigned char ack);./i2c.h: 64: {;./i2c.h: 65:   char
      +                           i;;./i2c.h: 66:   unsigned char ret=0;
  4034  0014C2  0E00               	movlw	0
  4035  0014C4  6E26               	movwf	i2c_rb@ret^0,c
  4036  0014C6                     
  4037                           ;./i2c.h: 68:   PORTCbits.RC3=0;
  4038  0014C6  9682               	bcf	130,3,c	;volatile
  4039  0014C8                     
  4040                           ;./i2c.h: 69:   TRISCbits.TRISC4=1;
  4041  0014C8  8894               	bsf	148,4,c	;volatile
  4042  0014CA                     
  4043                           ;./i2c.h: 70:   PORTCbits.RC4=1;
  4044  0014CA  8882               	bsf	130,4,c	;volatile
  4045                           
  4046                           ;./i2c.h: 71:   for(i=0;i<8;i++)
  4047  0014CC  0E00               	movlw	0
  4048  0014CE  6E27               	movwf	i2c_rb@i^0,c
  4049  0014D0                     l82:
  4050                           
  4051                           ;./i2c.h: 72:   {;./i2c.h: 73:     PORTCbits.RC3=1;
  4052  0014D0  8682               	bsf	130,3,c	;volatile
  4053  0014D2                     
  4054                           ;./i2c.h: 74:     delay();
  4055  0014D2  ECA9  F00B         	call	_delay	;wreg free
  4056  0014D6                     
  4057                           ;./i2c.h: 75:     ret|=(PORTCbits.RC4<<(7-i));
  4058  0014D6  5027               	movf	i2c_rb@i^0,w,c
  4059  0014D8  0807               	sublw	7
  4060  0014DA  6E23               	movwf	??_i2c_rb^0,c
  4061  0014DC  B882               	btfsc	130,4,c	;volatile
  4062  0014DE  EF73  F00A         	goto	u31
  4063  0014E2  EF77  F00A         	goto	u30
  4064  0014E6                     u31:
  4065  0014E6  6A24               	clrf	(??_i2c_rb+1)^0,c
  4066  0014E8  2A24               	incf	(??_i2c_rb+1)^0,f,c
  4067  0014EA  EF78  F00A         	goto	u38
  4068  0014EE                     u30:
  4069  0014EE  6A24               	clrf	(??_i2c_rb+1)^0,c
  4070  0014F0                     u38:
  4071  0014F0  2A23               	incf	??_i2c_rb^0,f,c
  4072  0014F2  EF7D  F00A         	goto	u44
  4073  0014F6                     u45:
  4074  0014F6  90D8               	bcf	status,0,c
  4075  0014F8  3624               	rlcf	(??_i2c_rb+1)^0,f,c
  4076  0014FA                     u44:
  4077  0014FA  2E23               	decfsz	??_i2c_rb^0,f,c
  4078  0014FC  EF7B  F00A         	goto	u45
  4079  001500  5024               	movf	(??_i2c_rb+1)^0,w,c
  4080  001502  1226               	iorwf	i2c_rb@ret^0,f,c
  4081  001504                     
  4082                           ;./i2c.h: 76:     PORTCbits.RC3=0;
  4083  001504  9682               	bcf	130,3,c	;volatile
  4084  001506                     
  4085                           ;./i2c.h: 77:   }
  4086  001506  2A27               	incf	i2c_rb@i^0,f,c
  4087  001508  0E07               	movlw	7
  4088  00150A  6427               	cpfsgt	i2c_rb@i^0,c
  4089  00150C  EF8A  F00A         	goto	u51
  4090  001510  EF8C  F00A         	goto	u50
  4091  001514                     u51:
  4092  001514  EF68  F00A         	goto	l82
  4093  001518                     u50:
  4094  001518                     
  4095                           ;./i2c.h: 78:   TRISCbits.TRISC4=0;
  4096  001518  9894               	bcf	148,4,c	;volatile
  4097  00151A                     
  4098                           ;./i2c.h: 79:   if(ack)
  4099  00151A  5025               	movf	i2c_rb@ack^0,w,c
  4100  00151C  B4D8               	btfsc	status,2,c
  4101  00151E  EF93  F00A         	goto	u61
  4102  001522  EF95  F00A         	goto	u60
  4103  001526                     u61:
  4104  001526  EF98  F00A         	goto	l84
  4105  00152A                     u60:
  4106  00152A                     
  4107                           ;./i2c.h: 80:     PORTCbits.RC4=0;
  4108  00152A  9882               	bcf	130,4,c	;volatile
  4109  00152C  EF99  F00A         	goto	l1067
  4110  001530                     l84:
  4111                           
  4112                           ;./i2c.h: 82:  PORTCbits.RC4=1;
  4113  001530  8882               	bsf	130,4,c	;volatile
  4114  001532                     l1067:
  4115                           
  4116                           ;./i2c.h: 83:   delay();
  4117  001532  ECA9  F00B         	call	_delay	;wreg free
  4118  001536                     
  4119                           ;./i2c.h: 84:   PORTCbits.RC3=1;
  4120  001536  8682               	bsf	130,3,c	;volatile
  4121                           
  4122                           ;./i2c.h: 85:   delay();
  4123  001538  ECA9  F00B         	call	_delay	;wreg free
  4124  00153C                     
  4125                           ;./i2c.h: 86:   PORTCbits.RC3=0;
  4126  00153C  9682               	bcf	130,3,c	;volatile
  4127  00153E                     
  4128                           ;./i2c.h: 88:   return ret;
  4129  00153E  5026               	movf	i2c_rb@ret^0,w,c
  4130  001540  0012               	return		;funcret
  4131  001542                     __end_of_i2c_rb:
  4132                           	callstack 0
  4133                           
  4134 ;; *************** function _delay *****************
  4135 ;; Defined at:
  4136 ;;		line 8 in file "./i2c.h"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;		None
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;		None
  4141 ;; Return value:  Size  Location     Type
  4142 ;;                  1    wreg      void 
  4143 ;; Registers used:
  4144 ;;		None
  4145 ;; Tracked objects:
  4146 ;;		On entry : 0/0
  4147 ;;		On exit  : 0/0
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4150 ;;      Params:         0       0       0       0       0       0       0
  4151 ;;      Locals:         0       0       0       0       0       0       0
  4152 ;;      Temps:          0       0       0       0       0       0       0
  4153 ;;      Totals:         0       0       0       0       0       0       0
  4154 ;;Total ram usage:        0 bytes
  4155 ;; Hardware stack levels used:    1
  4156 ;; This function calls:
  4157 ;;		Nothing
  4158 ;; This function is called by:
  4159 ;;		_i2c_start
  4160 ;;		_i2c_stop
  4161 ;;		_i2c_wb
  4162 ;;		_i2c_rb
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           	psect	text19
  4167  001752                     __ptext19:
  4168                           	callstack 0
  4169  001752                     _delay:
  4170                           	callstack 27
  4171  001752  F000               	nop		;# 
  4172  001754  F000               	nop		;# 
  4173  001756  F000               	nop		;# 
  4174  001758  F000               	nop		;# 
  4175  00175A  F000               	nop		;# 
  4176  00175C  F000               	nop		;# 
  4177  00175E  F000               	nop		;# 
  4178  001760  F000               	nop		;# 
  4179  001762  0012               	return		;funcret
  4180  001764                     __end_of_delay:
  4181                           	callstack 0
  4182                           
  4183                           	psect	rparam
  4184  0000                     
  4185                           	psect	idloc
  4186                           
  4187                           ;Config register IDLOC0 @ 0x200000
  4188                           ;	unspecified, using default values
  4189  200000                     	org	2097152
  4190  200000  FF                 	db	255
  4191                           
  4192                           ;Config register IDLOC1 @ 0x200001
  4193                           ;	unspecified, using default values
  4194  200001                     	org	2097153
  4195  200001  FF                 	db	255
  4196                           
  4197                           ;Config register IDLOC2 @ 0x200002
  4198                           ;	unspecified, using default values
  4199  200002                     	org	2097154
  4200  200002  FF                 	db	255
  4201                           
  4202                           ;Config register IDLOC3 @ 0x200003
  4203                           ;	unspecified, using default values
  4204  200003                     	org	2097155
  4205  200003  FF                 	db	255
  4206                           
  4207                           ;Config register IDLOC4 @ 0x200004
  4208                           ;	unspecified, using default values
  4209  200004                     	org	2097156
  4210  200004  FF                 	db	255
  4211                           
  4212                           ;Config register IDLOC5 @ 0x200005
  4213                           ;	unspecified, using default values
  4214  200005                     	org	2097157
  4215  200005  FF                 	db	255
  4216                           
  4217                           ;Config register IDLOC6 @ 0x200006
  4218                           ;	unspecified, using default values
  4219  200006                     	org	2097158
  4220  200006  FF                 	db	255
  4221                           
  4222                           ;Config register IDLOC7 @ 0x200007
  4223                           ;	unspecified, using default values
  4224  200007                     	org	2097159
  4225  200007  FF                 	db	255
  4226                           
  4227                           	psect	config
  4228                           
  4229                           ; Padding undefined space
  4230  300000                     	org	3145728
  4231  300000  FF                 	db	255
  4232                           
  4233                           ;Config register CONFIG1H @ 0x300001
  4234                           ;	Oscillator Selection bits
  4235                           ;	OSC = HS, HS oscillator
  4236                           ;	Fail-Safe Clock Monitor Enable bit
  4237                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4238                           ;	Internal/External Oscillator Switchover bit
  4239                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4240  300001                     	org	3145729
  4241  300001  02                 	db	2
  4242                           
  4243                           ;Config register CONFIG2L @ 0x300002
  4244                           ;	Power-up Timer Enable bit
  4245                           ;	PWRT = OFF, PWRT disabled
  4246                           ;	Brown-out Reset Enable bits
  4247                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4248                           ;	Brown Out Reset Voltage bits
  4249                           ;	BORV = 3, Minimum setting
  4250  300002                     	org	3145730
  4251  300002  19                 	db	25
  4252                           
  4253                           ;Config register CONFIG2H @ 0x300003
  4254                           ;	Watchdog Timer Enable bit
  4255                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4256                           ;	Watchdog Timer Postscale Select bits
  4257                           ;	WDTPS = 32768, 1:32768
  4258  300003                     	org	3145731
  4259  300003  1E                 	db	30
  4260                           
  4261                           ; Padding undefined space
  4262  300004                     	org	3145732
  4263  300004  FF                 	db	255
  4264                           
  4265                           ;Config register CONFIG3H @ 0x300005
  4266                           ;	CCP2 MUX bit
  4267                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4268                           ;	PORTB A/D Enable bit
  4269                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4270                           ;	Low-Power Timer1 Oscillator Enable bit
  4271                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4272                           ;	MCLR Pin Enable bit
  4273                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4274  300005                     	org	3145733
  4275  300005  81                 	db	129
  4276                           
  4277                           ;Config register CONFIG4L @ 0x300006
  4278                           ;	Stack Full/Underflow Reset Enable bit
  4279                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  4280                           ;	Single-Supply ICSP Enable bit
  4281                           ;	LVP = OFF, Single-Supply ICSP disabled
  4282                           ;	Extended Instruction Set Enable bit
  4283                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4284                           ;	Background Debugger Enable bit
  4285                           ;	DEBUG = 0x1, unprogrammed default
  4286  300006                     	org	3145734
  4287  300006  80                 	db	128
  4288                           
  4289                           ; Padding undefined space
  4290  300007                     	org	3145735
  4291  300007  FF                 	db	255
  4292                           
  4293                           ;Config register CONFIG5L @ 0x300008
  4294                           ;	Code Protection bit
  4295                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4296                           ;	Code Protection bit
  4297                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4298                           ;	Code Protection bit
  4299                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4300                           ;	Code Protection bit
  4301                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4302  300008                     	org	3145736
  4303  300008  0F                 	db	15
  4304                           
  4305                           ;Config register CONFIG5H @ 0x300009
  4306                           ;	Boot Block Code Protection bit
  4307                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4308                           ;	Data EEPROM Code Protection bit
  4309                           ;	CPD = OFF, Data EEPROM not code-protected
  4310  300009                     	org	3145737
  4311  300009  C0                 	db	192
  4312                           
  4313                           ;Config register CONFIG6L @ 0x30000A
  4314                           ;	Write Protection bit
  4315                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4316                           ;	Write Protection bit
  4317                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4318                           ;	Write Protection bit
  4319                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4320                           ;	Write Protection bit
  4321                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4322  30000A                     	org	3145738
  4323  30000A  0F                 	db	15
  4324                           
  4325                           ;Config register CONFIG6H @ 0x30000B
  4326                           ;	Configuration Register Write Protection bit
  4327                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4328                           ;	Boot Block Write Protection bit
  4329                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4330                           ;	Data EEPROM Write Protection bit
  4331                           ;	WRTD = OFF, Data EEPROM not write-protected
  4332  30000B                     	org	3145739
  4333  30000B  E0                 	db	224
  4334                           
  4335                           ;Config register CONFIG7L @ 0x30000C
  4336                           ;	Table Read Protection bit
  4337                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4338                           ;	Table Read Protection bit
  4339                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4340                           ;	Table Read Protection bit
  4341                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4342                           ;	Table Read Protection bit
  4343                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4344  30000C                     	org	3145740
  4345  30000C  0F                 	db	15
  4346                           
  4347                           ;Config register CONFIG7H @ 0x30000D
  4348                           ;	Boot Block Table Read Protection bit
  4349                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4350  30000D                     	org	3145741
  4351  30000D  40                 	db	64
  4352                           tosu	equ	0xFFF
  4353                           tosh	equ	0xFFE
  4354                           tosl	equ	0xFFD
  4355                           stkptr	equ	0xFFC
  4356                           pclatu	equ	0xFFB
  4357                           pclath	equ	0xFFA
  4358                           pcl	equ	0xFF9
  4359                           tblptru	equ	0xFF8
  4360                           tblptrh	equ	0xFF7
  4361                           tblptrl	equ	0xFF6
  4362                           tablat	equ	0xFF5
  4363                           prodh	equ	0xFF4
  4364                           prodl	equ	0xFF3
  4365                           indf0	equ	0xFEF
  4366                           postinc0	equ	0xFEE
  4367                           postdec0	equ	0xFED
  4368                           preinc0	equ	0xFEC
  4369                           plusw0	equ	0xFEB
  4370                           fsr0h	equ	0xFEA
  4371                           fsr0l	equ	0xFE9
  4372                           wreg	equ	0xFE8
  4373                           indf1	equ	0xFE7
  4374                           postinc1	equ	0xFE6
  4375                           postdec1	equ	0xFE5
  4376                           preinc1	equ	0xFE4
  4377                           plusw1	equ	0xFE3
  4378                           fsr1h	equ	0xFE2
  4379                           fsr1l	equ	0xFE1
  4380                           bsr	equ	0xFE0
  4381                           indf2	equ	0xFDF
  4382                           postinc2	equ	0xFDE
  4383                           postdec2	equ	0xFDD
  4384                           preinc2	equ	0xFDC
  4385                           plusw2	equ	0xFDB
  4386                           fsr2h	equ	0xFDA
  4387                           fsr2l	equ	0xFD9
  4388                           status	equ	0xFD8

Data Sizes:
    Strings     163
    Constant    4
    Data        0
    BSS         34
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     34      68
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_30(CODE[18]), STR_29(CODE[2]), STR_28(CODE[6]), STR_27(CODE[13]), 
		 -> STR_26(CODE[2]), STR_25(CODE[8]), STR_24(CODE[13]), STR_23(CODE[1]), 
		 -> STR_22(CODE[18]), STR_21(CODE[1]), STR_20(CODE[16]), STR_19(CODE[2]), 
		 -> STR_18(CODE[16]), STR_17(CODE[9]), STR_16(CODE[9]), STR_15(CODE[8]), 
		 -> STR_14(CODE[8]), STR_13(CODE[9]), STR_12(CODE[2]), STR_11(CODE[7]), 
		 -> STR_10(CODE[17]), STR_9(CODE[9]), STR_8(CODE[9]), STR_7(CODE[8]), 
		 -> STR_6(CODE[8]), STR_5(CODE[9]), STR_4(CODE[2]), STR_3(CODE[7]), 
		 -> STR_2(CODE[1]), STR_1(CODE[17]), time(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _main->_trocarSenha
    _trocarSenha->_e2pext_w
    _e2pext_w->_e2pext_r
    _rtc_r->_i2c_rb
    _lcd_init->_lcd_cmd
    _escolha->_e2pext_r
    _lcd_str->_lcd_dat
    _lcd_dat->_lcd_wr
    _lcd_cmd->_lcd_wr
    _e2pext_r->_i2c_rb

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   11838
                                             30 COMRAM     4     4      0
                            _escolha
                           _i2c_init
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                              _rtc_r
                        _trocarSenha
 ---------------------------------------------------------------------------------
 (1) _trocarSenha                                         10    10      0    4964
                                             20 COMRAM    10    10      0
                           _e2pext_r
                           _e2pext_w
                            _lcd_cmd
                            _lcd_dat
                            _lcd_str
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (2) _e2pext_w                                            10     7      3     913
                                             10 COMRAM    10     7      3
                           _e2pext_r
                          _i2c_start
                           _i2c_stop
                             _i2c_wb
 ---------------------------------------------------------------------------------
 (1) _rtc_r                                                1     1      0     345
                                              5 COMRAM     1     1      0
                               _getd
                               _getu
                             _i2c_rb
                          _i2c_start
                           _i2c_stop
                             _i2c_wb
 ---------------------------------------------------------------------------------
 (2) _getu                                                 1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getd                                                 1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      30
                                              3 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _escolha                                             12    10      2    3758
                                             10 COMRAM    12    10      2
                           _e2pext_r
                            _lcd_cmd
                            _lcd_dat
                            _lcd_str
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (2) _tc_tecla                                             8     8      0     240
                                              0 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 (2) _lcd_str                                              5     3      2    2552
                                              3 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (3) _lcd_dat                                              2     2      0      30
                                              1 COMRAM     2     2      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0      30
                                              1 COMRAM     2     2      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (4) _lcd_wr                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _e2pext_r                                             5     3      2     498
                                              5 COMRAM     5     3      2
                             _i2c_rb
                          _i2c_start
                           _i2c_stop
                             _i2c_wb
 ---------------------------------------------------------------------------------
 (3) _i2c_wb                                               4     4      0      60
                                              0 COMRAM     4     4      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _i2c_rb                                               5     5      0      75
                                              0 COMRAM     5     5      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _escolha
     _e2pext_r
       _i2c_rb
         _delay
       _i2c_start
         _delay
       _i2c_stop
         _delay
       _i2c_wb
         _delay
     _lcd_cmd
       _lcd_wr
     _lcd_dat
       _lcd_wr
     _lcd_str
       _lcd_dat
         _lcd_wr
     _tc_tecla
   _i2c_init
   _lcd_cmd
     _lcd_wr
   _lcd_init
     _lcd_cmd
       _lcd_wr
   _lcd_str
     _lcd_dat
       _lcd_wr
   _rtc_r
     _getd
     _getu
     _i2c_rb
       _delay
     _i2c_start
       _delay
     _i2c_stop
       _delay
     _i2c_wb
       _delay
   _trocarSenha
     _e2pext_r
       _i2c_rb
         _delay
       _i2c_start
         _delay
       _i2c_stop
         _delay
       _i2c_wb
         _delay
     _e2pext_w
       _e2pext_r
         _i2c_rb
           _delay
         _i2c_start
           _delay
         _i2c_stop
           _delay
         _i2c_wb
           _delay
       _i2c_start
         _delay
       _i2c_stop
         _delay
       _i2c_wb
         _delay
     _lcd_cmd
       _lcd_wr
     _lcd_dat
       _lcd_wr
     _lcd_str
       _lcd_dat
         _lcd_wr
     _tc_tecla

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     22      44       1       53.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      44      15        0.0%
DATA                 0      0      44       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Fri Dec 10 19:45:39 2021

                      l9 17A8                       l12 173A                       l15 170C  
                     l24 15B8                       l18 1682                       l71 1782  
                     l65 1762                       l82 14D0                       l74 1772  
                     l90 15E8                       l83 1518                       l84 1530  
                     l92 1612                       l68 17A0                       l93 1620  
                     l86 1540                       l78 16D0                       l79 16DE  
                     l98 1474                       u20 16D0                       u21 16CC  
                     u30 14EE                       u14 16A0                       u31 14E6  
                     u15 169C                       u50 1518                       u51 1514  
                     u60 152A                       u44 14FA                       u61 1526  
                     u45 14F6                       u38 14F0                      l102 14BE  
                    l111 178E                      l201 12A8                      l114 1798  
                    l131 07DE                      l117 143A                      l206 1362  
                    l230 0FD4                      l142 0868                      l135 075A  
                    l136 079E                      l250 108E                      l218 0E92  
                    l170 0B4E                      l146 0802                      l147 084A  
                    l139 07C0                      l252 1076                      l245 104A  
                    l173 0BF2                      l262 10FE                      l166 0AE8  
                    l158 0AAE                      l255 10D2                      l247 1034  
                    l167 0B2C                      l272 11B0                      l257 10BA  
                    l177 0B8C                      l169 0B70                      l178 0BD4  
                    l999 1752                      u200 1084                      u201 1080  
                    u210 109C                      u211 1098                      u300 1182  
                    u220 10BA                      u301 117E                      u221 10B6  
                    u310 1192                      u230 10C8                      u150 1016  
                    u311 118E                      u231 10C4                      u151 1012  
                    u320 11A6                      u240 10E0                      u160 1034  
                    u321 11A2                      u241 10DC                      u161 1030  
                    u250 10FE                      u170 1042                      u251 10FA  
                    u171 103E                      u260 110C                      u180 1058  
                    u261 1108                      u181 1054                      u270 113A  
                    u190 1076                      u271 1136                      u191 1072  
                    u280 1160                      u281 115C                      u290 1172  
                    u291 116E                      _est 0017                      wreg 000FE8  
            _trocarSenha 0D8A                     l1001 17A4                     l1003 1774  
                   l1011 1768                     l1005 1778                     l1013 176C  
                   l1007 177C                     l1031 16BE                     l1023 168C  
                   l1015 1686                     l1041 14C2                     l1009 1764  
                   l1033 16C0                     l1025 16B6                     l1017 1688  
                   l1121 1718                     l1201 109C                     l2001 0DAC  
                   l1043 14C6                     l1035 16D2                     l1027 16B8  
                   l1123 171A                     l1211 10F0                     l1203 10AC  
                   l2011 0DC4                     l2003 0DB8                     l1061 1508  
                   l1053 14D2                     l1045 14C8                     l1037 16D6  
                   l1029 16BC                     l1125 1728                     l1117 1710  
                   l1221 112A                     l1301 13D0                     l2101 0FB4  
                   l2021 0DF0                     l1071 153C                     l1063 151A  
                   l1055 14D6                     l1047 14CA                     l1039 16DC  
                   l1127 172A                     l1119 1712                     l1231 1172  
                   l1215 110C                     l1207 10C8                     l1223 113A  
                   l1311 13F8                     l1303 13D8                     l2103 0FC0  
                   l2031 0E24                     l2023 0DFA                     l2015 0DCA  
                   l2111 06C4                     l1073 153E                     l1065 152A  
                   l1057 1504                     l1129 1738                     l1081 16EA  
                   l1241 11AA                     l1233 1182                     l1225 1142  
                   l1209 10E0                     l1217 1116                     l1321 141E  
                   l1313 1402                     l1305 13DE                     l2105 0FCE  
                   l2041 0E66                     l2033 0E2A                     l2025 0E0C  
                   l2017 0DDA                     l2009 0DBC                     l2201 0916  
                   l2121 06F4                     l2113 06CE                     l1067 1532  
                   l1059 1506                     l1083 16EC                     l1235 1192  
                   l1219 1128                     l1227 114A                     l1171 0FD6  
                   l1251 1636                     l1163 1786                     l1323 1422  
                   l1315 1406                     l1307 13E8                     l2051 0EC2  
                   l2043 0E90                     l2035 0E42                     l2027 0E16  
                   l2019 0DDE                     l2203 091C                     l2211 0936  
                   l2131 0720                     l2123 06FA                     l2115 06D6  
                   l2107 06AA                     l1069 1536                     l1085 16FA  
                   l1077 16E2                     l1237 1194                     l1229 1160  
                   l1181 0FF4                     l1173 0FE2                     l1261 166A  
                   l1253 163C                     l1245 1622                     l1325 142A  
                   l1317 140E                     l1309 13F0                     l2061 0EE4  
                   l2053 0ECE                     l2045 0E94                     l2037 0E4A  
                   l2029 0E1C                     l2301 0B5C                     l2221 0972  
                   l2213 094A                     l2205 0928                     l2141 0776  
                   l2133 072E                     l2125 06FE                     l2117 06DC  
                   l2109 06C2                     l1087 16FC                     l1079 16E4  
                   l1239 11A6                     l1191 1042                     l1183 1008  
                   l1175 0FF0                     l1263 1670                     l1255 1650  
                   l1247 1626                     l1167 1792                     l1327 1432  
                   l1319 1416                     l1271 1364                     l2071 0F06  
                   l2063 0EEC                     l2055 0EE0                     l2047 0EA4  
                   l2039 0E56                     l2311 0BAC                     l2303 0B70  
                   l2231 09AA                     l2223 097A                     l2215 095E  
                   l2207 092A                     l2143 077A                     l2135 073E  
                   l2127 0702                     l2119 06E2                     l1089 170A  
                   l1193 1058                     l1185 1016                     l1265 1676  
                   l1257 165E                     l1249 1634                     l1281 1388  
                   l1273 1368                     l2081 0F44                     l2073 0F18  
                   l2049 0EB6                     l2401 0D7E                     l2321 0BF6  
                   l2313 0BAE                     l2305 0B7E                     l2241 09F2  
                   l2233 09BC                     l2225 0982                     l2217 0964  
                   l2209 0932                     l2161 0810                     l2153 07AC  
                   l2145 077C                     l2137 074C                     l2129 0710  
                   l1195 1068                     l1187 1026                     l1267 167C  
                   l1259 1664                     l1291 13AA                     l1283 138C  
                   l1275 136E                     l2091 0F7E                     l2083 0F4C  
                   l2075 0F22                     l2067 0EF2                     l2331 0C1E  
                   l2323 0BFC                     l2315 0BB2                     l2307 0B9A  
                   l2251 0A2A                     l2243 09F4                     l2235 09CC  
                   l2219 0970                     l2227 0986                     l2171 0836  
                   l2163 081E                     l2155 07CE                     l2147 0788  
                   l2139 0768                     l1269 179A                     l1293 13AE  
                   l1285 1394                     l1277 1378                     l2093 0F8C  
                   l2085 0F52                     l2077 0F34                     l2069 0F02  
                   l2341 0C56                     l2333 0C2A                     l2325 0C08  
                   l2317 0BC0                     l2309 0BA8                     l2261 0A4A  
                   l2253 0A30                     l2245 09FC                     l2237 09E0  
                   l2229 0998                     l2181 088E                     l2173 0858  
                   l2165 0822                     l2157 07E6                     l1199 1084  
                   l1295 13B6                     l1287 139C                     l1279 137E  
                   l2095 0F8E                     l2087 0F6A                     l2079 0F3E  
                   l2351 0C84                     l2343 0C68                     l2335 0C36  
                   l2327 0C0C                     l2319 0BE2                     l2271 0A84  
                   l2255 0A3C                     l2263 0A52                     l2239 09E6  
                   l2247 0A04                     l2191 08BC                     l2183 0892  
                   l2175 0870                     l2167 0824                     l2159 07F4  
                   l1297 13BE                     l1289 13A0                     l2097 0F9E  
                   l2089 0F72                     l2361 0CC2                     l2345 0C6E  
                   l2353 0C88                     l2337 0C3C                     l2329 0C12  
                   l2281 0ACC                     l2273 0A88                     l2265 0A64  
                   l2257 0A3E                     l2249 0A16                     l2193 08C2  
                   l2185 0898                     l2177 0876                     l2169 0828  
                   l1299 13C8                     l2099 0FA8                     l2371 0CE6  
                   l2363 0CC4                     l2355 0C9C                     l2347 0C7A  
                   l2339 0C48                     l2291 0B0A                     l2283 0ADA  
                   l2275 0A8C                     l2259 0A42                     l2195 08E0  
                   l2187 08A4                     l2179 0882                     l2267 0A6C  
                   l1901 146E                     l2381 0D16                     l2373 0CFA  
                   l2365 0CC8                     l2357 0CB0                     l2349 0C7C  
                   l2293 0B16                     l2285 0AF6                     l2277 0A9A  
                   l2269 0A7E                     l2197 08F2                     l2189 08B0  
                   l1911 11B2                     l1903 1480                     l2391 0D56  
                   l2375 0D00                     l2383 0D1E                     l2367 0CD0  
                   l2359 0CB6                     l2287 0B04                     l2279 0ABC  
                   l2199 0904                     l1913 11B6                     l1905 1484  
                   l2393 0D58                     l2385 0D32                     l2377 0D0C  
                   l2369 0CD8                     l2289 0B08                     l1931 11E0  
                   l1915 11BC                     l1907 1486                     l2395 0D5C  
                   l2387 0D44                     l2379 0D0E                     l2299 0B3A  
                   l1861 15D8                     l1853 15BA                     l1941 1222  
                   l1933 11F0                     l1925 11D2                     l1917 11C2  
                   l1909 14AE                     l2397 0D64                     l2389 0D4A  
                   l1871 160C                     l1863 15E2                     l1855 15C0  
                   l1951 1258                     l1943 122C                     l1935 11F4  
                   l1927 11DA                     l1919 11CE                     l2399 0D6C  
                   l1873 161A                     l1865 15EE                     l1857 15C4  
                   l1881 154A                     l1961 12AA                     l1953 1260  
                   l1945 1232                     l1937 1206                     l1875 161E  
                   l1867 15F2                     l1859 15C8                     l1883 157A  
                   l1971 12F0                     l1963 12BA                     l1955 126C  
                   l1947 123A                     l1939 1210                     l1891 1448  
                   l1869 1602                     l1885 157C                     l1981 1334  
                   l1973 12FE                     l1965 12CC                     l1957 127C  
                   l1949 1240                     l1893 144C                     l1879 1542  
                   l1983 1340                     l1975 1310                     l1967 12D8  
                   l1959 12A6                     l1895 1450                     l1887 143C  
                   l1991 0D8A                     l1985 134C                     l1977 131C  
                   l1969 12E4                     l1897 1454                     l1889 1442  
                   l1993 0D8E                     l1987 135A                     l1979 1328  
                   l1899 1464                     l1995 0D94                     l1997 0D9A  
                   l1999 0DA6                     STR_1 0617                     STR_2 0627  
                   STR_3 0699                     STR_4 0626                     STR_5 0666  
                   STR_6 0691                     STR_7 0681                     STR_8 0678  
                   STR_9 066F                     u1100 15B8                     u1101 15B4  
                   u1110 1464                     u1111 1460                     u1200 1310  
                   u1120 14AE                     u1201 130C                     u1121 14AA  
                   u1130 14BE                     u1210 0DDA                     u1131 14BA  
                   u1211 0DD6                     u1060 15D8                     u1140 11F0  
                   u1300 0F9E                     u1220 0DF0                     u1061 15D4  
                   u1141 11EC                     u1301 0F9A                     u1221 0DEC  
                   u1070 1602                     u1150 1206                     u1230 0E0C  
                   u1310 06F4                     u1071 15FE                     u2007 16F2  
                   u1151 1202                     u1231 0E08                     u1311 06F0  
                   u1080 1576                     u1160 1222                     u1240 0E90  
                   u1400 07CE                     u1320 0710                     u2017 1702  
                   u1161 121E                     u1241 0E8C                     u1401 07CA  
                   u1321 070C                     u1090 15A8                     u1170 12A6  
                   u1250 0EA4                     u1410 07F4                     u1330 072E  
                   u2027 1720                     u1171 12A2                     u1251 0EA0  
                   u1411 07F0                     u1331 072A                     u1180 12BA  
                   u1260 0EB6                     u1500 0916                     u1420 0802  
                   u1340 074C                     u2037 1730                     u1181 12B6  
                   u1261 0EB2                     u1501 0912                     u1421 07FE  
                   u1341 0748                     u1190 12CC                     u1270 0F02  
                   u1510 094A                     u1430 0810                     u1350 075A  
                   u1087 156C                     u1191 12C8                     u1271 0EFE  
                   u1511 0946                     u1431 080C                     u1351 0756  
                   u1280 0F18                     u1600 0A64                     u1520 095E  
                   u1440 081E                     u1360 0768                     u1097 159E  
                   u1281 0F14                     u1601 0A60                     u1521 095A  
                   u1441 081A                     u1361 0764                     u1290 0F34  
                   u1610 0A7E                     u1530 0998                     u1450 0836  
                   u1370 0776                     u1291 0F30                     u1611 0A7A  
                   u1531 0994                     u1451 0832                     u1371 0772  
                   u1700 0B5C                     u1620 0A9A                     u1540 09AA  
                   u1460 0858                     u1380 079A                     u1701 0B58  
                   u1621 0A96                     u1541 09A6                     u1461 0854  
                   u1381 0796                     u1710 0B7E                     u1630 0ABC  
                   u1550 09BC                     u1470 08E0                     u1390 07AC  
                   u1711 0B7A                     u1631 0AB8                     u1551 09B8  
                   u1471 08DC                     u1391 07A8                     u1800 0CB0  
                   u1720 0B8C                     u1640 0ADA                     u1560 09CC  
                   u1480 08F2                     u1801 0CAC                     u1721 0B88  
                   u1641 0AD6                     u1561 09C8                     u1481 08EE  
                   u1810 0CE6                     u1730 0B9A                     u1650 0AE8  
                   u1570 09E0                     u1490 0904                     u1811 0CE2  
                   u1731 0B96                     u1651 0AE4                     u1571 09DC  
                   u1491 0900                     u1820 0CFA                     u1740 0BA8  
                   u1660 0AF6                     u1580 0A16                     u1821 0CF6  
                   u1741 0BA4                     u1661 0AF2                     u1581 0A12  
                   u1830 0D32                     u1750 0BC0                     u1670 0B04  
                   u1590 0A2A                     u1831 0D2E                     u1751 0BBC  
                   u1671 0B00                     u1591 0A26                     u1840 0D44  
                   u1760 0BE2                     u1680 0B28                     u1841 0D40  
                   u1761 0BDE                     u1681 0B24                     u1850 0D7E  
                   u1770 0C56                     u1690 0B3A                     u1907 1642  
                   u1851 0D7A                     u1771 0C52                     u1691 0B36  
                   u1780 0C68                     u1917 1656                     u1781 0C64  
                   u1790 0C9C                     u1927 124A                     u1791 0C98  
                   u1937 12F6                     u1947 1352                     u1867 0E34  
                   u1957 101C                     u1877 0F5C                     u1967 105E  
                   u1887 0FC6                     u1977 10A2                     u1897 162C  
                   u1987 10E6                     u1997 113C                     _date 000B  
                   _cond 0015                     _getd 1784                     _getu 1790  
                   _main 06AA                     _time 0019                     _novo 0001  
                   fsr0h 000FEA                     indf0 000FEF                     fsr0l 000FE9  
                   indf2 000FDF                     fsr2l 000FD9                     start 0000  
             e2pext_r@ah 002C               e2pext_r@al 002B               e2pext_w@ah 0032  
             e2pext_w@al 0033               e2pext_w@nt 0034             ___param_bank 000000  
                  ?_getd 0023                    ?_getu 0023                    ?_main 0023  
                  STR_10 0628                    STR_11 0699                    STR_12 0626  
                  STR_20 0639                    STR_21 0627                    STR_13 0666  
                  STR_30 0605                    STR_14 0691                    STR_22 0605  
                  STR_23 0627                    STR_15 0681                    STR_16 0678  
                  STR_24 0659                    STR_17 066F                    STR_25 0689  
                  STR_26 06A6                    STR_18 0649                    STR_27 0659  
                  STR_19 06A6                    STR_28 06A0                    STR_29 06A6  
                  _PORTB 000F81                    _PORTD 000F83                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96          __end_of_lcd_dat 170E          __end_of_lcd_cmd 173C  
        __end_of_lcd_str 15BA          __end_of_escolha 1364                    _delay 1752  
                  _linha 0601              escolha@cont 0036                    _rtc_r 1364  
                  tablat 000FF5           trocarSenha@tmp 0040                    status 000FD8  
            e2pext_r@ret 002A              e2pext_w@val 002F              e2pext_w@tmp 0035  
        __initialization 173C             __end_of_getd 1790             __end_of_getu 179A  
           __end_of_main 0D8A         __end_of_i2c_init 17A2         __end_of_i2c_stop 1774  
       __end_of_e2pext_r 1622         __end_of_e2pext_w 14C0                   ??_getd 0023  
                 ??_getu 0023                   ??_main 0041            __activetblptr 000002  
        tc_tecla@timeout 0027                   ?_delay 0023                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   ?_rtc_r 0023       __size_of_i2c_start 0010  
                 _i2c_rb 14C0                   _i2c_wb 1684         __end_of_lcd_init 1684  
                 _lcd_wr 17A2                   clear_0 1742                   getd@nn 0023  
           escolha@senha 0031                ??_lcd_dat 0024                   getu@nn 0023  
              ??_lcd_cmd 0024         __end_of_tc_tecla 11B2                ??_lcd_str 0028  
              ??_escolha 002F          trocarSenha@cont 003E             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
           e2pext_r@addr 0028             e2pext_w@addr 002D               __accesstop 0080  
__end_of__initialization 1748            ___rparam_used 000001           __pcstackCOMRAM 0023  
          __end_of_delay 1764            __end_of_linha 0605             trocarSenha@i 003F  
          __end_of_rtc_r 143C        __end_of_i2c_start 1784             ?_trocarSenha 0023  
                ??_delay 0023                  ??_rtc_r 0028                ?_i2c_init 0023  
              ?_i2c_stop 0023                ?_e2pext_r 0028                ?_e2pext_w 002D  
            tc_tecla@ret 0029              tc_tecla@tmp 0026                  ?_i2c_rb 0023  
                ?_i2c_wb 0023                  ?_lcd_wr 0023                ?_lcd_init 0023  
                i2c_rb@i 0027                  i2c_wb@i 0026               ??_i2c_init 0023  
             ??_i2c_stop 0023               ??_e2pext_r 002A               ??_e2pext_w 0030  
              ?_tc_tecla 0023                  __Hparam 0000          __size_of_i2c_rb 0082  
        __size_of_i2c_wb 005C                  __Lparam 0000             __psmallconst 0600  
        __size_of_lcd_wr 0008                  __pcinit 173C                  __ramtop 0600  
                __ptext0 06AA                  __ptext1 0D8A                  __ptext2 143C  
                __ptext3 1364                  __ptext4 1790                  __ptext5 1784  
                __ptext6 1622                  __ptext7 179A                  __ptext8 11B2  
                __ptext9 0FD6                  _lcd_dat 16E0                  _lcd_cmd 170E  
                _lcd_str 1542                  _escolha 11B2                  main@opc 0041  
             ??_lcd_init 0026     end_of_initialization 1748            __Lmediumconst 0000  
       trocarSenha@senha 0039               ??_tc_tecla 0023                  postinc0 000FEE  
                postinc2 000FDE                _PORTBbits 000F81                _PORTCbits 000F82  
              _PORTDbits 000F83                _PORTEbits 000F84                _TRISCbits 000F94  
              _TRISEbits 000F96               lcd_dat@val 0025               lcd_cmd@val 0025  
   __size_of_trocarSenha 024C                i2c_rb@ack 0025                i2c_rb@ret 0026  
              i2c_wb@val 0025               lcd_str@str 0026           __end_of_i2c_rb 1542  
         __end_of_i2c_wb 16E0           __end_of_lcd_wr 17AA               escolha@tmp 0038  
    start_initialization 173C                _i2c_start 1774        __size_of_i2c_init 0008  
      __size_of_i2c_stop 0010        __size_of_e2pext_r 0068        __size_of_e2pext_w 0084  
               ??_i2c_rb 0023                 ??_i2c_wb 0023                 ??_lcd_wr 0023  
            __pbssCOMRAM 0001               ?_i2c_start 0023        __size_of_lcd_init 0062  
             tc_tecla@to 0024        __size_of_tc_tecla 01DC                 ?_lcd_dat 0023  
               ?_lcd_cmd 0023                 ?_lcd_str 0026                 ?_escolha 002D  
            __smallconst 0600           __size_of_delay 0012           __size_of_rtc_r 00D8  
             _ADCON0bits 000FC2                lcd_wr@val 0023              ??_i2c_start 0023  
               _i2c_init 179A                 _i2c_stop 1764                 _e2pext_r 15BA  
               _e2pext_w 143C                 __Hrparam 0000                 __Lrparam 0000  
       __size_of_lcd_dat 002E         __size_of_lcd_cmd 002E         __size_of_lcd_str 0078  
       __size_of_escolha 01B2                tc_tecla@i 002A            ??_trocarSenha 0037  
               __ptext10 1542                 __ptext11 16E0                 __ptext12 170E  
               __ptext13 17A2                 __ptext14 15BA                 __ptext15 1684  
               __ptext16 1764                 __ptext17 1774                 __ptext18 14C0  
               __ptext19 1752                 _lcd_init 1622            __size_of_getd 000C  
          __size_of_getu 000A            __size_of_main 06E0                 _tc_tecla 0FD6  
               lcd_str@i 002A                 main@temp 0043                 escolha@i 0037  
    __end_of_trocarSenha 0FD6                 rtc_r@tmp 0028  
